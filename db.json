{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/hueman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hueman/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/logo-header.png","path":"css/images/logo-header.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/opacity-10.png","path":"css/images/opacity-10.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/s-left.png","path":"css/images/s-left.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/css/images/thumb-default.png","path":"css/images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/styles.css","path":"libs/titillium-web/styles.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","path":"libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","path":"libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","path":"libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/jquery/2.0.3/jquery.min.js","path":"libs/jquery/2.0.3/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"f1e570a4b3193405d59a082f750d5423804fdde3","modified":1509948226599},{"_id":"source/CNAME","hash":"3728db8568d372cee192683db55fb4f4899470a9","modified":1509948226599},{"_id":"themes/hueman/.gitignore","hash":"2bef15b2d85699a32b4a9d99d1c15d99cca8afa3","modified":1509948226615},{"_id":"themes/hueman/LICENSE","hash":"3975b7883caeb33f61fada7c0ef4add7ab189849","modified":1509948226615},{"_id":"themes/hueman/README.md","hash":"defb1f667677e1fd13b3a4799a6c70eae621f796","modified":1509948226615},{"_id":"themes/hueman/_config.yml","hash":"f33f108cf71490484d329734be5ad8b5f8077d83","modified":1509948226615},{"_id":"themes/hueman/_config.yml.example","hash":"a536e34b5e4c9b549d46b8fa32ed9ed18d22d076","modified":1509948226615},{"_id":"themes/hueman/package.json","hash":"d4ff853568e592265c2c9a21ce358f15babec14a","modified":1509948226619},{"_id":"source/_posts/2016年度总结与复习冲刺阶段.md","hash":"73bcc0dd1f36778c7488ed8e812133acf035a036","modified":1509948226599},{"_id":"source/_posts/Many-to-many模型的创建、添加、保存-Django.md","hash":"0f31df277331c91d6f10f1ce7c05c860d9535762","modified":1509948226599},{"_id":"source/_posts/M站UI自动化过程.md","hash":"66e0cfad7361b86e679d90aa321301c674e82578","modified":1509948226599},{"_id":"source/_posts/New-World.md","hash":"58ebbf288890be77b846d9dca7b185fbd3dc09ac","modified":1509948226599},{"_id":"source/_posts/Python外部脚本调用Django项目的Model.md","hash":"a44da20852a110056c721b36c968280363845c79","modified":1509948226599},{"_id":"source/_posts/Unit7-The-Sampler.md","hash":"ca38880b3a079f9bcda93c794d271eedf46e0324","modified":1509948226599},{"_id":"source/_posts/celery小试牛刀.md","hash":"3133fa2322354396298d91a201dcae01ba57afa5","modified":1509948226599},{"_id":"source/_posts/django-admin的个性定制与方法覆写.md","hash":"5e2b99bcd9331cd5cfa945cb29d69b6dff8652c2","modified":1509948226599},{"_id":"source/_posts/django-添加联合唯一索引.md","hash":"5134c063e37326891129da4c1247ca111b1264d3","modified":1509948226599},{"_id":"source/_posts/django中使用自定义context-processor实现模板全局变量.md","hash":"4b99cef6390b509391137828f0bedc005789cd5f","modified":1509948226599},{"_id":"source/_posts/django项目中jquery初探.md","hash":"340f182c00df852eba3ecce3890195d36526724e","modified":1509948226599},{"_id":"source/_posts/hexo博客自动化发布.md","hash":"ffb9829cf063ed00989d386ee3695df753858617","modified":1509949911134},{"_id":"source/_posts/linux下一句话Kill进程.md","hash":"ed548034ae805f23491c4ee262e5c872e093e6e6","modified":1509948226599},{"_id":"source/_posts/linux免密码认证配置.md","hash":"8b113318af6cf0a8043fa718553a92c6d9622b55","modified":1509948226599},{"_id":"source/_posts/phpMyAdmin导出excel文件解析时的坑.md","hash":"7c2636a1ec1e4bc6792d13dfdb2c5f03ddb8ca03","modified":1509948226599},{"_id":"source/_posts/pycharm-license-server.md","hash":"71b2b9ff59d6d396b1863a7ca109f0e7a9dd0ea2","modified":1509948226599},{"_id":"source/_posts/python-process-control-cycle-While-and-For.md","hash":"b21a77b0a53f7c0e266a7c06d37d920c78010b26","modified":1509948226599},{"_id":"source/_posts/python中的排序操作.md","hash":"db41656d6474008ea964c553f59e91da52c26995","modified":1509948226599},{"_id":"source/_posts/python中的文件读取.md","hash":"10802d1a006d5efa2c9f50d6bed1fd6e89bbc1b8","modified":1509948226599},{"_id":"source/_posts/python安装PIL模块.md","hash":"71693f3feb38b3293c9fe2c44a20c8643622e042","modified":1509948226599},{"_id":"source/_posts/python数据结构之二叉树-Binary-tree.md","hash":"ab36cf7bf2a2e2e41c2dacdfad973619dd484866","modified":1509948226599},{"_id":"source/_posts/python设计模式之单例模式-singleton-pattern.md","hash":"9af533451389093afecfa1f8c5e1b42b8e278b7a","modified":1509948226599},{"_id":"source/_posts/python风格指南.md","hash":"6684aff8bbe60c3a1c1e1fdc88653ece3d72d488","modified":1509948226599},{"_id":"source/_posts/sense8-what-s-up.md","hash":"d417c0f6e04562c704382e267b8ae5e8ca00ffab","modified":1509948226599},{"_id":"source/_posts/start-hexo.md","hash":"4a27acde7222aadfc58da46b199a625e396893f0","modified":1509948226599},{"_id":"source/_posts/talking-about-python-unittest.md","hash":"8c8c2579fcb724b81a7b7275526c04428958c8c7","modified":1509948226599},{"_id":"source/_posts/ubuntu-常用工具.md","hash":"33a9bbd6b728690d7b6e6ec37b9dc6a83ed555d7","modified":1509948226615},{"_id":"source/_posts/ubuntu下使用Thunderbird连接Exchange邮件服务器.md","hash":"81cccd2ada633d025f8dcf76a0e98577db665faf","modified":1509948226615},{"_id":"source/_posts/ubuntu创建程序快捷方式.md","hash":"d05866edf7f1d2b8a6aefc004f4e29ee8e4055ed","modified":1509948226615},{"_id":"source/_posts/url的解析方式.md","hash":"0221b08761e242d39ebcf3c7d1e70e1ca912130f","modified":1509948226615},{"_id":"source/_posts/使用urlparse修改url.md","hash":"a338667f6ac32eaa1125af81dd4d7fb7b3a133af","modified":1509948226615},{"_id":"source/_posts/图片测试.md","hash":"9aa9b6792b4a8c260ed88dcb646f6c7d7dca6e89","modified":1509948226615},{"_id":"source/_posts/在POST请求中，如何获取select的值.md","hash":"0f08d17222dbb813ab7b4c51a00ede22fabd85e7","modified":1509948226615},{"_id":"source/_posts/基于python环境的各类环境搭建.md","hash":"3f8b4ced49f1e8b890481ddd2488396a80e144b4","modified":1509948226615},{"_id":"source/_posts/如何将一个已经存在的目录转换为GIT项目并托管到github或coding仓库.md","hash":"431ab9039421201a9b923b2a248232afcf7f4e9e","modified":1509948226615},{"_id":"source/_posts/居住证办理.md","hash":"826854269665c5b4fb37ad2c9bd725e8c4c00a92","modified":1509948226615},{"_id":"source/_posts/批量删除redis-keys.md","hash":"7f73bf9f3fc205b295d0ac8f799cfcf4b0ba314a","modified":1509948226615},{"_id":"source/_posts/接口自动化，用例分析.md","hash":"3083797c3e15d006019a2ce196cffc6d9b2474c5","modified":1509948226615},{"_id":"source/_posts/搭建自己的shadowsocks服务器.md","hash":"7253c022db981183001d8c7e26b90f2287758dd2","modified":1509948226615},{"_id":"source/_posts/查看shadowsocks服务器的用户连接数.md","hash":"44d952d74662b9472a5c50d42957aa05b7b9dc49","modified":1509948226615},{"_id":"source/_posts/简单递归.md","hash":"ec65abbc44251fa95e4c085fa045d559a308f051","modified":1509948226615},{"_id":"source/_posts/英语中虚拟语气的用法及解析.md","hash":"54d737a26a638d7bb94402411f8e9c03525d53bd","modified":1509948226615},{"_id":"source/_posts/高分电影之地球脉动-Planet-Earth-Season.md","hash":"243609c5a8f7aec9bdee0b6fe7dacb419ea602e3","modified":1509948226615},{"_id":"source/about/index.md","hash":"a94aeba07fbe072ba528cd6f2104e863a0571ccc","modified":1509948226615},{"_id":"source/categories/index.md","hash":"ccb8a6312b2993aaf9631b5e77474bbbb5d28a3c","modified":1509948226615},{"_id":"source/guestbook/index.md","hash":"1425d1bfc00e99105246f280945a7c1e131575af","modified":1509948226615},{"_id":"source/link/index.md","hash":"1ba71c4eb196c45005a3fb4f79d1fdbe24dc27ce","modified":1509948226615},{"_id":"source/search/index.md","hash":"ff5f80cc8357287c8acbc4403e3a0f9548112761","modified":1509948226615},{"_id":"source/tags/index.md","hash":"7912b5fc22bcc4fb4b54ec8227da2be3d73f01b7","modified":1509948226615},{"_id":"themes/hueman/.github/ISSUE_TEMPLATE.md","hash":"1ce6c6330e2e37fcf4764d69ed2c43670e30eb23","modified":1509948226615},{"_id":"themes/hueman/languages/ca.yml","hash":"d082e6f9e7615556b8f6c5f1286f0db8a0db195e","modified":1509948226615},{"_id":"themes/hueman/languages/en.yml","hash":"3416fee358d869e6abf0cca695edf8386349053f","modified":1509948226615},{"_id":"themes/hueman/languages/es.yml","hash":"97191c8ab7ce5334369d96f6e53a6d365a2057b1","modified":1509948226615},{"_id":"themes/hueman/languages/fr.yml","hash":"0624f8f7532f1312caaf4f8d498aab69c80a92f2","modified":1509948226615},{"_id":"themes/hueman/languages/hu.yml","hash":"5dd987ad5f33748bcba1d9a7eb78c1800b7c8bed","modified":1509948226615},{"_id":"themes/hueman/languages/id.yml","hash":"03e45cf88b69e657a340362e18668e443ddaae47","modified":1509948226615},{"_id":"themes/hueman/languages/ja.yml","hash":"56f3af0bf5cc56f9f7bf24fe5cb881a6a1b34e7b","modified":1509948226615},{"_id":"themes/hueman/languages/ko.yml","hash":"81ea44ecda87a4398bb6d88a3b02f6b73c9a1637","modified":1509948226615},{"_id":"themes/hueman/languages/pt-BR.yml","hash":"6f9539673e08d66866bb210b78863ef68023f991","modified":1509948226615},{"_id":"themes/hueman/languages/ru.yml","hash":"99f111b39f867d421ff4cb859dd1deb26caa382e","modified":1509948226615},{"_id":"themes/hueman/languages/tr.yml","hash":"003cb50200eba865d57e5c53925636f1a5ec0a70","modified":1509948226615},{"_id":"themes/hueman/languages/vi.yml","hash":"edeb4492a08af458fe958dc4d48101c96750b159","modified":1509948226615},{"_id":"themes/hueman/languages/zh-CN.yml","hash":"05737aa022a007b97034a9d9fc80e606d5a25598","modified":1509948226615},{"_id":"themes/hueman/languages/zh-TW.yml","hash":"7cebb92ebcf9afb67f641192d69133a379fec1f1","modified":1509948226615},{"_id":"themes/hueman/layout/archive.ejs","hash":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1509948226615},{"_id":"themes/hueman/layout/category.ejs","hash":"5096d3f019098d9940429152295f6d6161d887ba","modified":1509948226615},{"_id":"themes/hueman/layout/index.ejs","hash":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1509948226619},{"_id":"themes/hueman/layout/layout.ejs","hash":"35fd7fe6d4e2d313246a0a31446a597714facdea","modified":1509948226619},{"_id":"themes/hueman/layout/page.ejs","hash":"5afddd6a45fa72beacec8d760487dfe8a667e622","modified":1509948226619},{"_id":"themes/hueman/layout/post.ejs","hash":"5afddd6a45fa72beacec8d760487dfe8a667e622","modified":1509948226619},{"_id":"themes/hueman/layout/tag.ejs","hash":"8785477232088e09a75da88a0cdcb32fedf4f81f","modified":1509948226619},{"_id":"themes/hueman/scripts/excerpt.js","hash":"630f17f2647b2ba5b207dba36fb3c6587a3aa04f","modified":1509948226619},{"_id":"themes/hueman/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1509948226619},{"_id":"themes/hueman/scripts/thumbnail.js","hash":"e78b1b978fa1acad5409afc685d13f669e80b24f","modified":1509948226619},{"_id":"themes/hueman/layout/comment/changyan.ejs","hash":"15b1b871425a4c1b57ef4eb40a35df8d02c3b6d2","modified":1509948226615},{"_id":"themes/hueman/layout/comment/counter.ejs","hash":"237fe2f89c128fe4f7c1edb9187f504f42cb5e74","modified":1509948226615},{"_id":"themes/hueman/layout/comment/disqus.ejs","hash":"83158f5b00f95acf847524fd7ffeb5aab25add78","modified":1509948226615},{"_id":"themes/hueman/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1509948226615},{"_id":"themes/hueman/layout/comment/facebook.ejs","hash":"5ee16430a4435c2fead0275ff83fc98092d73d4c","modified":1509948226615},{"_id":"themes/hueman/layout/comment/index.ejs","hash":"57206372c77adeeb4637d744e2be769d0094585b","modified":1509948226615},{"_id":"themes/hueman/layout/comment/isso.ejs","hash":"4f8b81ff5bb418ec11ce080d515f247bfe436014","modified":1509948226615},{"_id":"themes/hueman/layout/comment/scripts.ejs","hash":"d0c876d639cf903c9500a4fe8be5f5a9c3b2d509","modified":1509948226615},{"_id":"themes/hueman/layout/comment/valine.ejs","hash":"4f58a9195df1e78211d1b4957d042e056a09f760","modified":1509948226615},{"_id":"themes/hueman/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1509948226615},{"_id":"themes/hueman/layout/common/archive.ejs","hash":"bf909e4d6798374daf114cf41540f2bd300408d9","modified":1509948226615},{"_id":"themes/hueman/layout/common/article.ejs","hash":"94369b0078a61f6f07264f686cef1cede0fd1997","modified":1509948226615},{"_id":"themes/hueman/layout/common/content-title.ejs","hash":"43288ebc0ea30d80e6d7df56f2e7ed5d7935ed1a","modified":1509948226615},{"_id":"themes/hueman/layout/common/footer.ejs","hash":"4d01bd3d28820936b0d09529b60e9d6930afc9fe","modified":1509948226615},{"_id":"themes/hueman/layout/common/head.ejs","hash":"5350631470682a54aba9863d0c6e190689a31ec9","modified":1509948226619},{"_id":"themes/hueman/layout/common/header.ejs","hash":"4dbb53393c3ebef01088592babf135d2f6559f47","modified":1509948226619},{"_id":"themes/hueman/layout/common/scripts.ejs","hash":"db677ab336d31292bffc071b2115e25e9c6f198d","modified":1509948226619},{"_id":"themes/hueman/layout/common/sidebar.ejs","hash":"745666ee78b714aa34d8774a005a0598261ec349","modified":1509948226619},{"_id":"themes/hueman/layout/common/summary.ejs","hash":"42d6f99906ae96a6d00ee9a727405e47ec5e7c81","modified":1509948226619},{"_id":"themes/hueman/layout/common/thumbnail.ejs","hash":"c5fba5d5287f49e02040c530cd92312b2221a2c1","modified":1509948226619},{"_id":"themes/hueman/layout/plugin/baidu-analytics.ejs","hash":"d99089976258050666208f29000f84496fe1029c","modified":1509948226619},{"_id":"themes/hueman/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1509948226619},{"_id":"themes/hueman/layout/plugin/scripts.ejs","hash":"05c255e6908c0b9d4df7fd35469776eee667fae0","modified":1509948226619},{"_id":"themes/hueman/layout/search/baidu.ejs","hash":"bcffa60f2d1750ac7499e928f538176e3804393b","modified":1509948226619},{"_id":"themes/hueman/layout/search/index.ejs","hash":"1a6a742727018567f60f8815be0bff5a45294ce5","modified":1509948226619},{"_id":"themes/hueman/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1509948226619},{"_id":"themes/hueman/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1509948226619},{"_id":"themes/hueman/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1509948226619},{"_id":"themes/hueman/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1509948226619},{"_id":"themes/hueman/layout/share/default.ejs","hash":"7492f5b375a56c67a1a1a4f6b893e37f49dc86dc","modified":1509948226619},{"_id":"themes/hueman/layout/share/index.ejs","hash":"029e91aace5a4c0d8387fc7744c477ccc6865c30","modified":1509948226619},{"_id":"themes/hueman/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1509948226619},{"_id":"themes/hueman/layout/widget/archive.ejs","hash":"c4d303eaaa23768e52ead324c422a8900b1fe448","modified":1509948226619},{"_id":"themes/hueman/layout/widget/category.ejs","hash":"2d705df76f2eef7d695a971266fc104e89ca6bcd","modified":1509948226619},{"_id":"themes/hueman/layout/widget/links.ejs","hash":"97dab84d6336a4c926ddc288d5a6c264f54c50c3","modified":1509948226619},{"_id":"themes/hueman/layout/widget/recent_posts.ejs","hash":"16a2bd28bdf520616202670a18c6cc93d1dd3f54","modified":1509948226619},{"_id":"themes/hueman/layout/widget/sticky_posts.ejs","hash":"6bad4126bed652f5f9e93027cbe3ee03b67b034a","modified":1509948226619},{"_id":"themes/hueman/layout/widget/tag.ejs","hash":"bfbc63e675439dcdc35e07dce6948e41500b649c","modified":1509948226619},{"_id":"themes/hueman/layout/widget/tagcloud.ejs","hash":"3ecb048d6098bc3953043a4c25f1f7c4b23397cf","modified":1509948226619},{"_id":"themes/hueman/source/css/_extend.styl","hash":"c2160499dc89c524ff17cd2e3fcbb8df83ebca1a","modified":1509948226619},{"_id":"themes/hueman/source/css/_responsive.styl","hash":"4addaf2f203563accf0479850eda1ab4f4a4c34b","modified":1509948226619},{"_id":"themes/hueman/source/css/_variables.styl","hash":"ce03de3658b55b5f90bb4dd18679be18ec38acaa","modified":1509948226619},{"_id":"themes/hueman/source/css/style.styl","hash":"b76d43839bda01ee791e71093f009ad2c8b093b2","modified":1509948226619},{"_id":"themes/hueman/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1509948226619},{"_id":"themes/hueman/source/js/main.js","hash":"a15519ae8a397557cc594e8fb2f34fa9468f70fa","modified":1509948226619},{"_id":"themes/hueman/layout/common/post/date.ejs","hash":"198f75157a776b3e05eeb5da85b14a42027bd524","modified":1509948226619},{"_id":"themes/hueman/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1509948226619},{"_id":"themes/hueman/layout/common/post/nav.ejs","hash":"c5f41ebf451cff39eaf116096604ce706a175767","modified":1509948226619},{"_id":"themes/hueman/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1509948226619},{"_id":"themes/hueman/layout/common/post/title.ejs","hash":"6d19c61afb1f5f71c483be2ce37c6820ac2cd8b5","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/index.styl","hash":"d421ed06c84f7a561b293f662a670bf132d41c63","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1509948226619},{"_id":"themes/hueman/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/archive.styl","hash":"5e5fb791ab54f0acf33850f586f7aa8cb2782f3a","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/article.styl","hash":"1c8f7d4c6f03e7229665855e184b57b3b40733d2","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/assets.styl","hash":"3d95417663c5a737f064a31ab4ef52bac7fda8df","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/comment.styl","hash":"d2de8f2c1cf6236ead0800c2a1566e01e7ae0b44","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/footer.styl","hash":"8dffae4ac6a57e506e378a9ce44b85a15a912cad","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/header.styl","hash":"f94fcb4e2cbda45c8dc910ddb8ff4f19ff0644bf","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/insight.styl","hash":"3d66323e7b75ad197e80d7189a8d9216e1e1ef2f","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/nav.styl","hash":"587a9c9d304ed83eb0331a1d16693461805311c3","modified":1509948226619},{"_id":"themes/hueman/source/css/_partial/sidebar.styl","hash":"1e6255f1bfa1a820f70d5cfdadf2caa726bf853d","modified":1509948226619},{"_id":"themes/hueman/source/css/images/logo-header.png","hash":"a874be8f3e33831614a421d1a74d2c13bd5eba59","modified":1509948226619},{"_id":"themes/hueman/source/css/images/opacity-10.png","hash":"bbc979866c5b50e8adb348419154b28b1ff44d78","modified":1509948226619},{"_id":"themes/hueman/source/css/images/s-left.png","hash":"c8cac4f4e3492606fab93196364bd0f87d93bb98","modified":1509948226619},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1509948226619},{"_id":"themes/hueman/source/css/images/thumb-default.png","hash":"2d0ba175d958d342494241c616a74d37f48059fb","modified":1509948226619},{"_id":"themes/hueman/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1509948226627},{"_id":"themes/hueman/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1509948226627},{"_id":"themes/hueman/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1509948226627},{"_id":"themes/hueman/source/libs/titillium-web/styles.css","hash":"d98f0c50aae4c922cd0b663fa820fd7dff2dd9b1","modified":1509948226627},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1509948226619},{"_id":"themes/hueman/source/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1509948226619},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1509948226627},{"_id":"themes/hueman/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1509948226627},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1509948226627},{"_id":"themes/hueman/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1509948226627},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcSo_WB_cotcEMUw1LsIE8mM.woff2","hash":"6d17eac7fcc2866f10d1f2725a08ab749a6e978d","modified":1509948226627},{"_id":"themes/hueman/source/libs/titillium-web/fonts/7XUFZ5tgS-tD6QamInJTcZSnX671uNZIV63UdXh3Mg0.woff2","hash":"78029561e4c2ec565ea11c3f5bbd052b018af8a6","modified":1509948226627},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr4-67659ICLY8bMrYhtePPA.woff2","hash":"4e5557954ec161edc03b6f971ddefee6179c1305","modified":1509948226627},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr46gJz9aNFrmnwBdd69aqzY.woff2","hash":"1454a4753468b607c23deac9f5438cd0ed5cb35d","modified":1509948226627},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr9INifKjd1RJ3NxxEi9Cy2w.woff2","hash":"1758c64c8acec4497735ccb5336b1a518d24024c","modified":1509948226627},{"_id":"themes/hueman/source/libs/titillium-web/fonts/anMUvcNT0H1YN4FII8wpr_SNRT0fZ5CX-AqRkMYgJJo.woff2","hash":"e2e2993940fc54ed41f26e39257fdbd824c05e81","modified":1509948226627},{"_id":"themes/hueman/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1509948226623},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1509948226623},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1509948226623},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1509948226627},{"_id":"themes/hueman/source/libs/jquery/2.0.3/jquery.min.js","hash":"a6eedf84389e1bc9f757bc2d19538f8c8d1cae9d","modified":1509948226627},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1509948226623},{"_id":"themes/hueman/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1509948226623}],"Category":[{"name":"总结","_id":"cj9nwxql200054rd398pq7js1"},{"name":"django","_id":"cj9nwxql9000c4rd31s94dh6n"},{"name":"test","_id":"cj9nwxqlh000j4rd3hlgkdn3d"},{"name":"English","_id":"cj9nwxqlo000u4rd3djsguud8"},{"name":"python","_id":"cj9nwxqlv00134rd3mx50pcmj"},{"name":"hexo","_id":"cj9nwxqma001h4rd327v48mqy"},{"name":"linux","_id":"cj9nwxqme001n4rd3axmmvfbs"},{"name":"django","parent":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqmt00224rd3aul3aga2"},{"name":"设计模式","parent":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqmz002i4rd38bh5a0p5"},{"name":"标准","parent":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqn4002r4rd3ltq5tnpt"},{"name":"life","_id":"cj9nwxqn7002x4rd3msaefaz6"},{"name":"ubuntu","parent":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqn900344rd3qjzmi6t2"},{"name":"精彩美剧","parent":"cj9nwxqn7002x4rd3msaefaz6","_id":"cj9nwxqnc003b4rd3whi81d1x"},{"name":"redis","_id":"cj9nwxqnh003m4rd3geesj1he"},{"name":"自动化","_id":"cj9nwxqnl003t4rd3lxqpzz8o"},{"name":"vps","parent":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqno003y4rd391yh12tw"},{"name":"高分电影","parent":"cj9nwxqn7002x4rd3msaefaz6","_id":"cj9nwxqnr00494rd3b0ma36sc"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"http://www.goldage.me\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"http://www.goldage.me\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","date":"2017-11-06T06:03:46.599Z","updated":"2017-11-06T06:03:46.599Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cj9nwxqjm00004rd30kf7ykat","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://www.goldage.me\" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"http://www.goldage.me\" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>"},{"title":"关于我","date":"2016-12-08T21:39:31.000Z","comments":0,"_content":"> Tester\n\n---\n> pythoner, autohome, beijing\n\n---\n> python, django\n\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-12-09 05:39:31\ncomments: false   #去除多说评论框\n---\n> Tester\n\n---\n> pythoner, autohome, beijing\n\n---\n> python, django\n\n\n","updated":"2017-11-06T06:03:46.615Z","path":"about/index.html","layout":"page","_id":"cj9nwxqkx00024rd3lttn6pl2","content":"<blockquote>\n<p>Tester</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>pythoner, autohome, beijing</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>python, django</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Tester</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>pythoner, autohome, beijing</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>python, django</p>\n</blockquote>\n"},{"title":"categories","date":"2016-12-12T09:46:58.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-12-12 17:46:58\ntype: \"categories\"\ncomments: false   #去除多说评论框\n---\n","updated":"2017-11-06T06:03:46.615Z","path":"categories/index.html","layout":"page","_id":"cj9nwxql100044rd3out0yi8s","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"最近访客","date":"2016-12-12T10:31:02.000Z","headline":false,"_content":"<blockquote class=\"blockquote-center\"><h1>There is a will, There is a way.</h1></blockquote>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","source":"guestbook/index.md","raw":"---\ntitle: 最近访客\ndate: 2016-12-12 18:31:02\nheadline: false\n---\n<blockquote class=\"blockquote-center\"><h1>There is a will, There is a way.</h1></blockquote>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","updated":"2017-11-06T06:03:46.615Z","path":"guestbook/index.html","comments":1,"layout":"page","_id":"cj9nwxql500084rd3zkxp0jnh","content":"<p><blockquote class=\"blockquote-center\"><h1>There is a will, There is a way.</h1></blockquote></p>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>","site":{"data":{}},"excerpt":"","more":"<p><blockquote class=\"blockquote-center\"><h1>There is a will, There is a way.</h1></blockquote></p>\n<div class=\"ds-recent-visitors\" data-num-items=\"28\" data-avatar-size=\"42\" id=\"ds-recent-visitors\"></div>"},{"title":"link","layout":"link","comments":0,"date":"2017-09-25T08:17:20.000Z","_content":"","source":"link/index.md","raw":"---\ntitle: link\nlayout: link\ncomments: false\ndate: 2017-09-25 16:17:20\n---\n","updated":"2017-11-06T06:03:46.615Z","path":"link/index.html","_id":"cj9nwxql7000a4rd3l3jbiijo","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"search","layout":"search","comments":0,"date":"2017-09-25T08:18:58.000Z","_content":"","source":"search/index.md","raw":"---\ntitle: search\nlayout: search\ncomments: false\ndate: 2017-09-25 16:18:58\n---\n","updated":"2017-11-06T06:03:46.615Z","path":"search/index.html","_id":"cj9nwxql9000e4rd3mwsjfdtc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2016-12-12T09:45:49.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-12-12 17:45:49\ntype: \"tags\"\ncomments: false   #去除多说评论框\n---\n","updated":"2017-11-06T06:03:46.615Z","path":"tags/index.html","layout":"page","_id":"cj9nwxqlf000g4rd3s0z9gwt5","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2016年度总结与复习冲刺阶段","date":"2016-12-19T01:35:53.000Z","_content":"\n2016年终总结与复习汇总，用来记录\n====\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-9/64847872-file_1494299007302_51eb.jpg)\n<!--more-->\n## 复习汇总\n\n### deadline\n\n|subject|endtime|\n|----:|----:|\n|data structure|2017.01.08 am|\n|english|2017.01.08 pm|\n\n\n### English\n\n#### vocabulary\n\n背单词就靠她了[Quizlet](https://quizlet.com/yangeren)\n\n自己把单词录入一遍，加深记忆，然后再背；\n目前后面的几章都没录呢。。。\n\n#### translate\n\n1. There was a place for everything and everything was always in its place.\n\n`样样东西都有个固定的地方，且每个东西总有他合适的地方`\n\n2. I was really amazed at what I saw.\n\n`我对我看到的情况感到惊讶`\n\n3. In a certain store where they sell pudding a number of these delicious thiings are laid out in row during the Chrismas season.\n\n`有一家出售布丁的商店，每年圣诞节期间都把许多这类美味的食品摆成一排供顾客选购`\n\n4. The elderly gentleman who was poorly but neatly dressed.\n\n`这位老先生衣着虽然破旧，但却十分整洁`\n\n5. This is not bad either, but a little too heavy.\n\n`这种也不错，可是稍微腻了一点。`\n\n6. And that was the last I saw or heard of the old man.\n\n`打这以后我再也没有看到这位老人，也没有听到过有关他的情况。`\n\n7. But appear to be shocked into such deep pleasure that speech had escaped me.\n\n`而是看上去惊喜得连话也说不出来了。`\n\n8. It never really worked until the actors managed to cry a few quiet tears.\n\n`直到演员们设法哭出几滴无声的眼泪时才真正起到了作用。`\n\n9. Don't carry on about it.\n\n`别大惊小怪了。`\n\n10. We have come to the conclusion.\n\n`根据上周发射的卫星所提供的资料。`\n\n#### sentence pattern\n把老师特意备注的几种句型的用法总结起来，目前已经总结了\n[虚拟语气](http://sugar.yer.pub/2016/12/16/%E8%8B%B1%E8%AF%AD%E4%B8%AD%E8%99%9A%E6%8B%9F%E8%AF%AD%E6%B0%94%E7%9A%84%E7%94%A8%E6%B3%95%E5%8F%8A%E8%A7%A3%E6%9E%90/)\n的用法，其它语法还有待整理。\n\n#### 期末考试--复习内容\n\n1.\t考试内容及题型\n2.\t生词(unit6-10)\n3.\t课文（重点句子）(unit6-10)\n4.\t课后练习(unit6-10)\n\n##### 考试内容及题型\nUnit6-unit10\n题型（第一次考试40分，补考100分）：\n选择题：20%，20题，共20分\n完型句子：10%，5题，共10分\n阅读：10%，2篇，共10分\n英译汉翻译：20%，10题，共20分\n\n##### 生词(unit6-10)\nUnit6:\n```english\nefficiency  n.  效率   inefficiency无效率的\nelementary adj. 初等的，初级的     elementary school 小学     middle school中学\nexpert n. 专家    be expert at/in doing做。。。在行\nfoundation n. （物理的）基础   basis抽象的基础\nfound v.成立  founded过去式    Fund n. 资金，基金\nfindings n. （调查或研究的）结果\nunfortunately .adv 不幸的是，遗憾的是  misfortune n.不幸    unlikely不太可能\nproject n. 项目，方案\namaze vt. 使大为惊讶，使惊愕  astonished,surprise,wonder（惊奇，向弄明白）\n人+amazed（感到惊讶的）   物+amazing（令人惊讶的）\nrelieve .vt 减轻，援助    relive重生   release释放      Reveal 泄露，使显露\nboring .adj 令人厌烦的 （人+boried，物+boring）\nirregular 不规则的，不稳定的\ndecrease 减少  increase增加\nsuggestion n. 建议     suggest v. 建议+(should)+do原型\nfind out 找出，查明，发现\nturn out 结果是，证明是，生产，产出\ncarry out执行\nin additon to=besides除…之外,还有（包含在内）\nexcept 除…之外（同类的，不包含在内）\nexcept for 除…之外（不同类的，不包含在内）\nresult in+结果  lead to+结果\nresult from+原因\nkeep up with 跟上            put up with 容忍                  come up with  追赶上，找到，发现，提出\n```\n\nUnit7:\n```english\nAdvantage 利益，好处，优点  disadvantage         Take advantage of 利用\nElderly .adj 上了年纪的   old的比较级是older  elder本身就是形容词，用于家庭成员间\nEventually  最终，终于 finally    at last\n少记录一个单词\nLay out    spread out陈列\nin a row    成一长行\nto one's taste   合...口味，中...的意\ntake advantage of   利用\nand what's more    and more importantly 而且，更重要的是\nall right      确实，无疑地\nbreak off  中止，中断   take off起飞\nbreak into 破门而入\nbreak out （战争等）突然发生，爆发\ncome down (in the world) 落泊，潦倒；失势\nout of place   不适当的；不相称的\ndo sb. a favo(u)r     给某人以恩惠；帮某人忙\nmistake...for    把...错认为\npull（take） out  抽出，取出\ncount out     逐一数出\nlong for   +sb/sth/doing渴望、想念\nlong for sb to do盼望某人做某事\nlong to+do原型  渴望、想念\n```\n\nUnit8\n```english\nAstonish vt. 使大为惊讶\nReveal 泄露，使显露\nAvoid 防止，避免\nCompose 撰写，创作    be compose of由……组成\nConfidence n.信心，把握，自信\nIn search of寻找\nRob(sb) of(sth)剥夺，抢劫\nCome upon 偶尔遇见（或发现）\nCome true 实现，成真\nHold back 抑制，控制\n```\nUnit9\n```english\nConference 记者招待会\nTechnology 技术\nConclusion n. 结论    conclude v.\nDeadly 致命的\nSurvive vi. 幸存，活下来  survival n.\nPollute vt. 污染  pollution n.\nEmit  vt. send out 散发（give off），射出   emission n.\nFund n. 资金，基金\n（be） known as 以。。。闻名，通常名叫\nName after 以。。。名字命名\nBase on/upon 以。。。为基础，把。。。基于\nBe composed of 由。。。组成\n```\n**Unit10**\n```english\nTighten v. （使）变/绷紧\nDream of 向往，渴望\nTake over 占用，接管\n```\n##### 课文（重点句子）(unit6-10)\n\nUnit6:\n```english\nIndustrial Engineer工业(管理)工程师\nShe means that I have always wanted everything to be well organized(有组织的) and neat(整洁的) 她的意思是说，我一贯希望把样样东西都安排得井井有条，整整齐齐\neverything was always in its place（in one‘s place适当的地方）样样东西总是放在适当的地方\nI was really amazed（惊讶） at what I saw.我对所见的感到非常地惊讶\nMost curious of all（最惊奇的是）, there was no quality control whatsoever.最为奇怪的是，厂里竟然没有任何质量控制\n```\n\nUnit7\n```english\nIn a certain store（店） where they sell puddings布丁, a number of these delicious things are laid out in a row during the Christmas season(圣诞季).\n有一家出售布丁的商店，每年圣诞节期间都把许多这类美味的食品摆成一排供顾客选购\nThe elderly上了年纪的 gentleman, who was poorly（破旧） but neatly dressed 这位老先生衣着虽然破旧，但却整洁\nThis is not bad either（也不错）, but a little too heavy（油腻） 这种也不错，可是稍微腻了一点\nAnd that was the last I saw or heard of the old man。打（从）这以后我再也没有看到这位老人，也没有听到过有关他的情况\n```\nUnit8\n```english\nSpeech(演讲，说话) had escaped（逃跑） me.连话也说不出来了（说不出话）\nIt never really worked(起作用) until the actors（演员） managed to（设法做成某事） cry a few quiet tear（无声的眼泪） 直到演员们设法哭出几滴无声的眼泪时才真正起到作用\nAll right now,don’t carry on about it.It’s only a bicycle.\"好了，别大惊小怪了(没什么大不了的)。只不过是一辆自行车\n```\nUnit9\n```english\nWe have come to得出 the conclusion(结论),based on last week’s satellite landing. 根据上周发射的卫星所提供的资料，我们已经得出结论\nFor one thing首先,Earth’s surface表面 in the area of Manhattan曼哈顿 is composed of由。。组成 solid坚固的 concrete混凝土 and nothing can grow there.\n首先，曼哈顿地区的地球表面均由坚固的混凝土构成，那里什么东西也无法生长\n```\nUnit10（没有学习课文内容）\n\n##### 课后练习(unit6-10)\nUnit6\n```english\nEvery one of them agreed to his proposal(建议) except her.(同类，除。。之外)\nThe overcat is ready except for the buttons.(不同类，除。。之外)\n1) 据报道，那条铁路曾因洪水而停止修建。It was reported that the building of the railway had been held up by a flood.\n4) 我很想买这本英文词典，遗憾的是我身上带的钱不够。I'd like very much to buy the English dictionary. Unfortunately, I haven't got enough money on me.\n```\nUnit7\n```english\nThis broken hammer（榔头） is no use any more.The hammer is unless.\nThe shop girl has hope that she will get a raise(加薪).She is hopeful of a raise.\nHe talks/talked about Florida as if（好像，似乎） he had been there.\nHe orders me about as if he were my boss.\n萨姆买不起他极想要的那种照相机，因为那相机太贵了。Sam could not afford (to buy) the camera he longed for because it was too expensive.\n他是个富人家的儿子，不过看上去已经家道中落了。He is the son of a wealthy family, but he seems to have come down in the world.\n我怀疑这家工厂什么质量控制也没有。经过一周的观察，我发现情况果真如此。\nI suspected there was no quality control whatsoever in the factory. After making observations for a week I found this was indeed the case.\n```\nUnit8\n```english\nThe poor old man spent hist last days almost entirely alone(完全单身一人)\nThe twins look exactly alike(看上去完全一样)  and insist on wearing similar clothes(穿一样的衣裳)\nIt is such a good chance（或so good a chance） that we mustn't miss it.\n我很幸运，在我年轻的时候就学会了许多不同的技能。I am lucky to have acquired（获得,取得,学到） a wide range of skills when I was young.\n```\nUnit9\n```english\n人+spend（花费时间）    人+pay（花费/付金钱）     物+cost（值）\nThe earlier the better,as far as I am concerned(对我来说)\n在美国，许多父母在孩子出生之前就为他们的教育留出一笔专款。Many parents in the United States set aside(留出) a fund for their children's education before they are born.\n我已了解清楚，她的结论是以事实为根据的。I have made sure that her conclusion is based on facts.\n他病了一个月左右，这使他在学习上耽误了很多。He was ill for about a month, which has really set him back（耽误） in his studies.\n```\nUnit10\n```english\nThe girl insisted(坚持) that he (should) join them.\n就是在那间斗室里，他们勤奋地工作着，憧憬着美好的未来。It was in that small room that they worked diligently and dreamed of better days to come.\n```\n\n### data structure\n数据结构需要对讲过的主要的几种数据结构进行实践\n\n#### binary tree\n\n#### Huffman tree\n\n\n### 年终总结\n\n#### about study\n\n#### about work\n\n","source":"_posts/2016年度总结与复习冲刺阶段.md","raw":"---\ntitle: 2016年度总结与复习冲刺阶段\ndate: 2016-12-19 09:35:53\ntags:\n- 总结\n- 复习\ncategories:\n- 总结\npermalink: Summary-of-year-2016\n---\n\n2016年终总结与复习汇总，用来记录\n====\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-9/64847872-file_1494299007302_51eb.jpg)\n<!--more-->\n## 复习汇总\n\n### deadline\n\n|subject|endtime|\n|----:|----:|\n|data structure|2017.01.08 am|\n|english|2017.01.08 pm|\n\n\n### English\n\n#### vocabulary\n\n背单词就靠她了[Quizlet](https://quizlet.com/yangeren)\n\n自己把单词录入一遍，加深记忆，然后再背；\n目前后面的几章都没录呢。。。\n\n#### translate\n\n1. There was a place for everything and everything was always in its place.\n\n`样样东西都有个固定的地方，且每个东西总有他合适的地方`\n\n2. I was really amazed at what I saw.\n\n`我对我看到的情况感到惊讶`\n\n3. In a certain store where they sell pudding a number of these delicious thiings are laid out in row during the Chrismas season.\n\n`有一家出售布丁的商店，每年圣诞节期间都把许多这类美味的食品摆成一排供顾客选购`\n\n4. The elderly gentleman who was poorly but neatly dressed.\n\n`这位老先生衣着虽然破旧，但却十分整洁`\n\n5. This is not bad either, but a little too heavy.\n\n`这种也不错，可是稍微腻了一点。`\n\n6. And that was the last I saw or heard of the old man.\n\n`打这以后我再也没有看到这位老人，也没有听到过有关他的情况。`\n\n7. But appear to be shocked into such deep pleasure that speech had escaped me.\n\n`而是看上去惊喜得连话也说不出来了。`\n\n8. It never really worked until the actors managed to cry a few quiet tears.\n\n`直到演员们设法哭出几滴无声的眼泪时才真正起到了作用。`\n\n9. Don't carry on about it.\n\n`别大惊小怪了。`\n\n10. We have come to the conclusion.\n\n`根据上周发射的卫星所提供的资料。`\n\n#### sentence pattern\n把老师特意备注的几种句型的用法总结起来，目前已经总结了\n[虚拟语气](http://sugar.yer.pub/2016/12/16/%E8%8B%B1%E8%AF%AD%E4%B8%AD%E8%99%9A%E6%8B%9F%E8%AF%AD%E6%B0%94%E7%9A%84%E7%94%A8%E6%B3%95%E5%8F%8A%E8%A7%A3%E6%9E%90/)\n的用法，其它语法还有待整理。\n\n#### 期末考试--复习内容\n\n1.\t考试内容及题型\n2.\t生词(unit6-10)\n3.\t课文（重点句子）(unit6-10)\n4.\t课后练习(unit6-10)\n\n##### 考试内容及题型\nUnit6-unit10\n题型（第一次考试40分，补考100分）：\n选择题：20%，20题，共20分\n完型句子：10%，5题，共10分\n阅读：10%，2篇，共10分\n英译汉翻译：20%，10题，共20分\n\n##### 生词(unit6-10)\nUnit6:\n```english\nefficiency  n.  效率   inefficiency无效率的\nelementary adj. 初等的，初级的     elementary school 小学     middle school中学\nexpert n. 专家    be expert at/in doing做。。。在行\nfoundation n. （物理的）基础   basis抽象的基础\nfound v.成立  founded过去式    Fund n. 资金，基金\nfindings n. （调查或研究的）结果\nunfortunately .adv 不幸的是，遗憾的是  misfortune n.不幸    unlikely不太可能\nproject n. 项目，方案\namaze vt. 使大为惊讶，使惊愕  astonished,surprise,wonder（惊奇，向弄明白）\n人+amazed（感到惊讶的）   物+amazing（令人惊讶的）\nrelieve .vt 减轻，援助    relive重生   release释放      Reveal 泄露，使显露\nboring .adj 令人厌烦的 （人+boried，物+boring）\nirregular 不规则的，不稳定的\ndecrease 减少  increase增加\nsuggestion n. 建议     suggest v. 建议+(should)+do原型\nfind out 找出，查明，发现\nturn out 结果是，证明是，生产，产出\ncarry out执行\nin additon to=besides除…之外,还有（包含在内）\nexcept 除…之外（同类的，不包含在内）\nexcept for 除…之外（不同类的，不包含在内）\nresult in+结果  lead to+结果\nresult from+原因\nkeep up with 跟上            put up with 容忍                  come up with  追赶上，找到，发现，提出\n```\n\nUnit7:\n```english\nAdvantage 利益，好处，优点  disadvantage         Take advantage of 利用\nElderly .adj 上了年纪的   old的比较级是older  elder本身就是形容词，用于家庭成员间\nEventually  最终，终于 finally    at last\n少记录一个单词\nLay out    spread out陈列\nin a row    成一长行\nto one's taste   合...口味，中...的意\ntake advantage of   利用\nand what's more    and more importantly 而且，更重要的是\nall right      确实，无疑地\nbreak off  中止，中断   take off起飞\nbreak into 破门而入\nbreak out （战争等）突然发生，爆发\ncome down (in the world) 落泊，潦倒；失势\nout of place   不适当的；不相称的\ndo sb. a favo(u)r     给某人以恩惠；帮某人忙\nmistake...for    把...错认为\npull（take） out  抽出，取出\ncount out     逐一数出\nlong for   +sb/sth/doing渴望、想念\nlong for sb to do盼望某人做某事\nlong to+do原型  渴望、想念\n```\n\nUnit8\n```english\nAstonish vt. 使大为惊讶\nReveal 泄露，使显露\nAvoid 防止，避免\nCompose 撰写，创作    be compose of由……组成\nConfidence n.信心，把握，自信\nIn search of寻找\nRob(sb) of(sth)剥夺，抢劫\nCome upon 偶尔遇见（或发现）\nCome true 实现，成真\nHold back 抑制，控制\n```\nUnit9\n```english\nConference 记者招待会\nTechnology 技术\nConclusion n. 结论    conclude v.\nDeadly 致命的\nSurvive vi. 幸存，活下来  survival n.\nPollute vt. 污染  pollution n.\nEmit  vt. send out 散发（give off），射出   emission n.\nFund n. 资金，基金\n（be） known as 以。。。闻名，通常名叫\nName after 以。。。名字命名\nBase on/upon 以。。。为基础，把。。。基于\nBe composed of 由。。。组成\n```\n**Unit10**\n```english\nTighten v. （使）变/绷紧\nDream of 向往，渴望\nTake over 占用，接管\n```\n##### 课文（重点句子）(unit6-10)\n\nUnit6:\n```english\nIndustrial Engineer工业(管理)工程师\nShe means that I have always wanted everything to be well organized(有组织的) and neat(整洁的) 她的意思是说，我一贯希望把样样东西都安排得井井有条，整整齐齐\neverything was always in its place（in one‘s place适当的地方）样样东西总是放在适当的地方\nI was really amazed（惊讶） at what I saw.我对所见的感到非常地惊讶\nMost curious of all（最惊奇的是）, there was no quality control whatsoever.最为奇怪的是，厂里竟然没有任何质量控制\n```\n\nUnit7\n```english\nIn a certain store（店） where they sell puddings布丁, a number of these delicious things are laid out in a row during the Christmas season(圣诞季).\n有一家出售布丁的商店，每年圣诞节期间都把许多这类美味的食品摆成一排供顾客选购\nThe elderly上了年纪的 gentleman, who was poorly（破旧） but neatly dressed 这位老先生衣着虽然破旧，但却整洁\nThis is not bad either（也不错）, but a little too heavy（油腻） 这种也不错，可是稍微腻了一点\nAnd that was the last I saw or heard of the old man。打（从）这以后我再也没有看到这位老人，也没有听到过有关他的情况\n```\nUnit8\n```english\nSpeech(演讲，说话) had escaped（逃跑） me.连话也说不出来了（说不出话）\nIt never really worked(起作用) until the actors（演员） managed to（设法做成某事） cry a few quiet tear（无声的眼泪） 直到演员们设法哭出几滴无声的眼泪时才真正起到作用\nAll right now,don’t carry on about it.It’s only a bicycle.\"好了，别大惊小怪了(没什么大不了的)。只不过是一辆自行车\n```\nUnit9\n```english\nWe have come to得出 the conclusion(结论),based on last week’s satellite landing. 根据上周发射的卫星所提供的资料，我们已经得出结论\nFor one thing首先,Earth’s surface表面 in the area of Manhattan曼哈顿 is composed of由。。组成 solid坚固的 concrete混凝土 and nothing can grow there.\n首先，曼哈顿地区的地球表面均由坚固的混凝土构成，那里什么东西也无法生长\n```\nUnit10（没有学习课文内容）\n\n##### 课后练习(unit6-10)\nUnit6\n```english\nEvery one of them agreed to his proposal(建议) except her.(同类，除。。之外)\nThe overcat is ready except for the buttons.(不同类，除。。之外)\n1) 据报道，那条铁路曾因洪水而停止修建。It was reported that the building of the railway had been held up by a flood.\n4) 我很想买这本英文词典，遗憾的是我身上带的钱不够。I'd like very much to buy the English dictionary. Unfortunately, I haven't got enough money on me.\n```\nUnit7\n```english\nThis broken hammer（榔头） is no use any more.The hammer is unless.\nThe shop girl has hope that she will get a raise(加薪).She is hopeful of a raise.\nHe talks/talked about Florida as if（好像，似乎） he had been there.\nHe orders me about as if he were my boss.\n萨姆买不起他极想要的那种照相机，因为那相机太贵了。Sam could not afford (to buy) the camera he longed for because it was too expensive.\n他是个富人家的儿子，不过看上去已经家道中落了。He is the son of a wealthy family, but he seems to have come down in the world.\n我怀疑这家工厂什么质量控制也没有。经过一周的观察，我发现情况果真如此。\nI suspected there was no quality control whatsoever in the factory. After making observations for a week I found this was indeed the case.\n```\nUnit8\n```english\nThe poor old man spent hist last days almost entirely alone(完全单身一人)\nThe twins look exactly alike(看上去完全一样)  and insist on wearing similar clothes(穿一样的衣裳)\nIt is such a good chance（或so good a chance） that we mustn't miss it.\n我很幸运，在我年轻的时候就学会了许多不同的技能。I am lucky to have acquired（获得,取得,学到） a wide range of skills when I was young.\n```\nUnit9\n```english\n人+spend（花费时间）    人+pay（花费/付金钱）     物+cost（值）\nThe earlier the better,as far as I am concerned(对我来说)\n在美国，许多父母在孩子出生之前就为他们的教育留出一笔专款。Many parents in the United States set aside(留出) a fund for their children's education before they are born.\n我已了解清楚，她的结论是以事实为根据的。I have made sure that her conclusion is based on facts.\n他病了一个月左右，这使他在学习上耽误了很多。He was ill for about a month, which has really set him back（耽误） in his studies.\n```\nUnit10\n```english\nThe girl insisted(坚持) that he (should) join them.\n就是在那间斗室里，他们勤奋地工作着，憧憬着美好的未来。It was in that small room that they worked diligently and dreamed of better days to come.\n```\n\n### data structure\n数据结构需要对讲过的主要的几种数据结构进行实践\n\n#### binary tree\n\n#### Huffman tree\n\n\n### 年终总结\n\n#### about study\n\n#### about work\n\n","slug":"Summary-of-year-2016","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqks00014rd3ileydgw6","content":"<h1 id=\"2016年终总结与复习汇总，用来记录\"><a href=\"#2016年终总结与复习汇总，用来记录\" class=\"headerlink\" title=\"2016年终总结与复习汇总，用来记录\"></a>2016年终总结与复习汇总，用来记录</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-9/64847872-file_1494299007302_51eb.jpg\" alt=\"\"><br><a id=\"more\"></a></p>\n<h2 id=\"复习汇总\"><a href=\"#复习汇总\" class=\"headerlink\" title=\"复习汇总\"></a>复习汇总</h2><h3 id=\"deadline\"><a href=\"#deadline\" class=\"headerlink\" title=\"deadline\"></a>deadline</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:right\">subject</th>\n<th style=\"text-align:right\">endtime</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">data structure</td>\n<td style=\"text-align:right\">2017.01.08 am</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">english</td>\n<td style=\"text-align:right\">2017.01.08 pm</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><h4 id=\"vocabulary\"><a href=\"#vocabulary\" class=\"headerlink\" title=\"vocabulary\"></a>vocabulary</h4><p>背单词就靠她了<a href=\"https://quizlet.com/yangeren\" target=\"_blank\" rel=\"external\">Quizlet</a></p>\n<p>自己把单词录入一遍，加深记忆，然后再背；<br>目前后面的几章都没录呢。。。</p>\n<h4 id=\"translate\"><a href=\"#translate\" class=\"headerlink\" title=\"translate\"></a>translate</h4><ol>\n<li>There was a place for everything and everything was always in its place.</li>\n</ol>\n<p><code>样样东西都有个固定的地方，且每个东西总有他合适的地方</code></p>\n<ol>\n<li>I was really amazed at what I saw.</li>\n</ol>\n<p><code>我对我看到的情况感到惊讶</code></p>\n<ol>\n<li>In a certain store where they sell pudding a number of these delicious thiings are laid out in row during the Chrismas season.</li>\n</ol>\n<p><code>有一家出售布丁的商店，每年圣诞节期间都把许多这类美味的食品摆成一排供顾客选购</code></p>\n<ol>\n<li>The elderly gentleman who was poorly but neatly dressed.</li>\n</ol>\n<p><code>这位老先生衣着虽然破旧，但却十分整洁</code></p>\n<ol>\n<li>This is not bad either, but a little too heavy.</li>\n</ol>\n<p><code>这种也不错，可是稍微腻了一点。</code></p>\n<ol>\n<li>And that was the last I saw or heard of the old man.</li>\n</ol>\n<p><code>打这以后我再也没有看到这位老人，也没有听到过有关他的情况。</code></p>\n<ol>\n<li>But appear to be shocked into such deep pleasure that speech had escaped me.</li>\n</ol>\n<p><code>而是看上去惊喜得连话也说不出来了。</code></p>\n<ol>\n<li>It never really worked until the actors managed to cry a few quiet tears.</li>\n</ol>\n<p><code>直到演员们设法哭出几滴无声的眼泪时才真正起到了作用。</code></p>\n<ol>\n<li>Don’t carry on about it.</li>\n</ol>\n<p><code>别大惊小怪了。</code></p>\n<ol>\n<li>We have come to the conclusion.</li>\n</ol>\n<p><code>根据上周发射的卫星所提供的资料。</code></p>\n<h4 id=\"sentence-pattern\"><a href=\"#sentence-pattern\" class=\"headerlink\" title=\"sentence pattern\"></a>sentence pattern</h4><p>把老师特意备注的几种句型的用法总结起来，目前已经总结了<br><a href=\"http://sugar.yer.pub/2016/12/16/%E8%8B%B1%E8%AF%AD%E4%B8%AD%E8%99%9A%E6%8B%9F%E8%AF%AD%E6%B0%94%E7%9A%84%E7%94%A8%E6%B3%95%E5%8F%8A%E8%A7%A3%E6%9E%90/\" target=\"_blank\" rel=\"external\">虚拟语气</a><br>的用法，其它语法还有待整理。</p>\n<h4 id=\"期末考试–复习内容\"><a href=\"#期末考试–复习内容\" class=\"headerlink\" title=\"期末考试–复习内容\"></a>期末考试–复习内容</h4><ol>\n<li>考试内容及题型</li>\n<li>生词(unit6-10)</li>\n<li>课文（重点句子）(unit6-10)</li>\n<li>课后练习(unit6-10)</li>\n</ol>\n<h5 id=\"考试内容及题型\"><a href=\"#考试内容及题型\" class=\"headerlink\" title=\"考试内容及题型\"></a>考试内容及题型</h5><p>Unit6-unit10<br>题型（第一次考试40分，补考100分）：<br>选择题：20%，20题，共20分<br>完型句子：10%，5题，共10分<br>阅读：10%，2篇，共10分<br>英译汉翻译：20%，10题，共20分</p>\n<h5 id=\"生词-unit6-10\"><a href=\"#生词-unit6-10\" class=\"headerlink\" title=\"生词(unit6-10)\"></a>生词(unit6-10)</h5><p>Unit6:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">efficiency  n.  效率   inefficiency无效率的</div><div class=\"line\">elementary adj. 初等的，初级的     elementary school 小学     middle school中学</div><div class=\"line\">expert n. 专家    be expert at/in doing做。。。在行</div><div class=\"line\">foundation n. （物理的）基础   basis抽象的基础</div><div class=\"line\">found v.成立  founded过去式    Fund n. 资金，基金</div><div class=\"line\">findings n. （调查或研究的）结果</div><div class=\"line\">unfortunately .adv 不幸的是，遗憾的是  misfortune n.不幸    unlikely不太可能</div><div class=\"line\">project n. 项目，方案</div><div class=\"line\">amaze vt. 使大为惊讶，使惊愕  astonished,surprise,wonder（惊奇，向弄明白）</div><div class=\"line\">人+amazed（感到惊讶的）   物+amazing（令人惊讶的）</div><div class=\"line\">relieve .vt 减轻，援助    relive重生   release释放      Reveal 泄露，使显露</div><div class=\"line\">boring .adj 令人厌烦的 （人+boried，物+boring）</div><div class=\"line\">irregular 不规则的，不稳定的</div><div class=\"line\">decrease 减少  increase增加</div><div class=\"line\">suggestion n. 建议     suggest v. 建议+(should)+do原型</div><div class=\"line\">find out 找出，查明，发现</div><div class=\"line\">turn out 结果是，证明是，生产，产出</div><div class=\"line\">carry out执行</div><div class=\"line\">in additon to=besides除…之外,还有（包含在内）</div><div class=\"line\">except 除…之外（同类的，不包含在内）</div><div class=\"line\">except for 除…之外（不同类的，不包含在内）</div><div class=\"line\">result in+结果  lead to+结果</div><div class=\"line\">result from+原因</div><div class=\"line\">keep up with 跟上            put up with 容忍                  come up with  追赶上，找到，发现，提出</div></pre></td></tr></table></figure></p>\n<p>Unit7:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">Advantage 利益，好处，优点  disadvantage         Take advantage of 利用</div><div class=\"line\">Elderly .adj 上了年纪的   old的比较级是older  elder本身就是形容词，用于家庭成员间</div><div class=\"line\">Eventually  最终，终于 finally    at last</div><div class=\"line\">少记录一个单词</div><div class=\"line\">Lay out    spread out陈列</div><div class=\"line\">in a row    成一长行</div><div class=\"line\">to one&apos;s taste   合...口味，中...的意</div><div class=\"line\">take advantage of   利用</div><div class=\"line\">and what&apos;s more    and more importantly 而且，更重要的是</div><div class=\"line\">all right      确实，无疑地</div><div class=\"line\">break off  中止，中断   take off起飞</div><div class=\"line\">break into 破门而入</div><div class=\"line\">break out （战争等）突然发生，爆发</div><div class=\"line\">come down (in the world) 落泊，潦倒；失势</div><div class=\"line\">out of place   不适当的；不相称的</div><div class=\"line\">do sb. a favo(u)r     给某人以恩惠；帮某人忙</div><div class=\"line\">mistake...for    把...错认为</div><div class=\"line\">pull（take） out  抽出，取出</div><div class=\"line\">count out     逐一数出</div><div class=\"line\">long for   +sb/sth/doing渴望、想念</div><div class=\"line\">long for sb to do盼望某人做某事</div><div class=\"line\">long to+do原型  渴望、想念</div></pre></td></tr></table></figure></p>\n<p>Unit8<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">Astonish vt. 使大为惊讶</div><div class=\"line\">Reveal 泄露，使显露</div><div class=\"line\">Avoid 防止，避免</div><div class=\"line\">Compose 撰写，创作    be compose of由……组成</div><div class=\"line\">Confidence n.信心，把握，自信</div><div class=\"line\">In search of寻找</div><div class=\"line\">Rob(sb) of(sth)剥夺，抢劫</div><div class=\"line\">Come upon 偶尔遇见（或发现）</div><div class=\"line\">Come true 实现，成真</div><div class=\"line\">Hold back 抑制，控制</div></pre></td></tr></table></figure></p>\n<p>Unit9<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">Conference 记者招待会</div><div class=\"line\">Technology 技术</div><div class=\"line\">Conclusion n. 结论    conclude v.</div><div class=\"line\">Deadly 致命的</div><div class=\"line\">Survive vi. 幸存，活下来  survival n.</div><div class=\"line\">Pollute vt. 污染  pollution n.</div><div class=\"line\">Emit  vt. send out 散发（give off），射出   emission n.</div><div class=\"line\">Fund n. 资金，基金</div><div class=\"line\">（be） known as 以。。。闻名，通常名叫</div><div class=\"line\">Name after 以。。。名字命名</div><div class=\"line\">Base on/upon 以。。。为基础，把。。。基于</div><div class=\"line\">Be composed of 由。。。组成</div></pre></td></tr></table></figure></p>\n<p><strong>Unit10</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Tighten v. （使）变/绷紧</div><div class=\"line\">Dream of 向往，渴望</div><div class=\"line\">Take over 占用，接管</div></pre></td></tr></table></figure></p>\n<h5 id=\"课文（重点句子）-unit6-10\"><a href=\"#课文（重点句子）-unit6-10\" class=\"headerlink\" title=\"课文（重点句子）(unit6-10)\"></a>课文（重点句子）(unit6-10)</h5><p>Unit6:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Industrial Engineer工业(管理)工程师</div><div class=\"line\">She means that I have always wanted everything to be well organized(有组织的) and neat(整洁的) 她的意思是说，我一贯希望把样样东西都安排得井井有条，整整齐齐</div><div class=\"line\">everything was always in its place（in one‘s place适当的地方）样样东西总是放在适当的地方</div><div class=\"line\">I was really amazed（惊讶） at what I saw.我对所见的感到非常地惊讶</div><div class=\"line\">Most curious of all（最惊奇的是）, there was no quality control whatsoever.最为奇怪的是，厂里竟然没有任何质量控制</div></pre></td></tr></table></figure></p>\n<p>Unit7<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">In a certain store（店） where they sell puddings布丁, a number of these delicious things are laid out in a row during the Christmas season(圣诞季).</div><div class=\"line\">有一家出售布丁的商店，每年圣诞节期间都把许多这类美味的食品摆成一排供顾客选购</div><div class=\"line\">The elderly上了年纪的 gentleman, who was poorly（破旧） but neatly dressed 这位老先生衣着虽然破旧，但却整洁</div><div class=\"line\">This is not bad either（也不错）, but a little too heavy（油腻） 这种也不错，可是稍微腻了一点</div><div class=\"line\">And that was the last I saw or heard of the old man。打（从）这以后我再也没有看到这位老人，也没有听到过有关他的情况</div></pre></td></tr></table></figure></p>\n<p>Unit8<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Speech(演讲，说话) had escaped（逃跑） me.连话也说不出来了（说不出话）</div><div class=\"line\">It never really worked(起作用) until the actors（演员） managed to（设法做成某事） cry a few quiet tear（无声的眼泪） 直到演员们设法哭出几滴无声的眼泪时才真正起到作用</div><div class=\"line\">All right now,don’t carry on about it.It’s only a bicycle.&quot;好了，别大惊小怪了(没什么大不了的)。只不过是一辆自行车</div></pre></td></tr></table></figure></p>\n<p>Unit9<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">We have come to得出 the conclusion(结论),based on last week’s satellite landing. 根据上周发射的卫星所提供的资料，我们已经得出结论</div><div class=\"line\">For one thing首先,Earth’s surface表面 in the area of Manhattan曼哈顿 is composed of由。。组成 solid坚固的 concrete混凝土 and nothing can grow there.</div><div class=\"line\">首先，曼哈顿地区的地球表面均由坚固的混凝土构成，那里什么东西也无法生长</div></pre></td></tr></table></figure></p>\n<p>Unit10（没有学习课文内容）</p>\n<h5 id=\"课后练习-unit6-10\"><a href=\"#课后练习-unit6-10\" class=\"headerlink\" title=\"课后练习(unit6-10)\"></a>课后练习(unit6-10)</h5><p>Unit6<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Every one of them agreed to his proposal(建议) except her.(同类，除。。之外)</div><div class=\"line\">The overcat is ready except for the buttons.(不同类，除。。之外)</div><div class=\"line\">1) 据报道，那条铁路曾因洪水而停止修建。It was reported that the building of the railway had been held up by a flood.</div><div class=\"line\">4) 我很想买这本英文词典，遗憾的是我身上带的钱不够。I&apos;d like very much to buy the English dictionary. Unfortunately, I haven&apos;t got enough money on me.</div></pre></td></tr></table></figure></p>\n<p>Unit7<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">This broken hammer（榔头） is no use any more.The hammer is unless.</div><div class=\"line\">The shop girl has hope that she will get a raise(加薪).She is hopeful of a raise.</div><div class=\"line\">He talks/talked about Florida as if（好像，似乎） he had been there.</div><div class=\"line\">He orders me about as if he were my boss.</div><div class=\"line\">萨姆买不起他极想要的那种照相机，因为那相机太贵了。Sam could not afford (to buy) the camera he longed for because it was too expensive.</div><div class=\"line\">他是个富人家的儿子，不过看上去已经家道中落了。He is the son of a wealthy family, but he seems to have come down in the world.</div><div class=\"line\">我怀疑这家工厂什么质量控制也没有。经过一周的观察，我发现情况果真如此。</div><div class=\"line\">I suspected there was no quality control whatsoever in the factory. After making observations for a week I found this was indeed the case.</div></pre></td></tr></table></figure></p>\n<p>Unit8<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">The poor old man spent hist last days almost entirely alone(完全单身一人)</div><div class=\"line\">The twins look exactly alike(看上去完全一样)  and insist on wearing similar clothes(穿一样的衣裳)</div><div class=\"line\">It is such a good chance（或so good a chance） that we mustn&apos;t miss it.</div><div class=\"line\">我很幸运，在我年轻的时候就学会了许多不同的技能。I am lucky to have acquired（获得,取得,学到） a wide range of skills when I was young.</div></pre></td></tr></table></figure></p>\n<p>Unit9<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">人+spend（花费时间）    人+pay（花费/付金钱）     物+cost（值）</div><div class=\"line\">The earlier the better,as far as I am concerned(对我来说)</div><div class=\"line\">在美国，许多父母在孩子出生之前就为他们的教育留出一笔专款。Many parents in the United States set aside(留出) a fund for their children&apos;s education before they are born.</div><div class=\"line\">我已了解清楚，她的结论是以事实为根据的。I have made sure that her conclusion is based on facts.</div><div class=\"line\">他病了一个月左右，这使他在学习上耽误了很多。He was ill for about a month, which has really set him back（耽误） in his studies.</div></pre></td></tr></table></figure></p>\n<p>Unit10<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">The girl insisted(坚持) that he (should) join them.</div><div class=\"line\">就是在那间斗室里，他们勤奋地工作着，憧憬着美好的未来。It was in that small room that they worked diligently and dreamed of better days to come.</div></pre></td></tr></table></figure></p>\n<h3 id=\"data-structure\"><a href=\"#data-structure\" class=\"headerlink\" title=\"data structure\"></a>data structure</h3><p>数据结构需要对讲过的主要的几种数据结构进行实践</p>\n<h4 id=\"binary-tree\"><a href=\"#binary-tree\" class=\"headerlink\" title=\"binary tree\"></a>binary tree</h4><h4 id=\"Huffman-tree\"><a href=\"#Huffman-tree\" class=\"headerlink\" title=\"Huffman tree\"></a>Huffman tree</h4><h3 id=\"年终总结\"><a href=\"#年终总结\" class=\"headerlink\" title=\"年终总结\"></a>年终总结</h3><h4 id=\"about-study\"><a href=\"#about-study\" class=\"headerlink\" title=\"about study\"></a>about study</h4><h4 id=\"about-work\"><a href=\"#about-work\" class=\"headerlink\" title=\"about work\"></a>about work</h4>","site":{"data":{}},"excerpt":"<h1 id=\"2016年终总结与复习汇总，用来记录\"><a href=\"#2016年终总结与复习汇总，用来记录\" class=\"headerlink\" title=\"2016年终总结与复习汇总，用来记录\"></a>2016年终总结与复习汇总，用来记录</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-9/64847872-file_1494299007302_51eb.jpg\" alt=\"\"><br>","more":"</p>\n<h2 id=\"复习汇总\"><a href=\"#复习汇总\" class=\"headerlink\" title=\"复习汇总\"></a>复习汇总</h2><h3 id=\"deadline\"><a href=\"#deadline\" class=\"headerlink\" title=\"deadline\"></a>deadline</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:right\">subject</th>\n<th style=\"text-align:right\">endtime</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:right\">data structure</td>\n<td style=\"text-align:right\">2017.01.08 am</td>\n</tr>\n<tr>\n<td style=\"text-align:right\">english</td>\n<td style=\"text-align:right\">2017.01.08 pm</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><h4 id=\"vocabulary\"><a href=\"#vocabulary\" class=\"headerlink\" title=\"vocabulary\"></a>vocabulary</h4><p>背单词就靠她了<a href=\"https://quizlet.com/yangeren\" target=\"_blank\" rel=\"external\">Quizlet</a></p>\n<p>自己把单词录入一遍，加深记忆，然后再背；<br>目前后面的几章都没录呢。。。</p>\n<h4 id=\"translate\"><a href=\"#translate\" class=\"headerlink\" title=\"translate\"></a>translate</h4><ol>\n<li>There was a place for everything and everything was always in its place.</li>\n</ol>\n<p><code>样样东西都有个固定的地方，且每个东西总有他合适的地方</code></p>\n<ol>\n<li>I was really amazed at what I saw.</li>\n</ol>\n<p><code>我对我看到的情况感到惊讶</code></p>\n<ol>\n<li>In a certain store where they sell pudding a number of these delicious thiings are laid out in row during the Chrismas season.</li>\n</ol>\n<p><code>有一家出售布丁的商店，每年圣诞节期间都把许多这类美味的食品摆成一排供顾客选购</code></p>\n<ol>\n<li>The elderly gentleman who was poorly but neatly dressed.</li>\n</ol>\n<p><code>这位老先生衣着虽然破旧，但却十分整洁</code></p>\n<ol>\n<li>This is not bad either, but a little too heavy.</li>\n</ol>\n<p><code>这种也不错，可是稍微腻了一点。</code></p>\n<ol>\n<li>And that was the last I saw or heard of the old man.</li>\n</ol>\n<p><code>打这以后我再也没有看到这位老人，也没有听到过有关他的情况。</code></p>\n<ol>\n<li>But appear to be shocked into such deep pleasure that speech had escaped me.</li>\n</ol>\n<p><code>而是看上去惊喜得连话也说不出来了。</code></p>\n<ol>\n<li>It never really worked until the actors managed to cry a few quiet tears.</li>\n</ol>\n<p><code>直到演员们设法哭出几滴无声的眼泪时才真正起到了作用。</code></p>\n<ol>\n<li>Don’t carry on about it.</li>\n</ol>\n<p><code>别大惊小怪了。</code></p>\n<ol>\n<li>We have come to the conclusion.</li>\n</ol>\n<p><code>根据上周发射的卫星所提供的资料。</code></p>\n<h4 id=\"sentence-pattern\"><a href=\"#sentence-pattern\" class=\"headerlink\" title=\"sentence pattern\"></a>sentence pattern</h4><p>把老师特意备注的几种句型的用法总结起来，目前已经总结了<br><a href=\"http://sugar.yer.pub/2016/12/16/%E8%8B%B1%E8%AF%AD%E4%B8%AD%E8%99%9A%E6%8B%9F%E8%AF%AD%E6%B0%94%E7%9A%84%E7%94%A8%E6%B3%95%E5%8F%8A%E8%A7%A3%E6%9E%90/\" target=\"_blank\" rel=\"external\">虚拟语气</a><br>的用法，其它语法还有待整理。</p>\n<h4 id=\"期末考试–复习内容\"><a href=\"#期末考试–复习内容\" class=\"headerlink\" title=\"期末考试–复习内容\"></a>期末考试–复习内容</h4><ol>\n<li>考试内容及题型</li>\n<li>生词(unit6-10)</li>\n<li>课文（重点句子）(unit6-10)</li>\n<li>课后练习(unit6-10)</li>\n</ol>\n<h5 id=\"考试内容及题型\"><a href=\"#考试内容及题型\" class=\"headerlink\" title=\"考试内容及题型\"></a>考试内容及题型</h5><p>Unit6-unit10<br>题型（第一次考试40分，补考100分）：<br>选择题：20%，20题，共20分<br>完型句子：10%，5题，共10分<br>阅读：10%，2篇，共10分<br>英译汉翻译：20%，10题，共20分</p>\n<h5 id=\"生词-unit6-10\"><a href=\"#生词-unit6-10\" class=\"headerlink\" title=\"生词(unit6-10)\"></a>生词(unit6-10)</h5><p>Unit6:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\">efficiency  n.  效率   inefficiency无效率的</div><div class=\"line\">elementary adj. 初等的，初级的     elementary school 小学     middle school中学</div><div class=\"line\">expert n. 专家    be expert at/in doing做。。。在行</div><div class=\"line\">foundation n. （物理的）基础   basis抽象的基础</div><div class=\"line\">found v.成立  founded过去式    Fund n. 资金，基金</div><div class=\"line\">findings n. （调查或研究的）结果</div><div class=\"line\">unfortunately .adv 不幸的是，遗憾的是  misfortune n.不幸    unlikely不太可能</div><div class=\"line\">project n. 项目，方案</div><div class=\"line\">amaze vt. 使大为惊讶，使惊愕  astonished,surprise,wonder（惊奇，向弄明白）</div><div class=\"line\">人+amazed（感到惊讶的）   物+amazing（令人惊讶的）</div><div class=\"line\">relieve .vt 减轻，援助    relive重生   release释放      Reveal 泄露，使显露</div><div class=\"line\">boring .adj 令人厌烦的 （人+boried，物+boring）</div><div class=\"line\">irregular 不规则的，不稳定的</div><div class=\"line\">decrease 减少  increase增加</div><div class=\"line\">suggestion n. 建议     suggest v. 建议+(should)+do原型</div><div class=\"line\">find out 找出，查明，发现</div><div class=\"line\">turn out 结果是，证明是，生产，产出</div><div class=\"line\">carry out执行</div><div class=\"line\">in additon to=besides除…之外,还有（包含在内）</div><div class=\"line\">except 除…之外（同类的，不包含在内）</div><div class=\"line\">except for 除…之外（不同类的，不包含在内）</div><div class=\"line\">result in+结果  lead to+结果</div><div class=\"line\">result from+原因</div><div class=\"line\">keep up with 跟上            put up with 容忍                  come up with  追赶上，找到，发现，提出</div></pre></td></tr></table></figure></p>\n<p>Unit7:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">Advantage 利益，好处，优点  disadvantage         Take advantage of 利用</div><div class=\"line\">Elderly .adj 上了年纪的   old的比较级是older  elder本身就是形容词，用于家庭成员间</div><div class=\"line\">Eventually  最终，终于 finally    at last</div><div class=\"line\">少记录一个单词</div><div class=\"line\">Lay out    spread out陈列</div><div class=\"line\">in a row    成一长行</div><div class=\"line\">to one&apos;s taste   合...口味，中...的意</div><div class=\"line\">take advantage of   利用</div><div class=\"line\">and what&apos;s more    and more importantly 而且，更重要的是</div><div class=\"line\">all right      确实，无疑地</div><div class=\"line\">break off  中止，中断   take off起飞</div><div class=\"line\">break into 破门而入</div><div class=\"line\">break out （战争等）突然发生，爆发</div><div class=\"line\">come down (in the world) 落泊，潦倒；失势</div><div class=\"line\">out of place   不适当的；不相称的</div><div class=\"line\">do sb. a favo(u)r     给某人以恩惠；帮某人忙</div><div class=\"line\">mistake...for    把...错认为</div><div class=\"line\">pull（take） out  抽出，取出</div><div class=\"line\">count out     逐一数出</div><div class=\"line\">long for   +sb/sth/doing渴望、想念</div><div class=\"line\">long for sb to do盼望某人做某事</div><div class=\"line\">long to+do原型  渴望、想念</div></pre></td></tr></table></figure></p>\n<p>Unit8<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">Astonish vt. 使大为惊讶</div><div class=\"line\">Reveal 泄露，使显露</div><div class=\"line\">Avoid 防止，避免</div><div class=\"line\">Compose 撰写，创作    be compose of由……组成</div><div class=\"line\">Confidence n.信心，把握，自信</div><div class=\"line\">In search of寻找</div><div class=\"line\">Rob(sb) of(sth)剥夺，抢劫</div><div class=\"line\">Come upon 偶尔遇见（或发现）</div><div class=\"line\">Come true 实现，成真</div><div class=\"line\">Hold back 抑制，控制</div></pre></td></tr></table></figure></p>\n<p>Unit9<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">Conference 记者招待会</div><div class=\"line\">Technology 技术</div><div class=\"line\">Conclusion n. 结论    conclude v.</div><div class=\"line\">Deadly 致命的</div><div class=\"line\">Survive vi. 幸存，活下来  survival n.</div><div class=\"line\">Pollute vt. 污染  pollution n.</div><div class=\"line\">Emit  vt. send out 散发（give off），射出   emission n.</div><div class=\"line\">Fund n. 资金，基金</div><div class=\"line\">（be） known as 以。。。闻名，通常名叫</div><div class=\"line\">Name after 以。。。名字命名</div><div class=\"line\">Base on/upon 以。。。为基础，把。。。基于</div><div class=\"line\">Be composed of 由。。。组成</div></pre></td></tr></table></figure></p>\n<p><strong>Unit10</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Tighten v. （使）变/绷紧</div><div class=\"line\">Dream of 向往，渴望</div><div class=\"line\">Take over 占用，接管</div></pre></td></tr></table></figure></p>\n<h5 id=\"课文（重点句子）-unit6-10\"><a href=\"#课文（重点句子）-unit6-10\" class=\"headerlink\" title=\"课文（重点句子）(unit6-10)\"></a>课文（重点句子）(unit6-10)</h5><p>Unit6:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Industrial Engineer工业(管理)工程师</div><div class=\"line\">She means that I have always wanted everything to be well organized(有组织的) and neat(整洁的) 她的意思是说，我一贯希望把样样东西都安排得井井有条，整整齐齐</div><div class=\"line\">everything was always in its place（in one‘s place适当的地方）样样东西总是放在适当的地方</div><div class=\"line\">I was really amazed（惊讶） at what I saw.我对所见的感到非常地惊讶</div><div class=\"line\">Most curious of all（最惊奇的是）, there was no quality control whatsoever.最为奇怪的是，厂里竟然没有任何质量控制</div></pre></td></tr></table></figure></p>\n<p>Unit7<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">In a certain store（店） where they sell puddings布丁, a number of these delicious things are laid out in a row during the Christmas season(圣诞季).</div><div class=\"line\">有一家出售布丁的商店，每年圣诞节期间都把许多这类美味的食品摆成一排供顾客选购</div><div class=\"line\">The elderly上了年纪的 gentleman, who was poorly（破旧） but neatly dressed 这位老先生衣着虽然破旧，但却整洁</div><div class=\"line\">This is not bad either（也不错）, but a little too heavy（油腻） 这种也不错，可是稍微腻了一点</div><div class=\"line\">And that was the last I saw or heard of the old man。打（从）这以后我再也没有看到这位老人，也没有听到过有关他的情况</div></pre></td></tr></table></figure></p>\n<p>Unit8<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Speech(演讲，说话) had escaped（逃跑） me.连话也说不出来了（说不出话）</div><div class=\"line\">It never really worked(起作用) until the actors（演员） managed to（设法做成某事） cry a few quiet tear（无声的眼泪） 直到演员们设法哭出几滴无声的眼泪时才真正起到作用</div><div class=\"line\">All right now,don’t carry on about it.It’s only a bicycle.&quot;好了，别大惊小怪了(没什么大不了的)。只不过是一辆自行车</div></pre></td></tr></table></figure></p>\n<p>Unit9<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">We have come to得出 the conclusion(结论),based on last week’s satellite landing. 根据上周发射的卫星所提供的资料，我们已经得出结论</div><div class=\"line\">For one thing首先,Earth’s surface表面 in the area of Manhattan曼哈顿 is composed of由。。组成 solid坚固的 concrete混凝土 and nothing can grow there.</div><div class=\"line\">首先，曼哈顿地区的地球表面均由坚固的混凝土构成，那里什么东西也无法生长</div></pre></td></tr></table></figure></p>\n<p>Unit10（没有学习课文内容）</p>\n<h5 id=\"课后练习-unit6-10\"><a href=\"#课后练习-unit6-10\" class=\"headerlink\" title=\"课后练习(unit6-10)\"></a>课后练习(unit6-10)</h5><p>Unit6<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Every one of them agreed to his proposal(建议) except her.(同类，除。。之外)</div><div class=\"line\">The overcat is ready except for the buttons.(不同类，除。。之外)</div><div class=\"line\">1) 据报道，那条铁路曾因洪水而停止修建。It was reported that the building of the railway had been held up by a flood.</div><div class=\"line\">4) 我很想买这本英文词典，遗憾的是我身上带的钱不够。I&apos;d like very much to buy the English dictionary. Unfortunately, I haven&apos;t got enough money on me.</div></pre></td></tr></table></figure></p>\n<p>Unit7<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">This broken hammer（榔头） is no use any more.The hammer is unless.</div><div class=\"line\">The shop girl has hope that she will get a raise(加薪).She is hopeful of a raise.</div><div class=\"line\">He talks/talked about Florida as if（好像，似乎） he had been there.</div><div class=\"line\">He orders me about as if he were my boss.</div><div class=\"line\">萨姆买不起他极想要的那种照相机，因为那相机太贵了。Sam could not afford (to buy) the camera he longed for because it was too expensive.</div><div class=\"line\">他是个富人家的儿子，不过看上去已经家道中落了。He is the son of a wealthy family, but he seems to have come down in the world.</div><div class=\"line\">我怀疑这家工厂什么质量控制也没有。经过一周的观察，我发现情况果真如此。</div><div class=\"line\">I suspected there was no quality control whatsoever in the factory. After making observations for a week I found this was indeed the case.</div></pre></td></tr></table></figure></p>\n<p>Unit8<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">The poor old man spent hist last days almost entirely alone(完全单身一人)</div><div class=\"line\">The twins look exactly alike(看上去完全一样)  and insist on wearing similar clothes(穿一样的衣裳)</div><div class=\"line\">It is such a good chance（或so good a chance） that we mustn&apos;t miss it.</div><div class=\"line\">我很幸运，在我年轻的时候就学会了许多不同的技能。I am lucky to have acquired（获得,取得,学到） a wide range of skills when I was young.</div></pre></td></tr></table></figure></p>\n<p>Unit9<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">人+spend（花费时间）    人+pay（花费/付金钱）     物+cost（值）</div><div class=\"line\">The earlier the better,as far as I am concerned(对我来说)</div><div class=\"line\">在美国，许多父母在孩子出生之前就为他们的教育留出一笔专款。Many parents in the United States set aside(留出) a fund for their children&apos;s education before they are born.</div><div class=\"line\">我已了解清楚，她的结论是以事实为根据的。I have made sure that her conclusion is based on facts.</div><div class=\"line\">他病了一个月左右，这使他在学习上耽误了很多。He was ill for about a month, which has really set him back（耽误） in his studies.</div></pre></td></tr></table></figure></p>\n<p>Unit10<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">The girl insisted(坚持) that he (should) join them.</div><div class=\"line\">就是在那间斗室里，他们勤奋地工作着，憧憬着美好的未来。It was in that small room that they worked diligently and dreamed of better days to come.</div></pre></td></tr></table></figure></p>\n<h3 id=\"data-structure\"><a href=\"#data-structure\" class=\"headerlink\" title=\"data structure\"></a>data structure</h3><p>数据结构需要对讲过的主要的几种数据结构进行实践</p>\n<h4 id=\"binary-tree\"><a href=\"#binary-tree\" class=\"headerlink\" title=\"binary tree\"></a>binary tree</h4><h4 id=\"Huffman-tree\"><a href=\"#Huffman-tree\" class=\"headerlink\" title=\"Huffman tree\"></a>Huffman tree</h4><h3 id=\"年终总结\"><a href=\"#年终总结\" class=\"headerlink\" title=\"年终总结\"></a>年终总结</h3><h4 id=\"about-study\"><a href=\"#about-study\" class=\"headerlink\" title=\"about study\"></a>about study</h4><h4 id=\"about-work\"><a href=\"#about-work\" class=\"headerlink\" title=\"about work\"></a>about work</h4>"},{"title":"Many-to-many模型的创建、添加、保存 | Django","date":"2017-02-16T06:59:21.000Z","_content":"\n## Django项目中ManyToMany数据类型\n\n### 介绍ManyToMany结构\nManyToMany即多对多关系\n\n最简单的例如大学生选课\n\n一个学生可以选多门课，而一门课也可以被多个学生选休，这就是多对多的关系；\n\n### 项目中实践\n<!--more-->\n\n#### 添加多对多数据模型\n\n#### 查看数据库中的具体实现\n\n#### 外部保存多对多关系数据的方法\n\n#### 官方参考文档\n[ManyToMany数据类型](https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.ManyToManyField)\n\n[ManyToMany示例](https://docs.djangoproject.com/en/1.10/topics/db/examples/many_to_many/)\n","source":"_posts/Many-to-many模型的创建、添加、保存-Django.md","raw":"---\ntitle: Many-to-many模型的创建、添加、保存 | Django\ndate: 2017-02-16 14:59:21\ntags:\n- many-to-many\n- model\ncategories:\n- django\n---\n\n## Django项目中ManyToMany数据类型\n\n### 介绍ManyToMany结构\nManyToMany即多对多关系\n\n最简单的例如大学生选课\n\n一个学生可以选多门课，而一门课也可以被多个学生选休，这就是多对多的关系；\n\n### 项目中实践\n<!--more-->\n\n#### 添加多对多数据模型\n\n#### 查看数据库中的具体实现\n\n#### 外部保存多对多关系数据的方法\n\n#### 官方参考文档\n[ManyToMany数据类型](https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.ManyToManyField)\n\n[ManyToMany示例](https://docs.djangoproject.com/en/1.10/topics/db/examples/many_to_many/)\n","slug":"Many-to-many模型的创建、添加、保存-Django","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqky00034rd330bmp689","content":"<h2 id=\"Django项目中ManyToMany数据类型\"><a href=\"#Django项目中ManyToMany数据类型\" class=\"headerlink\" title=\"Django项目中ManyToMany数据类型\"></a>Django项目中ManyToMany数据类型</h2><h3 id=\"介绍ManyToMany结构\"><a href=\"#介绍ManyToMany结构\" class=\"headerlink\" title=\"介绍ManyToMany结构\"></a>介绍ManyToMany结构</h3><p>ManyToMany即多对多关系</p>\n<p>最简单的例如大学生选课</p>\n<p>一个学生可以选多门课，而一门课也可以被多个学生选休，这就是多对多的关系；</p>\n<h3 id=\"项目中实践\"><a href=\"#项目中实践\" class=\"headerlink\" title=\"项目中实践\"></a>项目中实践</h3><a id=\"more\"></a>\n<h4 id=\"添加多对多数据模型\"><a href=\"#添加多对多数据模型\" class=\"headerlink\" title=\"添加多对多数据模型\"></a>添加多对多数据模型</h4><h4 id=\"查看数据库中的具体实现\"><a href=\"#查看数据库中的具体实现\" class=\"headerlink\" title=\"查看数据库中的具体实现\"></a>查看数据库中的具体实现</h4><h4 id=\"外部保存多对多关系数据的方法\"><a href=\"#外部保存多对多关系数据的方法\" class=\"headerlink\" title=\"外部保存多对多关系数据的方法\"></a>外部保存多对多关系数据的方法</h4><h4 id=\"官方参考文档\"><a href=\"#官方参考文档\" class=\"headerlink\" title=\"官方参考文档\"></a>官方参考文档</h4><p><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.ManyToManyField\" target=\"_blank\" rel=\"external\">ManyToMany数据类型</a></p>\n<p><a href=\"https://docs.djangoproject.com/en/1.10/topics/db/examples/many_to_many/\" target=\"_blank\" rel=\"external\">ManyToMany示例</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Django项目中ManyToMany数据类型\"><a href=\"#Django项目中ManyToMany数据类型\" class=\"headerlink\" title=\"Django项目中ManyToMany数据类型\"></a>Django项目中ManyToMany数据类型</h2><h3 id=\"介绍ManyToMany结构\"><a href=\"#介绍ManyToMany结构\" class=\"headerlink\" title=\"介绍ManyToMany结构\"></a>介绍ManyToMany结构</h3><p>ManyToMany即多对多关系</p>\n<p>最简单的例如大学生选课</p>\n<p>一个学生可以选多门课，而一门课也可以被多个学生选休，这就是多对多的关系；</p>\n<h3 id=\"项目中实践\"><a href=\"#项目中实践\" class=\"headerlink\" title=\"项目中实践\"></a>项目中实践</h3>","more":"<h4 id=\"添加多对多数据模型\"><a href=\"#添加多对多数据模型\" class=\"headerlink\" title=\"添加多对多数据模型\"></a>添加多对多数据模型</h4><h4 id=\"查看数据库中的具体实现\"><a href=\"#查看数据库中的具体实现\" class=\"headerlink\" title=\"查看数据库中的具体实现\"></a>查看数据库中的具体实现</h4><h4 id=\"外部保存多对多关系数据的方法\"><a href=\"#外部保存多对多关系数据的方法\" class=\"headerlink\" title=\"外部保存多对多关系数据的方法\"></a>外部保存多对多关系数据的方法</h4><h4 id=\"官方参考文档\"><a href=\"#官方参考文档\" class=\"headerlink\" title=\"官方参考文档\"></a>官方参考文档</h4><p><a href=\"https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.ManyToManyField\" target=\"_blank\" rel=\"external\">ManyToMany数据类型</a></p>\n<p><a href=\"https://docs.djangoproject.com/en/1.10/topics/db/examples/many_to_many/\" target=\"_blank\" rel=\"external\">ManyToMany示例</a></p>"},{"title":"M站UI自动化过程","date":"2016-12-13T03:37:13.000Z","_content":"\nM站UI自动化过程\n====\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-9/20021003-file_1494301348754_cb1.png)\n### 环境配置\n\n#### 安装python\n\n```\n官网下载，linux与apple免安装\n```\n\n#### 创建沙盒环境\n\n```shell\nvirtualenv myvenv\n```\n<!--more-->\n#### 切换沙盒环境\n\n```shell\nsource myvenv/bin/activate\n```\n\n#### 安装selenium包\n\n```bash\npip install selenium\n```\n\n#### 下载chromedriver，用来支持webdriver调用chrome\n\n```url\nhttp://chromedriver.storage.googleapis.com/2.22/chromedriver_linux64.zip\n```\n\n#### 将chromedriver路径加入环境变量\n> windows和linux方式有所不同，请自行google。\n\n*若不使用chrome的emulate devices，则不用执行关于selenium-server的步骤*\n\n#### 下载selenium-server服务，做remote服务，可启动chrome的mobile形式\n地址如下\n[selenium-server](http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar)\n\n\n### remote服务启动\n\n#### 启动selenium-server服务\n\n两种形式：\n\n##### 通过脚本启动\n\n```shell\ngnome-terminal -t \"title-name\"gnome-terminal -x bash -c \"/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar; exec bash;\"\n```\n\n##### 直接终端启动\n\n```shell\n/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar\n```\n\n#### 脚本中启动chrome_mobile_emulation\n\n```python\nmobile_emulation = {\"deviceName\": \"Google Nexus 5\"}\nchrome_options = webdriver.ChromeOptions()\nchrome_options.add_experimental_option(\"mobileEmulation\", mobile_emulation)\nself.driver = webdriver.Remote(command_executor='http://127.0.0.1:4444/wd/hub',\n                               desired_capabilities=chrome_options.to_capabilities())\n```\n\n### selenium 基本语法\n\n#### 网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接\n\n#### webdriver常用方法\n\n```python\n\n 'add_cookie', 在当前的会话添加一个cookie\n\n 'application_cache', 返回一个对象ApplicationCache与浏览器的应用程序缓存交互\n\n 'back', 返回至上一个浏览历史\n\n 'capabilities', remote参数\n\n 'close', 关闭\n\n 'command_executor', remote webdriver参数\n\n 'create_options', chrome webdriver参数\n\n 'create_web_element', 创建具有指定element_id网络元素。\n\n 'current_url', 当前页面的url\n\n 'current_window_handle', 返回当前窗口的句柄\n\n 'delete_all_cookies', 删除所有Cookie会话的范围\n\n 'delete_cookie',删除指定名称的单一的cookie。\n\n 'desired_capabilities', 返回正在使用当前所需功能的驱动程序\n\n 'error_handler', 用于处理错误errorhandler.ErrorHandler对象。\n\n 'execute',  发送到由一个command.CommandExecutor要执行的命令。\n\n 'execute_async_script',  异步执行当前窗口/帧的JavaScript。\n\n 'execute_script', 同步地执行在当前窗口/帧的JavaScript。\n\n 'file_detector',\n\n 'file_detector_context',\n\n 'find_element',\n\n 'find_element_by_class_name',通过查找类名的元素。\n\n 'find_element_by_css_selector',通过查找CSS选择器的元素。\n\n 'find_element_by_id',通过ID查找元素。\n\n 'find_element_by_link_text', 通过查找链接文本的元素。\n\n 'find_element_by_name',通过名称查找元素。\n\n 'find_element_by_partial_link_text',其链接文本的部分匹配查找元素。\n\n 'find_element_by_tag_name',查找按标签名称的元素。\n\n 'find_element_by_xpath',与XPath查找元素。\n\n 'find_elements',\n\n 'find_elements_by_class_name',\n\n 'find_elements_by_css_selector',\n\n 'find_elements_by_id',\n\n 'find_elements_by_link_text',\n\n 'find_elements_by_name',\n\n 'find_elements_by_partial_link_text',\n\n 'find_elements_by_tag_name',\n\n 'find_elements_by_xpath',\n\n 'forward',前进了一步在浏览器历史记录。\n\n 'get', 加载在当前浏览器会话的网页。\n\n 'get_cookie',按名称获取一个Cookie。如果找到，无如果不返回cookie。\n\n 'get_cookies',返回一组词典，对应的cookie在当前会话中可见。\n\n 'get_log',获取日志对于给定的日志类型\n\n 'get_screenshot_as_base64',获取当前窗口的截图为Base64编码的字符串 这是在以HTML嵌入的图像是有用的。\n\n 'get_screenshot_as_file',获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回True。使用完整路径在你的文件名。\n\n 'get_screenshot_as_png',获取当前窗口的屏幕快照作为二进制数据。\n\n 'get_window_position',获取当前窗口的x，y位置。\n\n 'get_window_size',获取当前窗口的宽度和高度。\n\n 'implicitly_wait',用粘超时隐含等待被发现的元素， 或命令来完成。这种方法只需要调用每个会话一次\n\n 'launch_app',\n\n 'log_types',\n\n 'maximize_window',最大限度地增加了的webdriver使用当前窗口\n\n 'mobile',\n\n 'name',返回此实例中的底层浏览器的名称。\n\n 'orientation',获取设备的当前方位\n\n 'page_source',获取当前页面的源代码。\n\n 'quit', 关闭浏览器并关闭启动ChromeDriver时启动的ChromeDriver可执行\n\n 'refresh', 刷新当前页面\n\n 'save_screenshot',获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回True。使用完整路径在你的文件名。\n\n 'service',\n\n 'session_id',浏览器会话的字符串ID开始，这个控制的webdriver。\n\n 'set_page_load_timeout',设置的时间量，以等待一个页面加载完成 之前抛出一个错误。\n\n 'set_script_timeout',\n\n 'set_window_position',设置当前窗口的x，y位置。 （window.moveTo）\n\n 'set_window_size',设置当前窗口的宽度和高度。 （window.resizeTo）\n\n 'start_client',开始一个新的会话之前调用。这种方法可能会被改写定义自定义启动行为。\n\n 'start_session',创建具有所需功能的一个新的会话。\n\n 'stop_client',执行quit命令后调用。这种方法可能会被改写定义自定义关机行为。\n\n 'switch_to',\n\n 'switch_to_active_element',\n\n 'switch_to_alert',切换当前活动的alert窗口\n\n 'switch_to_default_content',\n\n 'switch_to_frame',切换至当前活动的frame元素\n\n 'switch_to_window',切换至当前活动的浏览器窗口\n\n 'title',返回当前页面的标题。\n\n 'window_handles'返回当前会话中的所有窗口的句柄。\n\n```\n\n#### 推荐文档\n\n```url\n英文:\nhttp://selenium-python.readthedocs.io/getting-started.html\n\n中文，我参与了翻译过程:\nhttp://selenium-python-zh.readthedocs.io/en/latest/\n```\n\n","source":"_posts/M站UI自动化过程.md","raw":"---\ntitle: M站UI自动化过程\ndate: 2016-12-13 11:37:13\ntags:\n- python\n- selenium\n- Remote\n- UI自动化\n\ncategories:\n- test\n\n---\n\nM站UI自动化过程\n====\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-9/20021003-file_1494301348754_cb1.png)\n### 环境配置\n\n#### 安装python\n\n```\n官网下载，linux与apple免安装\n```\n\n#### 创建沙盒环境\n\n```shell\nvirtualenv myvenv\n```\n<!--more-->\n#### 切换沙盒环境\n\n```shell\nsource myvenv/bin/activate\n```\n\n#### 安装selenium包\n\n```bash\npip install selenium\n```\n\n#### 下载chromedriver，用来支持webdriver调用chrome\n\n```url\nhttp://chromedriver.storage.googleapis.com/2.22/chromedriver_linux64.zip\n```\n\n#### 将chromedriver路径加入环境变量\n> windows和linux方式有所不同，请自行google。\n\n*若不使用chrome的emulate devices，则不用执行关于selenium-server的步骤*\n\n#### 下载selenium-server服务，做remote服务，可启动chrome的mobile形式\n地址如下\n[selenium-server](http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar)\n\n\n### remote服务启动\n\n#### 启动selenium-server服务\n\n两种形式：\n\n##### 通过脚本启动\n\n```shell\ngnome-terminal -t \"title-name\"gnome-terminal -x bash -c \"/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar; exec bash;\"\n```\n\n##### 直接终端启动\n\n```shell\n/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar\n```\n\n#### 脚本中启动chrome_mobile_emulation\n\n```python\nmobile_emulation = {\"deviceName\": \"Google Nexus 5\"}\nchrome_options = webdriver.ChromeOptions()\nchrome_options.add_experimental_option(\"mobileEmulation\", mobile_emulation)\nself.driver = webdriver.Remote(command_executor='http://127.0.0.1:4444/wd/hub',\n                               desired_capabilities=chrome_options.to_capabilities())\n```\n\n### selenium 基本语法\n\n#### 网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接\n\n#### webdriver常用方法\n\n```python\n\n 'add_cookie', 在当前的会话添加一个cookie\n\n 'application_cache', 返回一个对象ApplicationCache与浏览器的应用程序缓存交互\n\n 'back', 返回至上一个浏览历史\n\n 'capabilities', remote参数\n\n 'close', 关闭\n\n 'command_executor', remote webdriver参数\n\n 'create_options', chrome webdriver参数\n\n 'create_web_element', 创建具有指定element_id网络元素。\n\n 'current_url', 当前页面的url\n\n 'current_window_handle', 返回当前窗口的句柄\n\n 'delete_all_cookies', 删除所有Cookie会话的范围\n\n 'delete_cookie',删除指定名称的单一的cookie。\n\n 'desired_capabilities', 返回正在使用当前所需功能的驱动程序\n\n 'error_handler', 用于处理错误errorhandler.ErrorHandler对象。\n\n 'execute',  发送到由一个command.CommandExecutor要执行的命令。\n\n 'execute_async_script',  异步执行当前窗口/帧的JavaScript。\n\n 'execute_script', 同步地执行在当前窗口/帧的JavaScript。\n\n 'file_detector',\n\n 'file_detector_context',\n\n 'find_element',\n\n 'find_element_by_class_name',通过查找类名的元素。\n\n 'find_element_by_css_selector',通过查找CSS选择器的元素。\n\n 'find_element_by_id',通过ID查找元素。\n\n 'find_element_by_link_text', 通过查找链接文本的元素。\n\n 'find_element_by_name',通过名称查找元素。\n\n 'find_element_by_partial_link_text',其链接文本的部分匹配查找元素。\n\n 'find_element_by_tag_name',查找按标签名称的元素。\n\n 'find_element_by_xpath',与XPath查找元素。\n\n 'find_elements',\n\n 'find_elements_by_class_name',\n\n 'find_elements_by_css_selector',\n\n 'find_elements_by_id',\n\n 'find_elements_by_link_text',\n\n 'find_elements_by_name',\n\n 'find_elements_by_partial_link_text',\n\n 'find_elements_by_tag_name',\n\n 'find_elements_by_xpath',\n\n 'forward',前进了一步在浏览器历史记录。\n\n 'get', 加载在当前浏览器会话的网页。\n\n 'get_cookie',按名称获取一个Cookie。如果找到，无如果不返回cookie。\n\n 'get_cookies',返回一组词典，对应的cookie在当前会话中可见。\n\n 'get_log',获取日志对于给定的日志类型\n\n 'get_screenshot_as_base64',获取当前窗口的截图为Base64编码的字符串 这是在以HTML嵌入的图像是有用的。\n\n 'get_screenshot_as_file',获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回True。使用完整路径在你的文件名。\n\n 'get_screenshot_as_png',获取当前窗口的屏幕快照作为二进制数据。\n\n 'get_window_position',获取当前窗口的x，y位置。\n\n 'get_window_size',获取当前窗口的宽度和高度。\n\n 'implicitly_wait',用粘超时隐含等待被发现的元素， 或命令来完成。这种方法只需要调用每个会话一次\n\n 'launch_app',\n\n 'log_types',\n\n 'maximize_window',最大限度地增加了的webdriver使用当前窗口\n\n 'mobile',\n\n 'name',返回此实例中的底层浏览器的名称。\n\n 'orientation',获取设备的当前方位\n\n 'page_source',获取当前页面的源代码。\n\n 'quit', 关闭浏览器并关闭启动ChromeDriver时启动的ChromeDriver可执行\n\n 'refresh', 刷新当前页面\n\n 'save_screenshot',获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回True。使用完整路径在你的文件名。\n\n 'service',\n\n 'session_id',浏览器会话的字符串ID开始，这个控制的webdriver。\n\n 'set_page_load_timeout',设置的时间量，以等待一个页面加载完成 之前抛出一个错误。\n\n 'set_script_timeout',\n\n 'set_window_position',设置当前窗口的x，y位置。 （window.moveTo）\n\n 'set_window_size',设置当前窗口的宽度和高度。 （window.resizeTo）\n\n 'start_client',开始一个新的会话之前调用。这种方法可能会被改写定义自定义启动行为。\n\n 'start_session',创建具有所需功能的一个新的会话。\n\n 'stop_client',执行quit命令后调用。这种方法可能会被改写定义自定义关机行为。\n\n 'switch_to',\n\n 'switch_to_active_element',\n\n 'switch_to_alert',切换当前活动的alert窗口\n\n 'switch_to_default_content',\n\n 'switch_to_frame',切换至当前活动的frame元素\n\n 'switch_to_window',切换至当前活动的浏览器窗口\n\n 'title',返回当前页面的标题。\n\n 'window_handles'返回当前会话中的所有窗口的句柄。\n\n```\n\n#### 推荐文档\n\n```url\n英文:\nhttp://selenium-python.readthedocs.io/getting-started.html\n\n中文，我参与了翻译过程:\nhttp://selenium-python-zh.readthedocs.io/en/latest/\n```\n\n","slug":"M站UI自动化过程","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxql400074rd33irsvyml","content":"<h1 id=\"M站UI自动化过程\"><a href=\"#M站UI自动化过程\" class=\"headerlink\" title=\"M站UI自动化过程\"></a>M站UI自动化过程</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-9/20021003-file_1494301348754_cb1.png\" alt=\"\"></p>\n<h3 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h3><h4 id=\"安装python\"><a href=\"#安装python\" class=\"headerlink\" title=\"安装python\"></a>安装python</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">官网下载，linux与apple免安装</div></pre></td></tr></table></figure>\n<h4 id=\"创建沙盒环境\"><a href=\"#创建沙盒环境\" class=\"headerlink\" title=\"创建沙盒环境\"></a>创建沙盒环境</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">virtualenv myvenv</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"切换沙盒环境\"><a href=\"#切换沙盒环境\" class=\"headerlink\" title=\"切换沙盒环境\"></a>切换沙盒环境</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source myvenv/bin/activate</div></pre></td></tr></table></figure>\n<h4 id=\"安装selenium包\"><a href=\"#安装selenium包\" class=\"headerlink\" title=\"安装selenium包\"></a>安装selenium包</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install selenium</div></pre></td></tr></table></figure>\n<h4 id=\"下载chromedriver，用来支持webdriver调用chrome\"><a href=\"#下载chromedriver，用来支持webdriver调用chrome\" class=\"headerlink\" title=\"下载chromedriver，用来支持webdriver调用chrome\"></a>下载chromedriver，用来支持webdriver调用chrome</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://chromedriver.storage.googleapis.com/2.22/chromedriver_linux64.zip</div></pre></td></tr></table></figure>\n<h4 id=\"将chromedriver路径加入环境变量\"><a href=\"#将chromedriver路径加入环境变量\" class=\"headerlink\" title=\"将chromedriver路径加入环境变量\"></a>将chromedriver路径加入环境变量</h4><blockquote>\n<p>windows和linux方式有所不同，请自行google。</p>\n</blockquote>\n<p><em>若不使用chrome的emulate devices，则不用执行关于selenium-server的步骤</em></p>\n<h4 id=\"下载selenium-server服务，做remote服务，可启动chrome的mobile形式\"><a href=\"#下载selenium-server服务，做remote服务，可启动chrome的mobile形式\" class=\"headerlink\" title=\"下载selenium-server服务，做remote服务，可启动chrome的mobile形式\"></a>下载selenium-server服务，做remote服务，可启动chrome的mobile形式</h4><p>地址如下<br><a href=\"http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar\" target=\"_blank\" rel=\"external\">selenium-server</a></p>\n<h3 id=\"remote服务启动\"><a href=\"#remote服务启动\" class=\"headerlink\" title=\"remote服务启动\"></a>remote服务启动</h3><h4 id=\"启动selenium-server服务\"><a href=\"#启动selenium-server服务\" class=\"headerlink\" title=\"启动selenium-server服务\"></a>启动selenium-server服务</h4><p>两种形式：</p>\n<h5 id=\"通过脚本启动\"><a href=\"#通过脚本启动\" class=\"headerlink\" title=\"通过脚本启动\"></a>通过脚本启动</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gnome-terminal -t \"title-name\"gnome-terminal -x bash -c \"/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar; exec bash;\"</div></pre></td></tr></table></figure>\n<h5 id=\"直接终端启动\"><a href=\"#直接终端启动\" class=\"headerlink\" title=\"直接终端启动\"></a>直接终端启动</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar</div></pre></td></tr></table></figure>\n<h4 id=\"脚本中启动chrome-mobile-emulation\"><a href=\"#脚本中启动chrome-mobile-emulation\" class=\"headerlink\" title=\"脚本中启动chrome_mobile_emulation\"></a>脚本中启动chrome_mobile_emulation</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">mobile_emulation = &#123;<span class=\"string\">\"deviceName\"</span>: <span class=\"string\">\"Google Nexus 5\"</span>&#125;</div><div class=\"line\">chrome_options = webdriver.ChromeOptions()</div><div class=\"line\">chrome_options.add_experimental_option(<span class=\"string\">\"mobileEmulation\"</span>, mobile_emulation)</div><div class=\"line\">self.driver = webdriver.Remote(command_executor=<span class=\"string\">'http://127.0.0.1:4444/wd/hub'</span>,</div><div class=\"line\">                               desired_capabilities=chrome_options.to_capabilities())</div></pre></td></tr></table></figure>\n<h3 id=\"selenium-基本语法\"><a href=\"#selenium-基本语法\" class=\"headerlink\" title=\"selenium 基本语法\"></a>selenium 基本语法</h3><h4 id=\"网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接\"><a href=\"#网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接\" class=\"headerlink\" title=\"网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接\"></a>网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接</h4><h4 id=\"webdriver常用方法\"><a href=\"#webdriver常用方法\" class=\"headerlink\" title=\"webdriver常用方法\"></a>webdriver常用方法</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'add_cookie'</span>, 在当前的会话添加一个cookie</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'application_cache'</span>, 返回一个对象ApplicationCache与浏览器的应用程序缓存交互</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'back'</span>, 返回至上一个浏览历史</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'capabilities'</span>, remote参数</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'close'</span>, 关闭</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'command_executor'</span>, remote webdriver参数</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'create_options'</span>, chrome webdriver参数</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'create_web_element'</span>, 创建具有指定element_id网络元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'current_url'</span>, 当前页面的url</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'current_window_handle'</span>, 返回当前窗口的句柄</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'delete_all_cookies'</span>, 删除所有Cookie会话的范围</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'delete_cookie'</span>,删除指定名称的单一的cookie。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'desired_capabilities'</span>, 返回正在使用当前所需功能的驱动程序</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'error_handler'</span>, 用于处理错误errorhandler.ErrorHandler对象。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'execute'</span>,  发送到由一个command.CommandExecutor要执行的命令。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'execute_async_script'</span>,  异步执行当前窗口/帧的JavaScript。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'execute_script'</span>, 同步地执行在当前窗口/帧的JavaScript。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'file_detector'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'file_detector_context'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_class_name'</span>,通过查找类名的元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_css_selector'</span>,通过查找CSS选择器的元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_id'</span>,通过ID查找元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_link_text'</span>, 通过查找链接文本的元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_name'</span>,通过名称查找元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_partial_link_text'</span>,其链接文本的部分匹配查找元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_tag_name'</span>,查找按标签名称的元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_xpath'</span>,与XPath查找元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_class_name'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_css_selector'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_id'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_link_text'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_name'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_partial_link_text'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_tag_name'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_xpath'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'forward'</span>,前进了一步在浏览器历史记录。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get'</span>, 加载在当前浏览器会话的网页。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_cookie'</span>,按名称获取一个Cookie。如果找到，无如果不返回cookie。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_cookies'</span>,返回一组词典，对应的cookie在当前会话中可见。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_log'</span>,获取日志对于给定的日志类型</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_screenshot_as_base64'</span>,获取当前窗口的截图为Base64编码的字符串 这是在以HTML嵌入的图像是有用的。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_screenshot_as_file'</span>,获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回<span class=\"keyword\">True</span>。使用完整路径在你的文件名。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_screenshot_as_png'</span>,获取当前窗口的屏幕快照作为二进制数据。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_window_position'</span>,获取当前窗口的x，y位置。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_window_size'</span>,获取当前窗口的宽度和高度。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'implicitly_wait'</span>,用粘超时隐含等待被发现的元素， 或命令来完成。这种方法只需要调用每个会话一次</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'launch_app'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'log_types'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'maximize_window'</span>,最大限度地增加了的webdriver使用当前窗口</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'mobile'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'name'</span>,返回此实例中的底层浏览器的名称。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'orientation'</span>,获取设备的当前方位</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'page_source'</span>,获取当前页面的源代码。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'quit'</span>, 关闭浏览器并关闭启动ChromeDriver时启动的ChromeDriver可执行</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'refresh'</span>, 刷新当前页面</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'save_screenshot'</span>,获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回<span class=\"keyword\">True</span>。使用完整路径在你的文件名。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'service'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'session_id'</span>,浏览器会话的字符串ID开始，这个控制的webdriver。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'set_page_load_timeout'</span>,设置的时间量，以等待一个页面加载完成 之前抛出一个错误。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'set_script_timeout'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'set_window_position'</span>,设置当前窗口的x，y位置。 （window.moveTo）</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'set_window_size'</span>,设置当前窗口的宽度和高度。 （window.resizeTo）</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'start_client'</span>,开始一个新的会话之前调用。这种方法可能会被改写定义自定义启动行为。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'start_session'</span>,创建具有所需功能的一个新的会话。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'stop_client'</span>,执行quit命令后调用。这种方法可能会被改写定义自定义关机行为。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_active_element'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_alert'</span>,切换当前活动的alert窗口</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_default_content'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_frame'</span>,切换至当前活动的frame元素</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_window'</span>,切换至当前活动的浏览器窗口</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'title'</span>,返回当前页面的标题。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'window_handles'</span>返回当前会话中的所有窗口的句柄。</div></pre></td></tr></table></figure>\n<h4 id=\"推荐文档\"><a href=\"#推荐文档\" class=\"headerlink\" title=\"推荐文档\"></a>推荐文档</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">英文:</div><div class=\"line\">http://selenium-python.readthedocs.io/getting-started.html</div><div class=\"line\"></div><div class=\"line\">中文，我参与了翻译过程:</div><div class=\"line\">http://selenium-python-zh.readthedocs.io/en/latest/</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"M站UI自动化过程\"><a href=\"#M站UI自动化过程\" class=\"headerlink\" title=\"M站UI自动化过程\"></a>M站UI自动化过程</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-9/20021003-file_1494301348754_cb1.png\" alt=\"\"></p>\n<h3 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h3><h4 id=\"安装python\"><a href=\"#安装python\" class=\"headerlink\" title=\"安装python\"></a>安装python</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">官网下载，linux与apple免安装</div></pre></td></tr></table></figure>\n<h4 id=\"创建沙盒环境\"><a href=\"#创建沙盒环境\" class=\"headerlink\" title=\"创建沙盒环境\"></a>创建沙盒环境</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">virtualenv myvenv</div></pre></td></tr></table></figure>","more":"<h4 id=\"切换沙盒环境\"><a href=\"#切换沙盒环境\" class=\"headerlink\" title=\"切换沙盒环境\"></a>切换沙盒环境</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source myvenv/bin/activate</div></pre></td></tr></table></figure>\n<h4 id=\"安装selenium包\"><a href=\"#安装selenium包\" class=\"headerlink\" title=\"安装selenium包\"></a>安装selenium包</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install selenium</div></pre></td></tr></table></figure>\n<h4 id=\"下载chromedriver，用来支持webdriver调用chrome\"><a href=\"#下载chromedriver，用来支持webdriver调用chrome\" class=\"headerlink\" title=\"下载chromedriver，用来支持webdriver调用chrome\"></a>下载chromedriver，用来支持webdriver调用chrome</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://chromedriver.storage.googleapis.com/2.22/chromedriver_linux64.zip</div></pre></td></tr></table></figure>\n<h4 id=\"将chromedriver路径加入环境变量\"><a href=\"#将chromedriver路径加入环境变量\" class=\"headerlink\" title=\"将chromedriver路径加入环境变量\"></a>将chromedriver路径加入环境变量</h4><blockquote>\n<p>windows和linux方式有所不同，请自行google。</p>\n</blockquote>\n<p><em>若不使用chrome的emulate devices，则不用执行关于selenium-server的步骤</em></p>\n<h4 id=\"下载selenium-server服务，做remote服务，可启动chrome的mobile形式\"><a href=\"#下载selenium-server服务，做remote服务，可启动chrome的mobile形式\" class=\"headerlink\" title=\"下载selenium-server服务，做remote服务，可启动chrome的mobile形式\"></a>下载selenium-server服务，做remote服务，可启动chrome的mobile形式</h4><p>地址如下<br><a href=\"http://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar\" target=\"_blank\" rel=\"external\">selenium-server</a></p>\n<h3 id=\"remote服务启动\"><a href=\"#remote服务启动\" class=\"headerlink\" title=\"remote服务启动\"></a>remote服务启动</h3><h4 id=\"启动selenium-server服务\"><a href=\"#启动selenium-server服务\" class=\"headerlink\" title=\"启动selenium-server服务\"></a>启动selenium-server服务</h4><p>两种形式：</p>\n<h5 id=\"通过脚本启动\"><a href=\"#通过脚本启动\" class=\"headerlink\" title=\"通过脚本启动\"></a>通过脚本启动</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gnome-terminal -t \"title-name\"gnome-terminal -x bash -c \"/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar; exec bash;\"</div></pre></td></tr></table></figure>\n<h5 id=\"直接终端启动\"><a href=\"#直接终端启动\" class=\"headerlink\" title=\"直接终端启动\"></a>直接终端启动</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/bin/java -jar /home/hanz/download/selenium-server-standalone-2.53.1.jar</div></pre></td></tr></table></figure>\n<h4 id=\"脚本中启动chrome-mobile-emulation\"><a href=\"#脚本中启动chrome-mobile-emulation\" class=\"headerlink\" title=\"脚本中启动chrome_mobile_emulation\"></a>脚本中启动chrome_mobile_emulation</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">mobile_emulation = &#123;<span class=\"string\">\"deviceName\"</span>: <span class=\"string\">\"Google Nexus 5\"</span>&#125;</div><div class=\"line\">chrome_options = webdriver.ChromeOptions()</div><div class=\"line\">chrome_options.add_experimental_option(<span class=\"string\">\"mobileEmulation\"</span>, mobile_emulation)</div><div class=\"line\">self.driver = webdriver.Remote(command_executor=<span class=\"string\">'http://127.0.0.1:4444/wd/hub'</span>,</div><div class=\"line\">                               desired_capabilities=chrome_options.to_capabilities())</div></pre></td></tr></table></figure>\n<h3 id=\"selenium-基本语法\"><a href=\"#selenium-基本语法\" class=\"headerlink\" title=\"selenium 基本语法\"></a>selenium 基本语法</h3><h4 id=\"网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接\"><a href=\"#网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接\" class=\"headerlink\" title=\"网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接\"></a>网上有成熟的各路教程，请参考，在最后我附了一些简明的教程链接</h4><h4 id=\"webdriver常用方法\"><a href=\"#webdriver常用方法\" class=\"headerlink\" title=\"webdriver常用方法\"></a>webdriver常用方法</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'add_cookie'</span>, 在当前的会话添加一个cookie</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'application_cache'</span>, 返回一个对象ApplicationCache与浏览器的应用程序缓存交互</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'back'</span>, 返回至上一个浏览历史</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'capabilities'</span>, remote参数</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'close'</span>, 关闭</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'command_executor'</span>, remote webdriver参数</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'create_options'</span>, chrome webdriver参数</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'create_web_element'</span>, 创建具有指定element_id网络元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'current_url'</span>, 当前页面的url</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'current_window_handle'</span>, 返回当前窗口的句柄</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'delete_all_cookies'</span>, 删除所有Cookie会话的范围</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'delete_cookie'</span>,删除指定名称的单一的cookie。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'desired_capabilities'</span>, 返回正在使用当前所需功能的驱动程序</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'error_handler'</span>, 用于处理错误errorhandler.ErrorHandler对象。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'execute'</span>,  发送到由一个command.CommandExecutor要执行的命令。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'execute_async_script'</span>,  异步执行当前窗口/帧的JavaScript。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'execute_script'</span>, 同步地执行在当前窗口/帧的JavaScript。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'file_detector'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'file_detector_context'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_class_name'</span>,通过查找类名的元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_css_selector'</span>,通过查找CSS选择器的元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_id'</span>,通过ID查找元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_link_text'</span>, 通过查找链接文本的元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_name'</span>,通过名称查找元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_partial_link_text'</span>,其链接文本的部分匹配查找元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_tag_name'</span>,查找按标签名称的元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_element_by_xpath'</span>,与XPath查找元素。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_class_name'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_css_selector'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_id'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_link_text'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_name'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_partial_link_text'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_tag_name'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'find_elements_by_xpath'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'forward'</span>,前进了一步在浏览器历史记录。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get'</span>, 加载在当前浏览器会话的网页。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_cookie'</span>,按名称获取一个Cookie。如果找到，无如果不返回cookie。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_cookies'</span>,返回一组词典，对应的cookie在当前会话中可见。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_log'</span>,获取日志对于给定的日志类型</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_screenshot_as_base64'</span>,获取当前窗口的截图为Base64编码的字符串 这是在以HTML嵌入的图像是有用的。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_screenshot_as_file'</span>,获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回<span class=\"keyword\">True</span>。使用完整路径在你的文件名。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_screenshot_as_png'</span>,获取当前窗口的屏幕快照作为二进制数据。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_window_position'</span>,获取当前窗口的x，y位置。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'get_window_size'</span>,获取当前窗口的宽度和高度。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'implicitly_wait'</span>,用粘超时隐含等待被发现的元素， 或命令来完成。这种方法只需要调用每个会话一次</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'launch_app'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'log_types'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'maximize_window'</span>,最大限度地增加了的webdriver使用当前窗口</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'mobile'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'name'</span>,返回此实例中的底层浏览器的名称。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'orientation'</span>,获取设备的当前方位</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'page_source'</span>,获取当前页面的源代码。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'quit'</span>, 关闭浏览器并关闭启动ChromeDriver时启动的ChromeDriver可执行</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'refresh'</span>, 刷新当前页面</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'save_screenshot'</span>,获取当前窗口的截图。如果返回FALSE 任何IO错误，否则返回<span class=\"keyword\">True</span>。使用完整路径在你的文件名。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'service'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'session_id'</span>,浏览器会话的字符串ID开始，这个控制的webdriver。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'set_page_load_timeout'</span>,设置的时间量，以等待一个页面加载完成 之前抛出一个错误。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'set_script_timeout'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'set_window_position'</span>,设置当前窗口的x，y位置。 （window.moveTo）</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'set_window_size'</span>,设置当前窗口的宽度和高度。 （window.resizeTo）</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'start_client'</span>,开始一个新的会话之前调用。这种方法可能会被改写定义自定义启动行为。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'start_session'</span>,创建具有所需功能的一个新的会话。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'stop_client'</span>,执行quit命令后调用。这种方法可能会被改写定义自定义关机行为。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_active_element'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_alert'</span>,切换当前活动的alert窗口</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_default_content'</span>,</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_frame'</span>,切换至当前活动的frame元素</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'switch_to_window'</span>,切换至当前活动的浏览器窗口</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'title'</span>,返回当前页面的标题。</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">'window_handles'</span>返回当前会话中的所有窗口的句柄。</div></pre></td></tr></table></figure>\n<h4 id=\"推荐文档\"><a href=\"#推荐文档\" class=\"headerlink\" title=\"推荐文档\"></a>推荐文档</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">英文:</div><div class=\"line\">http://selenium-python.readthedocs.io/getting-started.html</div><div class=\"line\"></div><div class=\"line\">中文，我参与了翻译过程:</div><div class=\"line\">http://selenium-python-zh.readthedocs.io/en/latest/</div></pre></td></tr></table></figure>"},{"title":"New World!","date":"2016-12-08T21:43:00.000Z","_content":"","source":"_posts/New-World.md","raw":"---\ntitle: New World!\ndate: 2016-12-09 05:43:00\ntags:\n---\n","slug":"New-World","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxql600094rd30i74bvwk","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Python外部脚本调用Django项目的Model","date":"2017-11-02T08:35:59.000Z","_content":"\nPython外部脚本调用Django项目的Model\n====\n\n![django cycle](http://oi1wvrjc2.bkt.clouddn.com/17-11-2/41607477.jpg)\n## 在django中，python脚本状态下进行调用models\n\n我们会有这样的场景，开着项目代码，想执行一个功能简单的脚本，但又想使用django简单的models调用，\n两种方法，均可使用：\n\n### python console\n\n> 十分简单的脚本，推荐这种调试方式\n\n可以选择在`python console`下进行调试脚本，\n\n```bash\npython manage.py shell\n```\n\n因为在此环境下，自动加载了`django`的项目路径至环境变量中\n如果你使用的`pycharm`，可以看一下他的python console:\n\n```python\nimport sys; print('Python %s on %s' % (sys.version, sys.platform))\nimport django; print('Django %s' % django.get_version())\nsys.path.extend(['/home/yours/workspace/PycharmProjects/your_blog', '/home/hanz/programs/pycharm-2017.1.1/helpers/pycharm', '/home/yours/programs/pycharm-2017.1.1/helpers/pydev'])\nif 'setup' in dir(django): django.setup()\nimport django_manage_shell; django_manage_shell.run(\"/home/yours/workspace/PycharmProjects/your_blog\")\nPython 2.7.10 (default, Oct 14 2015, 16:09:02) \n[GCC 5.2.1 20151010] on linux2\nDjango 1.9.5\n\n```\n\n### 在python脚本中引入环境变量\n\n> 如何脚本有一定工作量，建议使用此种方式\n\n```python\n# coding=utf-8\nimport os\nimport sys\nimport django\nsys.path.append('/home/yous/workspace/PycharmProjects/your_blog') # 将项目路径添加到系统搜寻路径当中\nos.environ['DJANGO_SETTINGS_MODULE'] = 'your_blog.settings' # 设置项目的配置文件\ndjango.setup() # 加载项目配置\n```\n\n加入以上代码后，脚本可正常引用项目中的model\n\n```python\nfrom your_proj.models import Series\nseries_ids = Series.objects.values(\"series_id\")\n```\n\n完美！\n\n","source":"_posts/Python外部脚本调用Django项目的Model.md","raw":"---\ntitle: Python外部脚本调用Django项目的Model\ndate: 2017-11-02 16:35:59\ntags: \n- python\n- django\npermalink: Python-external-script-calls-the-Django-project-model-table\ncategories: \n- django\n---\n\nPython外部脚本调用Django项目的Model\n====\n\n![django cycle](http://oi1wvrjc2.bkt.clouddn.com/17-11-2/41607477.jpg)\n## 在django中，python脚本状态下进行调用models\n\n我们会有这样的场景，开着项目代码，想执行一个功能简单的脚本，但又想使用django简单的models调用，\n两种方法，均可使用：\n\n### python console\n\n> 十分简单的脚本，推荐这种调试方式\n\n可以选择在`python console`下进行调试脚本，\n\n```bash\npython manage.py shell\n```\n\n因为在此环境下，自动加载了`django`的项目路径至环境变量中\n如果你使用的`pycharm`，可以看一下他的python console:\n\n```python\nimport sys; print('Python %s on %s' % (sys.version, sys.platform))\nimport django; print('Django %s' % django.get_version())\nsys.path.extend(['/home/yours/workspace/PycharmProjects/your_blog', '/home/hanz/programs/pycharm-2017.1.1/helpers/pycharm', '/home/yours/programs/pycharm-2017.1.1/helpers/pydev'])\nif 'setup' in dir(django): django.setup()\nimport django_manage_shell; django_manage_shell.run(\"/home/yours/workspace/PycharmProjects/your_blog\")\nPython 2.7.10 (default, Oct 14 2015, 16:09:02) \n[GCC 5.2.1 20151010] on linux2\nDjango 1.9.5\n\n```\n\n### 在python脚本中引入环境变量\n\n> 如何脚本有一定工作量，建议使用此种方式\n\n```python\n# coding=utf-8\nimport os\nimport sys\nimport django\nsys.path.append('/home/yous/workspace/PycharmProjects/your_blog') # 将项目路径添加到系统搜寻路径当中\nos.environ['DJANGO_SETTINGS_MODULE'] = 'your_blog.settings' # 设置项目的配置文件\ndjango.setup() # 加载项目配置\n```\n\n加入以上代码后，脚本可正常引用项目中的model\n\n```python\nfrom your_proj.models import Series\nseries_ids = Series.objects.values(\"series_id\")\n```\n\n完美！\n\n","slug":"Python-external-script-calls-the-Django-project-model-table","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxql8000b4rd30w96skgk","content":"<h1 id=\"Python外部脚本调用Django项目的Model\"><a href=\"#Python外部脚本调用Django项目的Model\" class=\"headerlink\" title=\"Python外部脚本调用Django项目的Model\"></a>Python外部脚本调用Django项目的Model</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-11-2/41607477.jpg\" alt=\"django cycle\"></p>\n<h2 id=\"在django中，python脚本状态下进行调用models\"><a href=\"#在django中，python脚本状态下进行调用models\" class=\"headerlink\" title=\"在django中，python脚本状态下进行调用models\"></a>在django中，python脚本状态下进行调用models</h2><p>我们会有这样的场景，开着项目代码，想执行一个功能简单的脚本，但又想使用django简单的models调用，<br>两种方法，均可使用：</p>\n<h3 id=\"python-console\"><a href=\"#python-console\" class=\"headerlink\" title=\"python console\"></a>python console</h3><blockquote>\n<p>十分简单的脚本，推荐这种调试方式</p>\n</blockquote>\n<p>可以选择在<code>python console</code>下进行调试脚本，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python manage.py shell</div></pre></td></tr></table></figure>\n<p>因为在此环境下，自动加载了<code>django</code>的项目路径至环境变量中<br>如果你使用的<code>pycharm</code>，可以看一下他的python console:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> sys; print(<span class=\"string\">'Python %s on %s'</span> % (sys.version, sys.platform))</div><div class=\"line\"><span class=\"keyword\">import</span> django; print(<span class=\"string\">'Django %s'</span> % django.get_version())</div><div class=\"line\">sys.path.extend([<span class=\"string\">'/home/yours/workspace/PycharmProjects/your_blog'</span>, <span class=\"string\">'/home/hanz/programs/pycharm-2017.1.1/helpers/pycharm'</span>, <span class=\"string\">'/home/yours/programs/pycharm-2017.1.1/helpers/pydev'</span>])</div><div class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">'setup'</span> <span class=\"keyword\">in</span> dir(django): django.setup()</div><div class=\"line\"><span class=\"keyword\">import</span> django_manage_shell; django_manage_shell.run(<span class=\"string\">\"/home/yours/workspace/PycharmProjects/your_blog\"</span>)</div><div class=\"line\">Python <span class=\"number\">2.7</span><span class=\"number\">.10</span> (default, Oct <span class=\"number\">14</span> <span class=\"number\">2015</span>, <span class=\"number\">16</span>:<span class=\"number\">09</span>:<span class=\"number\">02</span>) </div><div class=\"line\">[GCC <span class=\"number\">5.2</span><span class=\"number\">.1</span> <span class=\"number\">20151010</span>] on linux2</div><div class=\"line\">Django <span class=\"number\">1.9</span><span class=\"number\">.5</span></div></pre></td></tr></table></figure>\n<h3 id=\"在python脚本中引入环境变量\"><a href=\"#在python脚本中引入环境变量\" class=\"headerlink\" title=\"在python脚本中引入环境变量\"></a>在python脚本中引入环境变量</h3><blockquote>\n<p>如何脚本有一定工作量，建议使用此种方式</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># coding=utf-8</span></div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> django</div><div class=\"line\">sys.path.append(<span class=\"string\">'/home/yous/workspace/PycharmProjects/your_blog'</span>) <span class=\"comment\"># 将项目路径添加到系统搜寻路径当中</span></div><div class=\"line\">os.environ[<span class=\"string\">'DJANGO_SETTINGS_MODULE'</span>] = <span class=\"string\">'your_blog.settings'</span> <span class=\"comment\"># 设置项目的配置文件</span></div><div class=\"line\">django.setup() <span class=\"comment\"># 加载项目配置</span></div></pre></td></tr></table></figure>\n<p>加入以上代码后，脚本可正常引用项目中的model</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> your_proj.models <span class=\"keyword\">import</span> Series</div><div class=\"line\">series_ids = Series.objects.values(<span class=\"string\">\"series_id\"</span>)</div></pre></td></tr></table></figure>\n<p>完美！</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Python外部脚本调用Django项目的Model\"><a href=\"#Python外部脚本调用Django项目的Model\" class=\"headerlink\" title=\"Python外部脚本调用Django项目的Model\"></a>Python外部脚本调用Django项目的Model</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-11-2/41607477.jpg\" alt=\"django cycle\"></p>\n<h2 id=\"在django中，python脚本状态下进行调用models\"><a href=\"#在django中，python脚本状态下进行调用models\" class=\"headerlink\" title=\"在django中，python脚本状态下进行调用models\"></a>在django中，python脚本状态下进行调用models</h2><p>我们会有这样的场景，开着项目代码，想执行一个功能简单的脚本，但又想使用django简单的models调用，<br>两种方法，均可使用：</p>\n<h3 id=\"python-console\"><a href=\"#python-console\" class=\"headerlink\" title=\"python console\"></a>python console</h3><blockquote>\n<p>十分简单的脚本，推荐这种调试方式</p>\n</blockquote>\n<p>可以选择在<code>python console</code>下进行调试脚本，</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python manage.py shell</div></pre></td></tr></table></figure>\n<p>因为在此环境下，自动加载了<code>django</code>的项目路径至环境变量中<br>如果你使用的<code>pycharm</code>，可以看一下他的python console:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> sys; print(<span class=\"string\">'Python %s on %s'</span> % (sys.version, sys.platform))</div><div class=\"line\"><span class=\"keyword\">import</span> django; print(<span class=\"string\">'Django %s'</span> % django.get_version())</div><div class=\"line\">sys.path.extend([<span class=\"string\">'/home/yours/workspace/PycharmProjects/your_blog'</span>, <span class=\"string\">'/home/hanz/programs/pycharm-2017.1.1/helpers/pycharm'</span>, <span class=\"string\">'/home/yours/programs/pycharm-2017.1.1/helpers/pydev'</span>])</div><div class=\"line\"><span class=\"keyword\">if</span> <span class=\"string\">'setup'</span> <span class=\"keyword\">in</span> dir(django): django.setup()</div><div class=\"line\"><span class=\"keyword\">import</span> django_manage_shell; django_manage_shell.run(<span class=\"string\">\"/home/yours/workspace/PycharmProjects/your_blog\"</span>)</div><div class=\"line\">Python <span class=\"number\">2.7</span><span class=\"number\">.10</span> (default, Oct <span class=\"number\">14</span> <span class=\"number\">2015</span>, <span class=\"number\">16</span>:<span class=\"number\">09</span>:<span class=\"number\">02</span>) </div><div class=\"line\">[GCC <span class=\"number\">5.2</span><span class=\"number\">.1</span> <span class=\"number\">20151010</span>] on linux2</div><div class=\"line\">Django <span class=\"number\">1.9</span><span class=\"number\">.5</span></div></pre></td></tr></table></figure>\n<h3 id=\"在python脚本中引入环境变量\"><a href=\"#在python脚本中引入环境变量\" class=\"headerlink\" title=\"在python脚本中引入环境变量\"></a>在python脚本中引入环境变量</h3><blockquote>\n<p>如何脚本有一定工作量，建议使用此种方式</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># coding=utf-8</span></div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> django</div><div class=\"line\">sys.path.append(<span class=\"string\">'/home/yous/workspace/PycharmProjects/your_blog'</span>) <span class=\"comment\"># 将项目路径添加到系统搜寻路径当中</span></div><div class=\"line\">os.environ[<span class=\"string\">'DJANGO_SETTINGS_MODULE'</span>] = <span class=\"string\">'your_blog.settings'</span> <span class=\"comment\"># 设置项目的配置文件</span></div><div class=\"line\">django.setup() <span class=\"comment\"># 加载项目配置</span></div></pre></td></tr></table></figure>\n<p>加入以上代码后，脚本可正常引用项目中的model</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> your_proj.models <span class=\"keyword\">import</span> Series</div><div class=\"line\">series_ids = Series.objects.values(<span class=\"string\">\"series_id\"</span>)</div></pre></td></tr></table></figure>\n<p>完美！</p>\n"},{"title":"Unit7: The Sampler","date":"2016-12-21T02:42:40.000Z","_content":"\nUnit Seven: The Sampler\n====\n\n<!--more-->\n\nThe author finds out that good intentions alone are not enough when\nhis attempt to be kind to an old man leaves them both feeling worse than\nbefore.\n\n**find out**\n\nI have often wondered whether some people, who had no intention of making a purchase,\nwould take advantage of this privilege.\n\n我经常会奇怪，\nOne day I asked this question of shop girl, and I learned it was indeed the case.\n\n有一天我问了店员女孩这个问题，\n\"Now there's one old gentleman, for instance,\" she told me, \" he comes here\nalmost every week and samples each one of the puddings, though he never buys\nanything, and I suspect he never will. I remember him from last year before\nthat, too. Well, let him come if he wants it, and welcome to it. And what's more\n, I hope there are a lot more stores where he can go and get his share. He looks as\nif he needed it all right, and I suppose they can afford it .\"\n\nShe was still speaking when an elderly gentleman limped up to the counter and\nbegan looking closely at the row of puddings with great interest.\n\n\"Why, that's the very gentleman I've been telling you about,\" whispered the shop girl.\"\nJust watch him now. \"And then turning to him:\" Would you like to sample them, sir? Here's\nspoon for you to use.\"\n\nThe elderly gentleman, who was poorly but neatly dressed, accepted the spoon and began eagerly\nto sample one after another of the puddings, only braking off occasionally to wipe his\nred eyes with a large torn handkerchief.\n\n\"This is quite good.\"\n\n\"This is not bad either, but a little too heavy.\"\n\nAll the time it was quite evident that he sincerely believed that he might eventually buy one\nof these puddings, and I am positive that he did not for a moment feel that he was in any way cheating\nthe store. Poor old chap! Probably he had come down in the world and this sampling was all that was\nleft him from the time when he could afford to come and select his favorite pudding.\n\nAmidst the crowd of happy, prosperous looking Christmas shoppers, the little black figure of the of\nman seemed pitiful and out of place, and in a burst of benevolence, I went up to him and said:\n\"Pardon me, sir, will you do me a favor? Let me purchase you one of these puddings. It would give me\nsuch pleasure.\"\n\nHe jumped back as if he had been stung, and the blood rushed into his wrinkled face.\n\n\"Excuse me,\" he said, with more dignity than I would have thought possible","source":"_posts/Unit7-The-Sampler.md","raw":"---\ntitle: 'Unit7: The Sampler'\ndate: 2016-12-21 10:42:40\ntags:\n- English\ncategories:\n- English\n---\n\nUnit Seven: The Sampler\n====\n\n<!--more-->\n\nThe author finds out that good intentions alone are not enough when\nhis attempt to be kind to an old man leaves them both feeling worse than\nbefore.\n\n**find out**\n\nI have often wondered whether some people, who had no intention of making a purchase,\nwould take advantage of this privilege.\n\n我经常会奇怪，\nOne day I asked this question of shop girl, and I learned it was indeed the case.\n\n有一天我问了店员女孩这个问题，\n\"Now there's one old gentleman, for instance,\" she told me, \" he comes here\nalmost every week and samples each one of the puddings, though he never buys\nanything, and I suspect he never will. I remember him from last year before\nthat, too. Well, let him come if he wants it, and welcome to it. And what's more\n, I hope there are a lot more stores where he can go and get his share. He looks as\nif he needed it all right, and I suppose they can afford it .\"\n\nShe was still speaking when an elderly gentleman limped up to the counter and\nbegan looking closely at the row of puddings with great interest.\n\n\"Why, that's the very gentleman I've been telling you about,\" whispered the shop girl.\"\nJust watch him now. \"And then turning to him:\" Would you like to sample them, sir? Here's\nspoon for you to use.\"\n\nThe elderly gentleman, who was poorly but neatly dressed, accepted the spoon and began eagerly\nto sample one after another of the puddings, only braking off occasionally to wipe his\nred eyes with a large torn handkerchief.\n\n\"This is quite good.\"\n\n\"This is not bad either, but a little too heavy.\"\n\nAll the time it was quite evident that he sincerely believed that he might eventually buy one\nof these puddings, and I am positive that he did not for a moment feel that he was in any way cheating\nthe store. Poor old chap! Probably he had come down in the world and this sampling was all that was\nleft him from the time when he could afford to come and select his favorite pudding.\n\nAmidst the crowd of happy, prosperous looking Christmas shoppers, the little black figure of the of\nman seemed pitiful and out of place, and in a burst of benevolence, I went up to him and said:\n\"Pardon me, sir, will you do me a favor? Let me purchase you one of these puddings. It would give me\nsuch pleasure.\"\n\nHe jumped back as if he had been stung, and the blood rushed into his wrinkled face.\n\n\"Excuse me,\" he said, with more dignity than I would have thought possible","slug":"Unit7-The-Sampler","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqle000f4rd3pfbo2l5u","content":"<h1 id=\"Unit-Seven-The-Sampler\"><a href=\"#Unit-Seven-The-Sampler\" class=\"headerlink\" title=\"Unit Seven: The Sampler\"></a>Unit Seven: The Sampler</h1><a id=\"more\"></a>\n<p>The author finds out that good intentions alone are not enough when<br>his attempt to be kind to an old man leaves them both feeling worse than<br>before.</p>\n<p><strong>find out</strong></p>\n<p>I have often wondered whether some people, who had no intention of making a purchase,<br>would take advantage of this privilege.</p>\n<p>我经常会奇怪，<br>One day I asked this question of shop girl, and I learned it was indeed the case.</p>\n<p>有一天我问了店员女孩这个问题，<br>“Now there’s one old gentleman, for instance,” she told me, “ he comes here<br>almost every week and samples each one of the puddings, though he never buys<br>anything, and I suspect he never will. I remember him from last year before<br>that, too. Well, let him come if he wants it, and welcome to it. And what’s more<br>, I hope there are a lot more stores where he can go and get his share. He looks as<br>if he needed it all right, and I suppose they can afford it .”</p>\n<p>She was still speaking when an elderly gentleman limped up to the counter and<br>began looking closely at the row of puddings with great interest.</p>\n<p>“Why, that’s the very gentleman I’ve been telling you about,” whispered the shop girl.”<br>Just watch him now. “And then turning to him:” Would you like to sample them, sir? Here’s<br>spoon for you to use.”</p>\n<p>The elderly gentleman, who was poorly but neatly dressed, accepted the spoon and began eagerly<br>to sample one after another of the puddings, only braking off occasionally to wipe his<br>red eyes with a large torn handkerchief.</p>\n<p>“This is quite good.”</p>\n<p>“This is not bad either, but a little too heavy.”</p>\n<p>All the time it was quite evident that he sincerely believed that he might eventually buy one<br>of these puddings, and I am positive that he did not for a moment feel that he was in any way cheating<br>the store. Poor old chap! Probably he had come down in the world and this sampling was all that was<br>left him from the time when he could afford to come and select his favorite pudding.</p>\n<p>Amidst the crowd of happy, prosperous looking Christmas shoppers, the little black figure of the of<br>man seemed pitiful and out of place, and in a burst of benevolence, I went up to him and said:<br>“Pardon me, sir, will you do me a favor? Let me purchase you one of these puddings. It would give me<br>such pleasure.”</p>\n<p>He jumped back as if he had been stung, and the blood rushed into his wrinkled face.</p>\n<p>“Excuse me,” he said, with more dignity than I would have thought possible</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Unit-Seven-The-Sampler\"><a href=\"#Unit-Seven-The-Sampler\" class=\"headerlink\" title=\"Unit Seven: The Sampler\"></a>Unit Seven: The Sampler</h1>","more":"<p>The author finds out that good intentions alone are not enough when<br>his attempt to be kind to an old man leaves them both feeling worse than<br>before.</p>\n<p><strong>find out</strong></p>\n<p>I have often wondered whether some people, who had no intention of making a purchase,<br>would take advantage of this privilege.</p>\n<p>我经常会奇怪，<br>One day I asked this question of shop girl, and I learned it was indeed the case.</p>\n<p>有一天我问了店员女孩这个问题，<br>“Now there’s one old gentleman, for instance,” she told me, “ he comes here<br>almost every week and samples each one of the puddings, though he never buys<br>anything, and I suspect he never will. I remember him from last year before<br>that, too. Well, let him come if he wants it, and welcome to it. And what’s more<br>, I hope there are a lot more stores where he can go and get his share. He looks as<br>if he needed it all right, and I suppose they can afford it .”</p>\n<p>She was still speaking when an elderly gentleman limped up to the counter and<br>began looking closely at the row of puddings with great interest.</p>\n<p>“Why, that’s the very gentleman I’ve been telling you about,” whispered the shop girl.”<br>Just watch him now. “And then turning to him:” Would you like to sample them, sir? Here’s<br>spoon for you to use.”</p>\n<p>The elderly gentleman, who was poorly but neatly dressed, accepted the spoon and began eagerly<br>to sample one after another of the puddings, only braking off occasionally to wipe his<br>red eyes with a large torn handkerchief.</p>\n<p>“This is quite good.”</p>\n<p>“This is not bad either, but a little too heavy.”</p>\n<p>All the time it was quite evident that he sincerely believed that he might eventually buy one<br>of these puddings, and I am positive that he did not for a moment feel that he was in any way cheating<br>the store. Poor old chap! Probably he had come down in the world and this sampling was all that was<br>left him from the time when he could afford to come and select his favorite pudding.</p>\n<p>Amidst the crowd of happy, prosperous looking Christmas shoppers, the little black figure of the of<br>man seemed pitiful and out of place, and in a burst of benevolence, I went up to him and said:<br>“Pardon me, sir, will you do me a favor? Let me purchase you one of these puddings. It would give me<br>such pleasure.”</p>\n<p>He jumped back as if he had been stung, and the blood rushed into his wrinkled face.</p>\n<p>“Excuse me,” he said, with more dignity than I would have thought possible</p>"},{"title":"celery小试牛刀","date":"2017-05-02T07:51:34.000Z","catetories":["python"],"thumbnail":"http://oi1wvrjc2.bkt.clouddn.com/17-5-2/87108123-file_1493712414064_6eb1.png","_content":"\n# 如何使用celery执行异步任务\n\n\n# 如何使用celery beat执行定时任务\n","source":"_posts/celery小试牛刀.md","raw":"---\ntitle: celery小试牛刀\ndate: 2017-05-02 15:51:34\ntags: \n- celery\ncatetories:\n- python\n\npermalink: how-to-use-celery-running-task\nthumbnail: http://oi1wvrjc2.bkt.clouddn.com/17-5-2/87108123-file_1493712414064_6eb1.png\n---\n\n# 如何使用celery执行异步任务\n\n\n# 如何使用celery beat执行定时任务\n","slug":"how-to-use-celery-running-task","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqlg000h4rd3xj9hv7qa","content":"<h1 id=\"如何使用celery执行异步任务\"><a href=\"#如何使用celery执行异步任务\" class=\"headerlink\" title=\"如何使用celery执行异步任务\"></a>如何使用celery执行异步任务</h1><h1 id=\"如何使用celery-beat执行定时任务\"><a href=\"#如何使用celery-beat执行定时任务\" class=\"headerlink\" title=\"如何使用celery beat执行定时任务\"></a>如何使用celery beat执行定时任务</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何使用celery执行异步任务\"><a href=\"#如何使用celery执行异步任务\" class=\"headerlink\" title=\"如何使用celery执行异步任务\"></a>如何使用celery执行异步任务</h1><h1 id=\"如何使用celery-beat执行定时任务\"><a href=\"#如何使用celery-beat执行定时任务\" class=\"headerlink\" title=\"如何使用celery beat执行定时任务\"></a>如何使用celery beat执行定时任务</h1>"},{"title":"django admin的个性定制与方法覆写","date":"2017-02-13T12:18:51.000Z","_content":"\n## django modeladmin 个性定制与方法覆写\n我喜欢django的原因有很多，最直接的一条是，她有一套强大的model系统，特别是有一套管理后台ModelAdmin，\n让我在做项目时非常方便，但功能做多了，需求也就各式各样了，所以部分功能需要定制化。\n这里就说一下我在项目过程中所遇到的，这些在官方文档中也都有体现。\n\n<!--more-->\n最常见的两项无非是modeladmin和actions的覆写和增加\n\n[官网ModelAdmin](https://docs.djangoproject.com/en/1.10/ref/contrib/admin/)\n\n[官网Actions](https://docs.djangoproject.com/en/1.10/ref/contrib/admin/actions/)\n\n### ModelAdmin\n\n#### get_queryset\nModelAdmin上的get_queryset方法会返回管理网站可以编辑的所有模型实例的QuerySet。\n简单来说就是返回一个从model中查询到的数据对象集合。\n官网给出的示例，qs是获取到的数据集合，然后通过判断是否为管理员类型，对非管理员数据进行过滤：\n\n```python\nclass MyModelAdmin(admin.ModelAdmin):\n    def get_queryset(self, request):\n        qs = super(MyModelAdmin, self).get_queryset(request)\n        if request.user.is_superuser:\n            return qs\n        return qs.filter(author=request.user)\n```\n##### 想要在后台显示列表的序号而非数据库中的ID的实现\n要显示ID比较简单，在list_display中加了id项即可，但这个id是数据在数据库中的id，如果有删除，那么就不是列表序列了。\n我的思路是：通过get_queryset获取到整个列表，从而知道共有多少条数据\n\n```python\nclass MyModelAdmin(admin.ModelAdmin):\n    def get_queryset(self, request):\n        qs = super(MyModelAdmin, self).get_queryset(request)\n        self.qs = qs\n        return qs\n```\n\n然后新建方法获取每次列表循环的obj，判断obj在列表中的位置\n```python\ndef ids(self, obj):\n        return len(self.qs) - list(self.qs).index(obj)\n```\n别忘了在list_display中增加方法名：\n```python\nlist_display = ['ids', 'eventid', 'refpveventid', 'refclickeventid', 'updatetime']\n```\n果断妥妥的！\n![index_id_show](http://oi1wvrjc2.bkt.clouddn.com/17-2-14/94925874-file_1487041725745_ba58.png)\n\n##### 在列表中显示图片(参考网络)\n先拼html代码，然后把显示路径和显示id做为参数传入，bingo! 写法真心灵活。\n```python\ndef img_show(self, obj):\n    # 扩展显示list_display\n    s = u'<img src=\"{}face/{}.jpg\"style=\"width:2em;height:2em\">'\n    return format_html(s, django.conf.settings.MEDIA_URL, str(face.id))\n```\n依然别忘了把方法加入list_display\n```python\nlist_display = ['img_show']\n```\n更高端的用法，大神们自行研究吧～\n\n### Actions\n\n#### 增加通用action\n##### 首先增加actions项\n```python\nactions = ['make_published']\n```\n\n##### 创建make_published方法\n官方示例： 将获取到的queryset中的status字段统一置为p值。\n```python\ndef make_published(modeladmin, request, queryset):\n    queryset.update(status='p')\nmake_published.short_description = \"Mark selected stories as published\"\n```\n其中modeladmin为当前类的ModelAdmin，request为当前的Httprequest，queryset为包含用户所项对象的集合。\n\n同时提供了`short_description`方法，用来自定义名称显示在actions选择的位置。\n\n##### 想要复制选中的数据，并修改其中的部分字段\n其实通过上面的方法，以经有眉目了；但还差一点，差哪呢，就是在post actions的时候，渲染一个template；\n类似于delete_action点击后的页面效果。\n\n这里可以借鉴下delete_selected的实现方式，源码位置：\n`/home/hanz/autohome-venv2.7/local/lib/python2.7/site-packages/django/contrib/admin/actions.py`\n\n这样就简单了，现在只需要增加一个template，可以把模板增加至admin的模板下，比如：`templates/admin/pvtest/db_copy_confirmation.html`\n\n###### 修改数据处理部分\n```python\ndef copy_action(self, request, queryset):\n    if request.POST.get('post'):\n        if perms_needed:\n            raise PermissionDenied\n        n = queryset.count()\n        p_v = request.POST.get(\"pv-version\")\n        if n:\n            for obj in queryset:\n                obj_display = force_text(obj)\n                obj.pk = None\n                obj.pvconfig_id = p_v\n                obj.save()\n                self.log_addition(request, obj, obj_display)\n            self.message_user(request, (u\"成功复制了 %(count)s 个 %(items)s.\") % {\n                \"count\": n, \"items\": model_ngettext(self.opts, n)\n            }, messages.SUCCESS)\n```\n\n复制数据其实还是挺简单的，只需要把pk置空，然后修改指定字段的值，重新保存，就OK了；\n\n###### 修改渲染模板部分\n默认actions的模板位置\n`/home/hanz/python_workspace/flushcount/templates/admin/delete_confirmation.html`\n\n修改actions调用的方法，确保调用的是你自己的复制方法；\n`<input type=\"hidden\" name=\"action\" value=\"copy_action\" />`\n\n剩下的再做一点传参，提示语修改，基本也就OK了，如图：\n\n![复制数据](http://oi1wvrjc2.bkt.clouddn.com/17-2-14/98045277-file_1487051259204_2634.png)\n\n#### delete_action\n覆写删除actions\n\n数据的删除是比较危险的操作，如果你的系统是多用户的话，就应该避免多用户对数据所有数据都可以操作，所以，\n你可以自己写delete_actions\n\n##### 官网没有给出如何覆写delete_actions的方法，但看其他的actions，也应该差不到哪去。\n\n###### 自己增加delete_action\n相当于自己重写一个，使用delete_model方法\n```python\ndef delete_model(self, request, obj):\n    if request.user.is_superuser:\n        obj.delete()\n```\n\n###### 修改显示文案\n```python\ndelete_model.short_description = \"delete selected\"\n```\n\n###### 分权限删除\n# todo\n\n应该在判断数据是谁添加的，删除时只能是谁删除\n\n目前没找到obj的user方法\n","source":"_posts/django-admin的个性定制与方法覆写.md","raw":"---\ntitle: django admin的个性定制与方法覆写\ndate: 2017-02-13 20:18:51\ntags:\n- django\n- modeladmin\n- action\ncategories:\n- python\n- django\npermalink: ModelAdmin-and-action-of-django-admin\n---\n\n## django modeladmin 个性定制与方法覆写\n我喜欢django的原因有很多，最直接的一条是，她有一套强大的model系统，特别是有一套管理后台ModelAdmin，\n让我在做项目时非常方便，但功能做多了，需求也就各式各样了，所以部分功能需要定制化。\n这里就说一下我在项目过程中所遇到的，这些在官方文档中也都有体现。\n\n<!--more-->\n最常见的两项无非是modeladmin和actions的覆写和增加\n\n[官网ModelAdmin](https://docs.djangoproject.com/en/1.10/ref/contrib/admin/)\n\n[官网Actions](https://docs.djangoproject.com/en/1.10/ref/contrib/admin/actions/)\n\n### ModelAdmin\n\n#### get_queryset\nModelAdmin上的get_queryset方法会返回管理网站可以编辑的所有模型实例的QuerySet。\n简单来说就是返回一个从model中查询到的数据对象集合。\n官网给出的示例，qs是获取到的数据集合，然后通过判断是否为管理员类型，对非管理员数据进行过滤：\n\n```python\nclass MyModelAdmin(admin.ModelAdmin):\n    def get_queryset(self, request):\n        qs = super(MyModelAdmin, self).get_queryset(request)\n        if request.user.is_superuser:\n            return qs\n        return qs.filter(author=request.user)\n```\n##### 想要在后台显示列表的序号而非数据库中的ID的实现\n要显示ID比较简单，在list_display中加了id项即可，但这个id是数据在数据库中的id，如果有删除，那么就不是列表序列了。\n我的思路是：通过get_queryset获取到整个列表，从而知道共有多少条数据\n\n```python\nclass MyModelAdmin(admin.ModelAdmin):\n    def get_queryset(self, request):\n        qs = super(MyModelAdmin, self).get_queryset(request)\n        self.qs = qs\n        return qs\n```\n\n然后新建方法获取每次列表循环的obj，判断obj在列表中的位置\n```python\ndef ids(self, obj):\n        return len(self.qs) - list(self.qs).index(obj)\n```\n别忘了在list_display中增加方法名：\n```python\nlist_display = ['ids', 'eventid', 'refpveventid', 'refclickeventid', 'updatetime']\n```\n果断妥妥的！\n![index_id_show](http://oi1wvrjc2.bkt.clouddn.com/17-2-14/94925874-file_1487041725745_ba58.png)\n\n##### 在列表中显示图片(参考网络)\n先拼html代码，然后把显示路径和显示id做为参数传入，bingo! 写法真心灵活。\n```python\ndef img_show(self, obj):\n    # 扩展显示list_display\n    s = u'<img src=\"{}face/{}.jpg\"style=\"width:2em;height:2em\">'\n    return format_html(s, django.conf.settings.MEDIA_URL, str(face.id))\n```\n依然别忘了把方法加入list_display\n```python\nlist_display = ['img_show']\n```\n更高端的用法，大神们自行研究吧～\n\n### Actions\n\n#### 增加通用action\n##### 首先增加actions项\n```python\nactions = ['make_published']\n```\n\n##### 创建make_published方法\n官方示例： 将获取到的queryset中的status字段统一置为p值。\n```python\ndef make_published(modeladmin, request, queryset):\n    queryset.update(status='p')\nmake_published.short_description = \"Mark selected stories as published\"\n```\n其中modeladmin为当前类的ModelAdmin，request为当前的Httprequest，queryset为包含用户所项对象的集合。\n\n同时提供了`short_description`方法，用来自定义名称显示在actions选择的位置。\n\n##### 想要复制选中的数据，并修改其中的部分字段\n其实通过上面的方法，以经有眉目了；但还差一点，差哪呢，就是在post actions的时候，渲染一个template；\n类似于delete_action点击后的页面效果。\n\n这里可以借鉴下delete_selected的实现方式，源码位置：\n`/home/hanz/autohome-venv2.7/local/lib/python2.7/site-packages/django/contrib/admin/actions.py`\n\n这样就简单了，现在只需要增加一个template，可以把模板增加至admin的模板下，比如：`templates/admin/pvtest/db_copy_confirmation.html`\n\n###### 修改数据处理部分\n```python\ndef copy_action(self, request, queryset):\n    if request.POST.get('post'):\n        if perms_needed:\n            raise PermissionDenied\n        n = queryset.count()\n        p_v = request.POST.get(\"pv-version\")\n        if n:\n            for obj in queryset:\n                obj_display = force_text(obj)\n                obj.pk = None\n                obj.pvconfig_id = p_v\n                obj.save()\n                self.log_addition(request, obj, obj_display)\n            self.message_user(request, (u\"成功复制了 %(count)s 个 %(items)s.\") % {\n                \"count\": n, \"items\": model_ngettext(self.opts, n)\n            }, messages.SUCCESS)\n```\n\n复制数据其实还是挺简单的，只需要把pk置空，然后修改指定字段的值，重新保存，就OK了；\n\n###### 修改渲染模板部分\n默认actions的模板位置\n`/home/hanz/python_workspace/flushcount/templates/admin/delete_confirmation.html`\n\n修改actions调用的方法，确保调用的是你自己的复制方法；\n`<input type=\"hidden\" name=\"action\" value=\"copy_action\" />`\n\n剩下的再做一点传参，提示语修改，基本也就OK了，如图：\n\n![复制数据](http://oi1wvrjc2.bkt.clouddn.com/17-2-14/98045277-file_1487051259204_2634.png)\n\n#### delete_action\n覆写删除actions\n\n数据的删除是比较危险的操作，如果你的系统是多用户的话，就应该避免多用户对数据所有数据都可以操作，所以，\n你可以自己写delete_actions\n\n##### 官网没有给出如何覆写delete_actions的方法，但看其他的actions，也应该差不到哪去。\n\n###### 自己增加delete_action\n相当于自己重写一个，使用delete_model方法\n```python\ndef delete_model(self, request, obj):\n    if request.user.is_superuser:\n        obj.delete()\n```\n\n###### 修改显示文案\n```python\ndelete_model.short_description = \"delete selected\"\n```\n\n###### 分权限删除\n# todo\n\n应该在判断数据是谁添加的，删除时只能是谁删除\n\n目前没找到obj的user方法\n","slug":"ModelAdmin-and-action-of-django-admin","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqli000l4rd3t9l8q0fh","content":"<h2 id=\"django-modeladmin-个性定制与方法覆写\"><a href=\"#django-modeladmin-个性定制与方法覆写\" class=\"headerlink\" title=\"django modeladmin 个性定制与方法覆写\"></a>django modeladmin 个性定制与方法覆写</h2><p>我喜欢django的原因有很多，最直接的一条是，她有一套强大的model系统，特别是有一套管理后台ModelAdmin，<br>让我在做项目时非常方便，但功能做多了，需求也就各式各样了，所以部分功能需要定制化。<br>这里就说一下我在项目过程中所遇到的，这些在官方文档中也都有体现。</p>\n<a id=\"more\"></a>\n<p>最常见的两项无非是modeladmin和actions的覆写和增加</p>\n<p><a href=\"https://docs.djangoproject.com/en/1.10/ref/contrib/admin/\" target=\"_blank\" rel=\"external\">官网ModelAdmin</a></p>\n<p><a href=\"https://docs.djangoproject.com/en/1.10/ref/contrib/admin/actions/\" target=\"_blank\" rel=\"external\">官网Actions</a></p>\n<h3 id=\"ModelAdmin\"><a href=\"#ModelAdmin\" class=\"headerlink\" title=\"ModelAdmin\"></a>ModelAdmin</h3><h4 id=\"get-queryset\"><a href=\"#get-queryset\" class=\"headerlink\" title=\"get_queryset\"></a>get_queryset</h4><p>ModelAdmin上的get_queryset方法会返回管理网站可以编辑的所有模型实例的QuerySet。<br>简单来说就是返回一个从model中查询到的数据对象集合。<br>官网给出的示例，qs是获取到的数据集合，然后通过判断是否为管理员类型，对非管理员数据进行过滤：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyModelAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self, request)</span>:</span></div><div class=\"line\">        qs = super(MyModelAdmin, self).get_queryset(request)</div><div class=\"line\">        <span class=\"keyword\">if</span> request.user.is_superuser:</div><div class=\"line\">            <span class=\"keyword\">return</span> qs</div><div class=\"line\">        <span class=\"keyword\">return</span> qs.filter(author=request.user)</div></pre></td></tr></table></figure>\n<h5 id=\"想要在后台显示列表的序号而非数据库中的ID的实现\"><a href=\"#想要在后台显示列表的序号而非数据库中的ID的实现\" class=\"headerlink\" title=\"想要在后台显示列表的序号而非数据库中的ID的实现\"></a>想要在后台显示列表的序号而非数据库中的ID的实现</h5><p>要显示ID比较简单，在list_display中加了id项即可，但这个id是数据在数据库中的id，如果有删除，那么就不是列表序列了。<br>我的思路是：通过get_queryset获取到整个列表，从而知道共有多少条数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyModelAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self, request)</span>:</span></div><div class=\"line\">        qs = super(MyModelAdmin, self).get_queryset(request)</div><div class=\"line\">        self.qs = qs</div><div class=\"line\">        <span class=\"keyword\">return</span> qs</div></pre></td></tr></table></figure>\n<p>然后新建方法获取每次列表循环的obj，判断obj在列表中的位置<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ids</span><span class=\"params\">(self, obj)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> len(self.qs) - list(self.qs).index(obj)</div></pre></td></tr></table></figure></p>\n<p>别忘了在list_display中增加方法名：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">list_display = [<span class=\"string\">'ids'</span>, <span class=\"string\">'eventid'</span>, <span class=\"string\">'refpveventid'</span>, <span class=\"string\">'refclickeventid'</span>, <span class=\"string\">'updatetime'</span>]</div></pre></td></tr></table></figure></p>\n<p>果断妥妥的！<br><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-2-14/94925874-file_1487041725745_ba58.png\" alt=\"index_id_show\"></p>\n<h5 id=\"在列表中显示图片-参考网络\"><a href=\"#在列表中显示图片-参考网络\" class=\"headerlink\" title=\"在列表中显示图片(参考网络)\"></a>在列表中显示图片(参考网络)</h5><p>先拼html代码，然后把显示路径和显示id做为参数传入，bingo! 写法真心灵活。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">img_show</span><span class=\"params\">(self, obj)</span>:</span></div><div class=\"line\">    <span class=\"comment\"># 扩展显示list_display</span></div><div class=\"line\">    s = <span class=\"string\">u'&lt;img src=\"&#123;&#125;face/&#123;&#125;.jpg\"style=\"width:2em;height:2em\"&gt;'</span></div><div class=\"line\">    <span class=\"keyword\">return</span> format_html(s, django.conf.settings.MEDIA_URL, str(face.id))</div></pre></td></tr></table></figure></p>\n<p>依然别忘了把方法加入list_display<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">list_display = [<span class=\"string\">'img_show'</span>]</div></pre></td></tr></table></figure></p>\n<p>更高端的用法，大神们自行研究吧～</p>\n<h3 id=\"Actions\"><a href=\"#Actions\" class=\"headerlink\" title=\"Actions\"></a>Actions</h3><h4 id=\"增加通用action\"><a href=\"#增加通用action\" class=\"headerlink\" title=\"增加通用action\"></a>增加通用action</h4><h5 id=\"首先增加actions项\"><a href=\"#首先增加actions项\" class=\"headerlink\" title=\"首先增加actions项\"></a>首先增加actions项</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">actions = [<span class=\"string\">'make_published'</span>]</div></pre></td></tr></table></figure>\n<h5 id=\"创建make-published方法\"><a href=\"#创建make-published方法\" class=\"headerlink\" title=\"创建make_published方法\"></a>创建make_published方法</h5><p>官方示例： 将获取到的queryset中的status字段统一置为p值。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_published</span><span class=\"params\">(modeladmin, request, queryset)</span>:</span></div><div class=\"line\">    queryset.update(status=<span class=\"string\">'p'</span>)</div><div class=\"line\">make_published.short_description = <span class=\"string\">\"Mark selected stories as published\"</span></div></pre></td></tr></table></figure></p>\n<p>其中modeladmin为当前类的ModelAdmin，request为当前的Httprequest，queryset为包含用户所项对象的集合。</p>\n<p>同时提供了<code>short_description</code>方法，用来自定义名称显示在actions选择的位置。</p>\n<h5 id=\"想要复制选中的数据，并修改其中的部分字段\"><a href=\"#想要复制选中的数据，并修改其中的部分字段\" class=\"headerlink\" title=\"想要复制选中的数据，并修改其中的部分字段\"></a>想要复制选中的数据，并修改其中的部分字段</h5><p>其实通过上面的方法，以经有眉目了；但还差一点，差哪呢，就是在post actions的时候，渲染一个template；<br>类似于delete_action点击后的页面效果。</p>\n<p>这里可以借鉴下delete_selected的实现方式，源码位置：<br><code>/home/hanz/autohome-venv2.7/local/lib/python2.7/site-packages/django/contrib/admin/actions.py</code></p>\n<p>这样就简单了，现在只需要增加一个template，可以把模板增加至admin的模板下，比如：<code>templates/admin/pvtest/db_copy_confirmation.html</code></p>\n<h6 id=\"修改数据处理部分\"><a href=\"#修改数据处理部分\" class=\"headerlink\" title=\"修改数据处理部分\"></a>修改数据处理部分</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">copy_action</span><span class=\"params\">(self, request, queryset)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> request.POST.get(<span class=\"string\">'post'</span>):</div><div class=\"line\">        <span class=\"keyword\">if</span> perms_needed:</div><div class=\"line\">            <span class=\"keyword\">raise</span> PermissionDenied</div><div class=\"line\">        n = queryset.count()</div><div class=\"line\">        p_v = request.POST.get(<span class=\"string\">\"pv-version\"</span>)</div><div class=\"line\">        <span class=\"keyword\">if</span> n:</div><div class=\"line\">            <span class=\"keyword\">for</span> obj <span class=\"keyword\">in</span> queryset:</div><div class=\"line\">                obj_display = force_text(obj)</div><div class=\"line\">                obj.pk = <span class=\"keyword\">None</span></div><div class=\"line\">                obj.pvconfig_id = p_v</div><div class=\"line\">                obj.save()</div><div class=\"line\">                self.log_addition(request, obj, obj_display)</div><div class=\"line\">            self.message_user(request, (<span class=\"string\">u\"成功复制了 %(count)s 个 %(items)s.\"</span>) % &#123;</div><div class=\"line\">                <span class=\"string\">\"count\"</span>: n, <span class=\"string\">\"items\"</span>: model_ngettext(self.opts, n)</div><div class=\"line\">            &#125;, messages.SUCCESS)</div></pre></td></tr></table></figure>\n<p>复制数据其实还是挺简单的，只需要把pk置空，然后修改指定字段的值，重新保存，就OK了；</p>\n<h6 id=\"修改渲染模板部分\"><a href=\"#修改渲染模板部分\" class=\"headerlink\" title=\"修改渲染模板部分\"></a>修改渲染模板部分</h6><p>默认actions的模板位置<br><code>/home/hanz/python_workspace/flushcount/templates/admin/delete_confirmation.html</code></p>\n<p>修改actions调用的方法，确保调用的是你自己的复制方法；<br><code>&lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;copy_action&quot; /&gt;</code></p>\n<p>剩下的再做一点传参，提示语修改，基本也就OK了，如图：</p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-2-14/98045277-file_1487051259204_2634.png\" alt=\"复制数据\"></p>\n<h4 id=\"delete-action\"><a href=\"#delete-action\" class=\"headerlink\" title=\"delete_action\"></a>delete_action</h4><p>覆写删除actions</p>\n<p>数据的删除是比较危险的操作，如果你的系统是多用户的话，就应该避免多用户对数据所有数据都可以操作，所以，<br>你可以自己写delete_actions</p>\n<h5 id=\"官网没有给出如何覆写delete-actions的方法，但看其他的actions，也应该差不到哪去。\"><a href=\"#官网没有给出如何覆写delete-actions的方法，但看其他的actions，也应该差不到哪去。\" class=\"headerlink\" title=\"官网没有给出如何覆写delete_actions的方法，但看其他的actions，也应该差不到哪去。\"></a>官网没有给出如何覆写delete_actions的方法，但看其他的actions，也应该差不到哪去。</h5><h6 id=\"自己增加delete-action\"><a href=\"#自己增加delete-action\" class=\"headerlink\" title=\"自己增加delete_action\"></a>自己增加delete_action</h6><p>相当于自己重写一个，使用delete_model方法<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delete_model</span><span class=\"params\">(self, request, obj)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> request.user.is_superuser:</div><div class=\"line\">        obj.delete()</div></pre></td></tr></table></figure></p>\n<h6 id=\"修改显示文案\"><a href=\"#修改显示文案\" class=\"headerlink\" title=\"修改显示文案\"></a>修改显示文案</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">delete_model.short_description = <span class=\"string\">\"delete selected\"</span></div></pre></td></tr></table></figure>\n<h6 id=\"分权限删除\"><a href=\"#分权限删除\" class=\"headerlink\" title=\"分权限删除\"></a>分权限删除</h6><h1 id=\"todo\"><a href=\"#todo\" class=\"headerlink\" title=\"todo\"></a>todo</h1><p>应该在判断数据是谁添加的，删除时只能是谁删除</p>\n<p>目前没找到obj的user方法</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"django-modeladmin-个性定制与方法覆写\"><a href=\"#django-modeladmin-个性定制与方法覆写\" class=\"headerlink\" title=\"django modeladmin 个性定制与方法覆写\"></a>django modeladmin 个性定制与方法覆写</h2><p>我喜欢django的原因有很多，最直接的一条是，她有一套强大的model系统，特别是有一套管理后台ModelAdmin，<br>让我在做项目时非常方便，但功能做多了，需求也就各式各样了，所以部分功能需要定制化。<br>这里就说一下我在项目过程中所遇到的，这些在官方文档中也都有体现。</p>","more":"<p>最常见的两项无非是modeladmin和actions的覆写和增加</p>\n<p><a href=\"https://docs.djangoproject.com/en/1.10/ref/contrib/admin/\" target=\"_blank\" rel=\"external\">官网ModelAdmin</a></p>\n<p><a href=\"https://docs.djangoproject.com/en/1.10/ref/contrib/admin/actions/\" target=\"_blank\" rel=\"external\">官网Actions</a></p>\n<h3 id=\"ModelAdmin\"><a href=\"#ModelAdmin\" class=\"headerlink\" title=\"ModelAdmin\"></a>ModelAdmin</h3><h4 id=\"get-queryset\"><a href=\"#get-queryset\" class=\"headerlink\" title=\"get_queryset\"></a>get_queryset</h4><p>ModelAdmin上的get_queryset方法会返回管理网站可以编辑的所有模型实例的QuerySet。<br>简单来说就是返回一个从model中查询到的数据对象集合。<br>官网给出的示例，qs是获取到的数据集合，然后通过判断是否为管理员类型，对非管理员数据进行过滤：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyModelAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self, request)</span>:</span></div><div class=\"line\">        qs = super(MyModelAdmin, self).get_queryset(request)</div><div class=\"line\">        <span class=\"keyword\">if</span> request.user.is_superuser:</div><div class=\"line\">            <span class=\"keyword\">return</span> qs</div><div class=\"line\">        <span class=\"keyword\">return</span> qs.filter(author=request.user)</div></pre></td></tr></table></figure>\n<h5 id=\"想要在后台显示列表的序号而非数据库中的ID的实现\"><a href=\"#想要在后台显示列表的序号而非数据库中的ID的实现\" class=\"headerlink\" title=\"想要在后台显示列表的序号而非数据库中的ID的实现\"></a>想要在后台显示列表的序号而非数据库中的ID的实现</h5><p>要显示ID比较简单，在list_display中加了id项即可，但这个id是数据在数据库中的id，如果有删除，那么就不是列表序列了。<br>我的思路是：通过get_queryset获取到整个列表，从而知道共有多少条数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyModelAdmin</span><span class=\"params\">(admin.ModelAdmin)</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_queryset</span><span class=\"params\">(self, request)</span>:</span></div><div class=\"line\">        qs = super(MyModelAdmin, self).get_queryset(request)</div><div class=\"line\">        self.qs = qs</div><div class=\"line\">        <span class=\"keyword\">return</span> qs</div></pre></td></tr></table></figure>\n<p>然后新建方法获取每次列表循环的obj，判断obj在列表中的位置<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ids</span><span class=\"params\">(self, obj)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">return</span> len(self.qs) - list(self.qs).index(obj)</div></pre></td></tr></table></figure></p>\n<p>别忘了在list_display中增加方法名：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">list_display = [<span class=\"string\">'ids'</span>, <span class=\"string\">'eventid'</span>, <span class=\"string\">'refpveventid'</span>, <span class=\"string\">'refclickeventid'</span>, <span class=\"string\">'updatetime'</span>]</div></pre></td></tr></table></figure></p>\n<p>果断妥妥的！<br><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-2-14/94925874-file_1487041725745_ba58.png\" alt=\"index_id_show\"></p>\n<h5 id=\"在列表中显示图片-参考网络\"><a href=\"#在列表中显示图片-参考网络\" class=\"headerlink\" title=\"在列表中显示图片(参考网络)\"></a>在列表中显示图片(参考网络)</h5><p>先拼html代码，然后把显示路径和显示id做为参数传入，bingo! 写法真心灵活。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">img_show</span><span class=\"params\">(self, obj)</span>:</span></div><div class=\"line\">    <span class=\"comment\"># 扩展显示list_display</span></div><div class=\"line\">    s = <span class=\"string\">u'&lt;img src=\"&#123;&#125;face/&#123;&#125;.jpg\"style=\"width:2em;height:2em\"&gt;'</span></div><div class=\"line\">    <span class=\"keyword\">return</span> format_html(s, django.conf.settings.MEDIA_URL, str(face.id))</div></pre></td></tr></table></figure></p>\n<p>依然别忘了把方法加入list_display<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">list_display = [<span class=\"string\">'img_show'</span>]</div></pre></td></tr></table></figure></p>\n<p>更高端的用法，大神们自行研究吧～</p>\n<h3 id=\"Actions\"><a href=\"#Actions\" class=\"headerlink\" title=\"Actions\"></a>Actions</h3><h4 id=\"增加通用action\"><a href=\"#增加通用action\" class=\"headerlink\" title=\"增加通用action\"></a>增加通用action</h4><h5 id=\"首先增加actions项\"><a href=\"#首先增加actions项\" class=\"headerlink\" title=\"首先增加actions项\"></a>首先增加actions项</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">actions = [<span class=\"string\">'make_published'</span>]</div></pre></td></tr></table></figure>\n<h5 id=\"创建make-published方法\"><a href=\"#创建make-published方法\" class=\"headerlink\" title=\"创建make_published方法\"></a>创建make_published方法</h5><p>官方示例： 将获取到的queryset中的status字段统一置为p值。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_published</span><span class=\"params\">(modeladmin, request, queryset)</span>:</span></div><div class=\"line\">    queryset.update(status=<span class=\"string\">'p'</span>)</div><div class=\"line\">make_published.short_description = <span class=\"string\">\"Mark selected stories as published\"</span></div></pre></td></tr></table></figure></p>\n<p>其中modeladmin为当前类的ModelAdmin，request为当前的Httprequest，queryset为包含用户所项对象的集合。</p>\n<p>同时提供了<code>short_description</code>方法，用来自定义名称显示在actions选择的位置。</p>\n<h5 id=\"想要复制选中的数据，并修改其中的部分字段\"><a href=\"#想要复制选中的数据，并修改其中的部分字段\" class=\"headerlink\" title=\"想要复制选中的数据，并修改其中的部分字段\"></a>想要复制选中的数据，并修改其中的部分字段</h5><p>其实通过上面的方法，以经有眉目了；但还差一点，差哪呢，就是在post actions的时候，渲染一个template；<br>类似于delete_action点击后的页面效果。</p>\n<p>这里可以借鉴下delete_selected的实现方式，源码位置：<br><code>/home/hanz/autohome-venv2.7/local/lib/python2.7/site-packages/django/contrib/admin/actions.py</code></p>\n<p>这样就简单了，现在只需要增加一个template，可以把模板增加至admin的模板下，比如：<code>templates/admin/pvtest/db_copy_confirmation.html</code></p>\n<h6 id=\"修改数据处理部分\"><a href=\"#修改数据处理部分\" class=\"headerlink\" title=\"修改数据处理部分\"></a>修改数据处理部分</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">copy_action</span><span class=\"params\">(self, request, queryset)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> request.POST.get(<span class=\"string\">'post'</span>):</div><div class=\"line\">        <span class=\"keyword\">if</span> perms_needed:</div><div class=\"line\">            <span class=\"keyword\">raise</span> PermissionDenied</div><div class=\"line\">        n = queryset.count()</div><div class=\"line\">        p_v = request.POST.get(<span class=\"string\">\"pv-version\"</span>)</div><div class=\"line\">        <span class=\"keyword\">if</span> n:</div><div class=\"line\">            <span class=\"keyword\">for</span> obj <span class=\"keyword\">in</span> queryset:</div><div class=\"line\">                obj_display = force_text(obj)</div><div class=\"line\">                obj.pk = <span class=\"keyword\">None</span></div><div class=\"line\">                obj.pvconfig_id = p_v</div><div class=\"line\">                obj.save()</div><div class=\"line\">                self.log_addition(request, obj, obj_display)</div><div class=\"line\">            self.message_user(request, (<span class=\"string\">u\"成功复制了 %(count)s 个 %(items)s.\"</span>) % &#123;</div><div class=\"line\">                <span class=\"string\">\"count\"</span>: n, <span class=\"string\">\"items\"</span>: model_ngettext(self.opts, n)</div><div class=\"line\">            &#125;, messages.SUCCESS)</div></pre></td></tr></table></figure>\n<p>复制数据其实还是挺简单的，只需要把pk置空，然后修改指定字段的值，重新保存，就OK了；</p>\n<h6 id=\"修改渲染模板部分\"><a href=\"#修改渲染模板部分\" class=\"headerlink\" title=\"修改渲染模板部分\"></a>修改渲染模板部分</h6><p>默认actions的模板位置<br><code>/home/hanz/python_workspace/flushcount/templates/admin/delete_confirmation.html</code></p>\n<p>修改actions调用的方法，确保调用的是你自己的复制方法；<br><code>&lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;copy_action&quot; /&gt;</code></p>\n<p>剩下的再做一点传参，提示语修改，基本也就OK了，如图：</p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-2-14/98045277-file_1487051259204_2634.png\" alt=\"复制数据\"></p>\n<h4 id=\"delete-action\"><a href=\"#delete-action\" class=\"headerlink\" title=\"delete_action\"></a>delete_action</h4><p>覆写删除actions</p>\n<p>数据的删除是比较危险的操作，如果你的系统是多用户的话，就应该避免多用户对数据所有数据都可以操作，所以，<br>你可以自己写delete_actions</p>\n<h5 id=\"官网没有给出如何覆写delete-actions的方法，但看其他的actions，也应该差不到哪去。\"><a href=\"#官网没有给出如何覆写delete-actions的方法，但看其他的actions，也应该差不到哪去。\" class=\"headerlink\" title=\"官网没有给出如何覆写delete_actions的方法，但看其他的actions，也应该差不到哪去。\"></a>官网没有给出如何覆写delete_actions的方法，但看其他的actions，也应该差不到哪去。</h5><h6 id=\"自己增加delete-action\"><a href=\"#自己增加delete-action\" class=\"headerlink\" title=\"自己增加delete_action\"></a>自己增加delete_action</h6><p>相当于自己重写一个，使用delete_model方法<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delete_model</span><span class=\"params\">(self, request, obj)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> request.user.is_superuser:</div><div class=\"line\">        obj.delete()</div></pre></td></tr></table></figure></p>\n<h6 id=\"修改显示文案\"><a href=\"#修改显示文案\" class=\"headerlink\" title=\"修改显示文案\"></a>修改显示文案</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">delete_model.short_description = <span class=\"string\">\"delete selected\"</span></div></pre></td></tr></table></figure>\n<h6 id=\"分权限删除\"><a href=\"#分权限删除\" class=\"headerlink\" title=\"分权限删除\"></a>分权限删除</h6><h1 id=\"todo\"><a href=\"#todo\" class=\"headerlink\" title=\"todo\"></a>todo</h1><p>应该在判断数据是谁添加的，删除时只能是谁删除</p>\n<p>目前没找到obj的user方法</p>"},{"title":"django 添加联合唯一索引","date":"2017-02-16T08:25:29.000Z","thumbnail":null,"_content":"\n## Django 添加联系唯一索引方法\n> 联合唯一索引，指的是，多个键值相同时保持唯一，添加方法如下：\n\n\n```python\nfrom django.db import models\nclass MyModel(models.Model):\n    name = models.CharField(max_length=200, verbose_name=\"name\")\n    version = models.IntegerField(max_length=100, verbose_name=\"version\")\n\n    class Meta():\n        verbose_name = \"mymodel\"\n        verbose_name_plural = \"mymodel\"\n        unique_together = ((\"name\", \"version\"),)\n```","source":"_posts/django-添加联合唯一索引.md","raw":"---\ntitle: django 添加联合唯一索引\ndate: 2017-02-16 16:25:29\ntags: 联合唯一索引\ncategories: \n- django\npermalink: Django-add-contact-to-unique-index\nthumbnail:\n---\n\n## Django 添加联系唯一索引方法\n> 联合唯一索引，指的是，多个键值相同时保持唯一，添加方法如下：\n\n\n```python\nfrom django.db import models\nclass MyModel(models.Model):\n    name = models.CharField(max_length=200, verbose_name=\"name\")\n    version = models.IntegerField(max_length=100, verbose_name=\"version\")\n\n    class Meta():\n        verbose_name = \"mymodel\"\n        verbose_name_plural = \"mymodel\"\n        unique_together = ((\"name\", \"version\"),)\n```","slug":"Django-add-contact-to-unique-index","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqlj000n4rd3nintr7a0","content":"<h2 id=\"Django-添加联系唯一索引方法\"><a href=\"#Django-添加联系唯一索引方法\" class=\"headerlink\" title=\"Django 添加联系唯一索引方法\"></a>Django 添加联系唯一索引方法</h2><blockquote>\n<p>联合唯一索引，指的是，多个键值相同时保持唯一，添加方法如下：</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyModel</span><span class=\"params\">(models.Model)</span>:</span></div><div class=\"line\">    name = models.CharField(max_length=<span class=\"number\">200</span>, verbose_name=<span class=\"string\">\"name\"</span>)</div><div class=\"line\">    version = models.IntegerField(max_length=<span class=\"number\">100</span>, verbose_name=<span class=\"string\">\"version\"</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span><span class=\"params\">()</span>:</span></div><div class=\"line\">        verbose_name = <span class=\"string\">\"mymodel\"</span></div><div class=\"line\">        verbose_name_plural = <span class=\"string\">\"mymodel\"</span></div><div class=\"line\">        unique_together = ((<span class=\"string\">\"name\"</span>, <span class=\"string\">\"version\"</span>),)</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Django-添加联系唯一索引方法\"><a href=\"#Django-添加联系唯一索引方法\" class=\"headerlink\" title=\"Django 添加联系唯一索引方法\"></a>Django 添加联系唯一索引方法</h2><blockquote>\n<p>联合唯一索引，指的是，多个键值相同时保持唯一，添加方法如下：</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> django.db <span class=\"keyword\">import</span> models</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyModel</span><span class=\"params\">(models.Model)</span>:</span></div><div class=\"line\">    name = models.CharField(max_length=<span class=\"number\">200</span>, verbose_name=<span class=\"string\">\"name\"</span>)</div><div class=\"line\">    version = models.IntegerField(max_length=<span class=\"number\">100</span>, verbose_name=<span class=\"string\">\"version\"</span>)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Meta</span><span class=\"params\">()</span>:</span></div><div class=\"line\">        verbose_name = <span class=\"string\">\"mymodel\"</span></div><div class=\"line\">        verbose_name_plural = <span class=\"string\">\"mymodel\"</span></div><div class=\"line\">        unique_together = ((<span class=\"string\">\"name\"</span>, <span class=\"string\">\"version\"</span>),)</div></pre></td></tr></table></figure>"},{"title":"django中使用自定义context processor实现模板全局变量","date":"2016-12-30T03:34:04.000Z","_content":"\ndjango中使用自定义context processor实现模板全局变量\n====\n\n## 在视图中定义全局变量方法\n<!--more-->\n### 在每个页面显示google指向的ip\n```python\nimport socket\ndef context_proc(request):\n    \"\"\"获取google的ip指向，每个页面都需要显示\"\"\"\n    env = socket.getaddrinfo(\"www.google.com\", \"http\")[0][4][0]\n    return {\n    \"env\": env,\n    }\n```\n\n### 如果有多个全局变量要显示，在return中添加即可\n```python\nreturn {\n\"evn\": evn,\n\"host\": host,\n\"user\": request.user,\n}\n```\n\n## 将全局变量方法添加至setting中的Templates\n\n### 添加位置\n```python\nTEMPLATES = [\n    {\n        'BACKEND': \"...\",\n        \"...\": \"...\",\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"...\",\n                \"views.context_proc\",\n            ]\n        }\n    }\n]\n```\n\n## 在模板中引用即可\n\n### head.html\n```html\n<a href=\"#\">{% block env %}{% endblock %}</a>\n```\n\n### index.html\n```html\n{% block env %}\n{{ env }}\n{% endblock %}}\n```\n\n## 关于setting.py\n\nsetting中的各种设置参数都是对global_settings的覆写\n可以引用后进行覆写\n### 引用\n```python\nfrom django.conf import global_settings\n```\n\n### 位置\n一般位于\n```python\npython根目录/site-package/django/conf/global_setting.py\n```\n### 覆写\n```python\nALLOWED_HOSTS = []\n```","source":"_posts/django中使用自定义context-processor实现模板全局变量.md","raw":"---\ntitle: django中使用自定义context processor实现模板全局变量\ndate: 2016-12-30 11:34:04\ntags:\n- django\ncategories:\n- python\n- django\n---\n\ndjango中使用自定义context processor实现模板全局变量\n====\n\n## 在视图中定义全局变量方法\n<!--more-->\n### 在每个页面显示google指向的ip\n```python\nimport socket\ndef context_proc(request):\n    \"\"\"获取google的ip指向，每个页面都需要显示\"\"\"\n    env = socket.getaddrinfo(\"www.google.com\", \"http\")[0][4][0]\n    return {\n    \"env\": env,\n    }\n```\n\n### 如果有多个全局变量要显示，在return中添加即可\n```python\nreturn {\n\"evn\": evn,\n\"host\": host,\n\"user\": request.user,\n}\n```\n\n## 将全局变量方法添加至setting中的Templates\n\n### 添加位置\n```python\nTEMPLATES = [\n    {\n        'BACKEND': \"...\",\n        \"...\": \"...\",\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"...\",\n                \"views.context_proc\",\n            ]\n        }\n    }\n]\n```\n\n## 在模板中引用即可\n\n### head.html\n```html\n<a href=\"#\">{% block env %}{% endblock %}</a>\n```\n\n### index.html\n```html\n{% block env %}\n{{ env }}\n{% endblock %}}\n```\n\n## 关于setting.py\n\nsetting中的各种设置参数都是对global_settings的覆写\n可以引用后进行覆写\n### 引用\n```python\nfrom django.conf import global_settings\n```\n\n### 位置\n一般位于\n```python\npython根目录/site-package/django/conf/global_setting.py\n```\n### 覆写\n```python\nALLOWED_HOSTS = []\n```","slug":"django中使用自定义context-processor实现模板全局变量","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqlm000s4rd3i7wh7chc","content":"<h1 id=\"django中使用自定义context-processor实现模板全局变量\"><a href=\"#django中使用自定义context-processor实现模板全局变量\" class=\"headerlink\" title=\"django中使用自定义context processor实现模板全局变量\"></a>django中使用自定义context processor实现模板全局变量</h1><h2 id=\"在视图中定义全局变量方法\"><a href=\"#在视图中定义全局变量方法\" class=\"headerlink\" title=\"在视图中定义全局变量方法\"></a>在视图中定义全局变量方法</h2><a id=\"more\"></a>\n<h3 id=\"在每个页面显示google指向的ip\"><a href=\"#在每个页面显示google指向的ip\" class=\"headerlink\" title=\"在每个页面显示google指向的ip\"></a>在每个页面显示google指向的ip</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> socket</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">context_proc</span><span class=\"params\">(request)</span>:</span></div><div class=\"line\">    <span class=\"string\">\"\"\"获取google的ip指向，每个页面都需要显示\"\"\"</span></div><div class=\"line\">    env = socket.getaddrinfo(<span class=\"string\">\"www.google.com\"</span>, <span class=\"string\">\"http\"</span>)[<span class=\"number\">0</span>][<span class=\"number\">4</span>][<span class=\"number\">0</span>]</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"string\">\"env\"</span>: env,</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"如果有多个全局变量要显示，在return中添加即可\"><a href=\"#如果有多个全局变量要显示，在return中添加即可\" class=\"headerlink\" title=\"如果有多个全局变量要显示，在return中添加即可\"></a>如果有多个全局变量要显示，在return中添加即可</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> &#123;</div><div class=\"line\"><span class=\"string\">\"evn\"</span>: evn,</div><div class=\"line\"><span class=\"string\">\"host\"</span>: host,</div><div class=\"line\"><span class=\"string\">\"user\"</span>: request.user,</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"将全局变量方法添加至setting中的Templates\"><a href=\"#将全局变量方法添加至setting中的Templates\" class=\"headerlink\" title=\"将全局变量方法添加至setting中的Templates\"></a>将全局变量方法添加至setting中的Templates</h2><h3 id=\"添加位置\"><a href=\"#添加位置\" class=\"headerlink\" title=\"添加位置\"></a>添加位置</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">TEMPLATES = [</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">\"...\"</span>,</div><div class=\"line\">        <span class=\"string\">\"...\"</span>: <span class=\"string\">\"...\"</span>,</div><div class=\"line\">        <span class=\"string\">\"OPTIONS\"</span>: &#123;</div><div class=\"line\">            <span class=\"string\">\"context_processors\"</span>: [</div><div class=\"line\">                <span class=\"string\">\"...\"</span>,</div><div class=\"line\">                <span class=\"string\">\"views.context_proc\"</span>,</div><div class=\"line\">            ]</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<h2 id=\"在模板中引用即可\"><a href=\"#在模板中引用即可\" class=\"headerlink\" title=\"在模板中引用即可\"></a>在模板中引用即可</h2><h3 id=\"head-html\"><a href=\"#head-html\" class=\"headerlink\" title=\"head.html\"></a>head.html</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>&#123;% block env %&#125;&#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% block env %&#125;</div><div class=\"line\">&#123;&#123; env &#125;&#125;</div><div class=\"line\">&#123;% endblock %&#125;&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"关于setting-py\"><a href=\"#关于setting-py\" class=\"headerlink\" title=\"关于setting.py\"></a>关于setting.py</h2><p>setting中的各种设置参数都是对global_settings的覆写<br>可以引用后进行覆写</p>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> django.conf <span class=\"keyword\">import</span> global_settings</div></pre></td></tr></table></figure>\n<h3 id=\"位置\"><a href=\"#位置\" class=\"headerlink\" title=\"位置\"></a>位置</h3><p>一般位于<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python根目录/site-package/django/conf/global_setting.py</div></pre></td></tr></table></figure></p>\n<h3 id=\"覆写\"><a href=\"#覆写\" class=\"headerlink\" title=\"覆写\"></a>覆写</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ALLOWED_HOSTS = []</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"django中使用自定义context-processor实现模板全局变量\"><a href=\"#django中使用自定义context-processor实现模板全局变量\" class=\"headerlink\" title=\"django中使用自定义context processor实现模板全局变量\"></a>django中使用自定义context processor实现模板全局变量</h1><h2 id=\"在视图中定义全局变量方法\"><a href=\"#在视图中定义全局变量方法\" class=\"headerlink\" title=\"在视图中定义全局变量方法\"></a>在视图中定义全局变量方法</h2>","more":"<h3 id=\"在每个页面显示google指向的ip\"><a href=\"#在每个页面显示google指向的ip\" class=\"headerlink\" title=\"在每个页面显示google指向的ip\"></a>在每个页面显示google指向的ip</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> socket</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">context_proc</span><span class=\"params\">(request)</span>:</span></div><div class=\"line\">    <span class=\"string\">\"\"\"获取google的ip指向，每个页面都需要显示\"\"\"</span></div><div class=\"line\">    env = socket.getaddrinfo(<span class=\"string\">\"www.google.com\"</span>, <span class=\"string\">\"http\"</span>)[<span class=\"number\">0</span>][<span class=\"number\">4</span>][<span class=\"number\">0</span>]</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    <span class=\"string\">\"env\"</span>: env,</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"如果有多个全局变量要显示，在return中添加即可\"><a href=\"#如果有多个全局变量要显示，在return中添加即可\" class=\"headerlink\" title=\"如果有多个全局变量要显示，在return中添加即可\"></a>如果有多个全局变量要显示，在return中添加即可</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">return</span> &#123;</div><div class=\"line\"><span class=\"string\">\"evn\"</span>: evn,</div><div class=\"line\"><span class=\"string\">\"host\"</span>: host,</div><div class=\"line\"><span class=\"string\">\"user\"</span>: request.user,</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"将全局变量方法添加至setting中的Templates\"><a href=\"#将全局变量方法添加至setting中的Templates\" class=\"headerlink\" title=\"将全局变量方法添加至setting中的Templates\"></a>将全局变量方法添加至setting中的Templates</h2><h3 id=\"添加位置\"><a href=\"#添加位置\" class=\"headerlink\" title=\"添加位置\"></a>添加位置</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">TEMPLATES = [</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"string\">'BACKEND'</span>: <span class=\"string\">\"...\"</span>,</div><div class=\"line\">        <span class=\"string\">\"...\"</span>: <span class=\"string\">\"...\"</span>,</div><div class=\"line\">        <span class=\"string\">\"OPTIONS\"</span>: &#123;</div><div class=\"line\">            <span class=\"string\">\"context_processors\"</span>: [</div><div class=\"line\">                <span class=\"string\">\"...\"</span>,</div><div class=\"line\">                <span class=\"string\">\"views.context_proc\"</span>,</div><div class=\"line\">            ]</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">]</div></pre></td></tr></table></figure>\n<h2 id=\"在模板中引用即可\"><a href=\"#在模板中引用即可\" class=\"headerlink\" title=\"在模板中引用即可\"></a>在模板中引用即可</h2><h3 id=\"head-html\"><a href=\"#head-html\" class=\"headerlink\" title=\"head.html\"></a>head.html</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>&#123;% block env %&#125;&#123;% endblock %&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"index-html\"><a href=\"#index-html\" class=\"headerlink\" title=\"index.html\"></a>index.html</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% block env %&#125;</div><div class=\"line\">&#123;&#123; env &#125;&#125;</div><div class=\"line\">&#123;% endblock %&#125;&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"关于setting-py\"><a href=\"#关于setting-py\" class=\"headerlink\" title=\"关于setting.py\"></a>关于setting.py</h2><p>setting中的各种设置参数都是对global_settings的覆写<br>可以引用后进行覆写</p>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> django.conf <span class=\"keyword\">import</span> global_settings</div></pre></td></tr></table></figure>\n<h3 id=\"位置\"><a href=\"#位置\" class=\"headerlink\" title=\"位置\"></a>位置</h3><p>一般位于<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python根目录/site-package/django/conf/global_setting.py</div></pre></td></tr></table></figure></p>\n<h3 id=\"覆写\"><a href=\"#覆写\" class=\"headerlink\" title=\"覆写\"></a>覆写</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ALLOWED_HOSTS = []</div></pre></td></tr></table></figure>"},{"title":"django项目中jquery初探","date":"2017-01-04T17:46:24.000Z","_content":"django项目中jquery初探\n====\n> 之前一直关注后端的技术与功能，今天在考虑自动化平台执行时，突然发现，前后端交互这块是个强需求，我想要的效果是，前端只需要点击，即可出结果，不用刷新页面。这样就不可避免的用到了ajax技术，那最简单的就是使用jquery框架了，这里简单的应用，记录一下。\n<!--more-->\n\n目前要做一个表格，点击按钮请求表格中的接口，并把相关数据通过ajax方式传输，\n从而达到不用刷新页面显示请求结果的目地。\n\n### 视图view.py\n> 获取模板传过来的url做为参数，对url进行处理后，包装数据回传给模板，显示。\n\n```python\nimport requests\nfrom django.http import HttpResponse, JsonResponse\nimport json\n\ndef req_func(request):\n    \"\"\"\n    请求方法\n    :param request:\n    :return:\n    \"\"\"\n    if request.method == \"GET\":\n        url = request.GET[\"url\"].strip()\n        try:\n            res = requests.get(url=url, timeout=10)\n            code = res.status_code\n            time = res.elapsed.total_seconds()\n            if \"application/json\" in res.headers.get('Content-Type'):\n                content = res.json()\n            else:\n                content = \"not json type\"\n            result = {\"code\": code, \"time\": time, \"content\": json.dumps(content, indent=4)}\n            return JsonResponse(result)\n        except Exception as e:\n            return HttpResponse(e)\n    else:\n        pass\n```\n\n### template\n> 模板中使用jquery的get方法，将数据组装后传，调用后端方法，进行请求，并接收回传结果并显示。\n我是通过对id后面的数值判断拿的参数值，应该还有其他的方法，后期再研究一下。\n\n```django\n{% extends \"base/head.html\" %}\n{% block title %}\n    {{ title }} detail\n{% endblock %}\n{% block env %}\n    {{ env }}\n{% endblock %}\n{% block script %}\n    <script type=\"application/javascript\">\n        $(document).ready(function () {\n            $(\"button\").click(function () {\n                {#                alert($(this).attr(\"id\").slice(3));#}\n                var nowid = $(this).attr(\"id\").slice(3);\n                $.get(\"{% url \"interface:reqfunc\" %}\",\n                        {\n                            url: $(\"#comurl\" + nowid).text(),\n                        },\n                        function (ret) {\n                            $(\"#code\" + nowid).text(ret.code);\n                            $(\"#time\" + nowid).text(ret.time + \" S\");\n                            $(\"#content\" + nowid).text(ret.content);\n                        });\n            });\n            $(\"#hidden\").click(function () {\n                $(\"#cont\").toggle(speed, callback);\n            })\n        });\n    </script>\n{% endblock %}\n{% block content %}\n    <h1>{{ url.name }}</h1>\n    <table class=\"table table-bordered\">\n        <thead>\n        <tr>\n            <th>num</th>\n            <th>接口</th>\n            <th>code</th>\n            <th>time</th>\n            <th>run</th>\n        </tr>\n        </thead>\n        <tbody>\n        {% for i in params %}\n            <tr>\n                <td>{{ forloop.counter }}</td>\n                <td><span\n                        id=\"comurl{{ forloop.counter }}\">{{ url.schame }}{{ url.domain }}{{ url.version.version }}{{ url.path }}?{{ i.query }}</span>\n                </td>\n                <td><span id=\"code{{ forloop.counter }}\" class=\"label label-danger\"></span></td>\n                <td><span id=\"time{{ forloop.counter }}\" class=\"label label-danger\"></span></td>\n                <td>\n                    <button id=\"run{{ forloop.counter }}\">run</button>\n                </td>\n                                <table id=\"cont\" border=\"1\">\n                                    <tr>\n                                        {% autoescape off %}\n                                        <td id=\"content{{ forloop.counter }}\"></td>\n                                        {% endautoescape %}\n                                    <td id=\"hidden\">hidden</td>\n                                    </tr>\n                                </table>\n            </tr>\n        </tbody>\n    </table>\n{% endblock %}\n```\n\n### urls.py\n> 需要将视图层的数据做url指向\n\n```django\nurl(r'^reqfunc/$', views.req_func, name=\"reqfunc\"),\n```\n\n目前就这些，参考资料后补。","source":"_posts/django项目中jquery初探.md","raw":"---\ntitle: django项目中jquery初探\ndate: 2017-01-05 01:46:24\ntags:\n- django\n- jquery\ncategories:\n- django\n---\ndjango项目中jquery初探\n====\n> 之前一直关注后端的技术与功能，今天在考虑自动化平台执行时，突然发现，前后端交互这块是个强需求，我想要的效果是，前端只需要点击，即可出结果，不用刷新页面。这样就不可避免的用到了ajax技术，那最简单的就是使用jquery框架了，这里简单的应用，记录一下。\n<!--more-->\n\n目前要做一个表格，点击按钮请求表格中的接口，并把相关数据通过ajax方式传输，\n从而达到不用刷新页面显示请求结果的目地。\n\n### 视图view.py\n> 获取模板传过来的url做为参数，对url进行处理后，包装数据回传给模板，显示。\n\n```python\nimport requests\nfrom django.http import HttpResponse, JsonResponse\nimport json\n\ndef req_func(request):\n    \"\"\"\n    请求方法\n    :param request:\n    :return:\n    \"\"\"\n    if request.method == \"GET\":\n        url = request.GET[\"url\"].strip()\n        try:\n            res = requests.get(url=url, timeout=10)\n            code = res.status_code\n            time = res.elapsed.total_seconds()\n            if \"application/json\" in res.headers.get('Content-Type'):\n                content = res.json()\n            else:\n                content = \"not json type\"\n            result = {\"code\": code, \"time\": time, \"content\": json.dumps(content, indent=4)}\n            return JsonResponse(result)\n        except Exception as e:\n            return HttpResponse(e)\n    else:\n        pass\n```\n\n### template\n> 模板中使用jquery的get方法，将数据组装后传，调用后端方法，进行请求，并接收回传结果并显示。\n我是通过对id后面的数值判断拿的参数值，应该还有其他的方法，后期再研究一下。\n\n```django\n{% extends \"base/head.html\" %}\n{% block title %}\n    {{ title }} detail\n{% endblock %}\n{% block env %}\n    {{ env }}\n{% endblock %}\n{% block script %}\n    <script type=\"application/javascript\">\n        $(document).ready(function () {\n            $(\"button\").click(function () {\n                {#                alert($(this).attr(\"id\").slice(3));#}\n                var nowid = $(this).attr(\"id\").slice(3);\n                $.get(\"{% url \"interface:reqfunc\" %}\",\n                        {\n                            url: $(\"#comurl\" + nowid).text(),\n                        },\n                        function (ret) {\n                            $(\"#code\" + nowid).text(ret.code);\n                            $(\"#time\" + nowid).text(ret.time + \" S\");\n                            $(\"#content\" + nowid).text(ret.content);\n                        });\n            });\n            $(\"#hidden\").click(function () {\n                $(\"#cont\").toggle(speed, callback);\n            })\n        });\n    </script>\n{% endblock %}\n{% block content %}\n    <h1>{{ url.name }}</h1>\n    <table class=\"table table-bordered\">\n        <thead>\n        <tr>\n            <th>num</th>\n            <th>接口</th>\n            <th>code</th>\n            <th>time</th>\n            <th>run</th>\n        </tr>\n        </thead>\n        <tbody>\n        {% for i in params %}\n            <tr>\n                <td>{{ forloop.counter }}</td>\n                <td><span\n                        id=\"comurl{{ forloop.counter }}\">{{ url.schame }}{{ url.domain }}{{ url.version.version }}{{ url.path }}?{{ i.query }}</span>\n                </td>\n                <td><span id=\"code{{ forloop.counter }}\" class=\"label label-danger\"></span></td>\n                <td><span id=\"time{{ forloop.counter }}\" class=\"label label-danger\"></span></td>\n                <td>\n                    <button id=\"run{{ forloop.counter }}\">run</button>\n                </td>\n                                <table id=\"cont\" border=\"1\">\n                                    <tr>\n                                        {% autoescape off %}\n                                        <td id=\"content{{ forloop.counter }}\"></td>\n                                        {% endautoescape %}\n                                    <td id=\"hidden\">hidden</td>\n                                    </tr>\n                                </table>\n            </tr>\n        </tbody>\n    </table>\n{% endblock %}\n```\n\n### urls.py\n> 需要将视图层的数据做url指向\n\n```django\nurl(r'^reqfunc/$', views.req_func, name=\"reqfunc\"),\n```\n\n目前就这些，参考资料后补。","slug":"django项目中jquery初探","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqln000t4rd3yp1pczxb","content":"<h1 id=\"django项目中jquery初探\"><a href=\"#django项目中jquery初探\" class=\"headerlink\" title=\"django项目中jquery初探\"></a>django项目中jquery初探</h1><blockquote>\n<p>之前一直关注后端的技术与功能，今天在考虑自动化平台执行时，突然发现，前后端交互这块是个强需求，我想要的效果是，前端只需要点击，即可出结果，不用刷新页面。这样就不可避免的用到了ajax技术，那最简单的就是使用jquery框架了，这里简单的应用，记录一下。<br><a id=\"more\"></a></p>\n</blockquote>\n<p>目前要做一个表格，点击按钮请求表格中的接口，并把相关数据通过ajax方式传输，<br>从而达到不用刷新页面显示请求结果的目地。</p>\n<h3 id=\"视图view-py\"><a href=\"#视图view-py\" class=\"headerlink\" title=\"视图view.py\"></a>视图view.py</h3><blockquote>\n<p>获取模板传过来的url做为参数，对url进行处理后，包装数据回传给模板，显示。</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse, JsonResponse</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">req_func</span><span class=\"params\">(request)</span>:</span></div><div class=\"line\">    <span class=\"string\">\"\"\"</span></div><div class=\"line\"><span class=\"string\">    请求方法</span></div><div class=\"line\"><span class=\"string\">    :param request:</span></div><div class=\"line\"><span class=\"string\">    :return:</span></div><div class=\"line\"><span class=\"string\">    \"\"\"</span></div><div class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">\"GET\"</span>:</div><div class=\"line\">        url = request.GET[<span class=\"string\">\"url\"</span>].strip()</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            res = requests.get(url=url, timeout=<span class=\"number\">10</span>)</div><div class=\"line\">            code = res.status_code</div><div class=\"line\">            time = res.elapsed.total_seconds()</div><div class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"application/json\"</span> <span class=\"keyword\">in</span> res.headers.get(<span class=\"string\">'Content-Type'</span>):</div><div class=\"line\">                content = res.json()</div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                content = <span class=\"string\">\"not json type\"</span></div><div class=\"line\">            result = &#123;<span class=\"string\">\"code\"</span>: code, <span class=\"string\">\"time\"</span>: time, <span class=\"string\">\"content\"</span>: json.dumps(content, indent=<span class=\"number\">4</span>)&#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> JsonResponse(result)</div><div class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</div><div class=\"line\">            <span class=\"keyword\">return</span> HttpResponse(e)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">pass</span></div></pre></td></tr></table></figure>\n<h3 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a>template</h3><blockquote>\n<p>模板中使用jquery的get方法，将数据组装后传，调用后端方法，进行请求，并接收回传结果并显示。<br>我是通过对id后面的数值判断拿的参数值，应该还有其他的方法，后期再研究一下。</p>\n</blockquote>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">extends</span></span> \"base/head.html\" %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">block</span></span> title %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">    </span><span class=\"template-variable\">&#123;&#123; title &#125;&#125;</span><span class=\"xml\"> detail</span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endblock</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">block</span></span> env %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">    </span><span class=\"template-variable\">&#123;&#123; env &#125;&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endblock</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">block</span></span> script %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"application/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span></div><div class=\"line\"><span class=\"xml\">        $(document).ready(function () &#123;</span></div><div class=\"line\"><span class=\"xml\">            $(\"button\").click(function () &#123;</span></div><div class=\"line\"><span class=\"xml\">                </span><span class=\"comment\">&#123;#                alert($(this).attr(\"id\").slice(3));#&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">                var nowid = $(this).attr(\"id\").slice(3);</span></div><div class=\"line\"><span class=\"xml\">                $.get(\"</span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">url</span></span> \"interface:reqfunc\" %&#125;</span><span class=\"xml\">\",</span></div><div class=\"line\"><span class=\"xml\">                        &#123;</span></div><div class=\"line\"><span class=\"xml\">                            url: $(\"#comurl\" + nowid).text(),</span></div><div class=\"line\"><span class=\"xml\">                        &#125;,</span></div><div class=\"line\"><span class=\"xml\">                        function (ret) &#123;</span></div><div class=\"line\"><span class=\"xml\">                            $(\"#code\" + nowid).text(ret.code);</span></div><div class=\"line\"><span class=\"xml\">                            $(\"#time\" + nowid).text(ret.time + \" S\");</span></div><div class=\"line\"><span class=\"xml\">                            $(\"#content\" + nowid).text(ret.content);</span></div><div class=\"line\"><span class=\"xml\">                        &#125;);</span></div><div class=\"line\"><span class=\"xml\">            &#125;);</span></div><div class=\"line\"><span class=\"xml\">            $(\"#hidden\").click(function () &#123;</span></div><div class=\"line\"><span class=\"xml\">                $(\"#cont\").toggle(speed, callback);</span></div><div class=\"line\"><span class=\"xml\">            &#125;)</span></div><div class=\"line\"><span class=\"xml\">        &#125;);</span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endblock</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">block</span></span> content %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; url.name &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-bordered\"</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>num<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>接口<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>code<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>time<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>run<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">for</span></span> i <span class=\"keyword\">in</span> params %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span></span></span></div><div class=\"line\"><span class=\"xml\">                        id=\"comurl</span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\">\"&gt;</span><span class=\"template-variable\">&#123;&#123; url.schame &#125;&#125;</span><span class=\"xml\"></span><span class=\"template-variable\">&#123;&#123; url.domain &#125;&#125;</span><span class=\"xml\"></span><span class=\"template-variable\">&#123;&#123; url.version.version &#125;&#125;</span><span class=\"xml\"></span><span class=\"template-variable\">&#123;&#123; url.path &#125;&#125;</span><span class=\"xml\">?</span><span class=\"template-variable\">&#123;&#123; i.query &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"code</span></span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"label label-danger\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"time</span></span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"label label-danger\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"run</span></span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span>run<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cont\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                        </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">autoescape</span></span> off %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">                                        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content</span></span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                        </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endautoescape</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hidden\"</span>&gt;</span>hidden<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endblock</span></span> %&#125;</span><span class=\"xml\"></span></div></pre></td></tr></table></figure>\n<h3 id=\"urls-py\"><a href=\"#urls-py\" class=\"headerlink\" title=\"urls.py\"></a>urls.py</h3><blockquote>\n<p>需要将视图层的数据做url指向</p>\n</blockquote>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\">url(r'^reqfunc/$', views.req_func, name=\"reqfunc\"),</span></div></pre></td></tr></table></figure>\n<p>目前就这些，参考资料后补。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"django项目中jquery初探\"><a href=\"#django项目中jquery初探\" class=\"headerlink\" title=\"django项目中jquery初探\"></a>django项目中jquery初探</h1><blockquote>\n<p>之前一直关注后端的技术与功能，今天在考虑自动化平台执行时，突然发现，前后端交互这块是个强需求，我想要的效果是，前端只需要点击，即可出结果，不用刷新页面。这样就不可避免的用到了ajax技术，那最简单的就是使用jquery框架了，这里简单的应用，记录一下。<br>","more":"</p>\n</blockquote>\n<p>目前要做一个表格，点击按钮请求表格中的接口，并把相关数据通过ajax方式传输，<br>从而达到不用刷新页面显示请求结果的目地。</p>\n<h3 id=\"视图view-py\"><a href=\"#视图view-py\" class=\"headerlink\" title=\"视图view.py\"></a>视图view.py</h3><blockquote>\n<p>获取模板传过来的url做为参数，对url进行处理后，包装数据回传给模板，显示。</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">from</span> django.http <span class=\"keyword\">import</span> HttpResponse, JsonResponse</div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">req_func</span><span class=\"params\">(request)</span>:</span></div><div class=\"line\">    <span class=\"string\">\"\"\"</span></div><div class=\"line\"><span class=\"string\">    请求方法</span></div><div class=\"line\"><span class=\"string\">    :param request:</span></div><div class=\"line\"><span class=\"string\">    :return:</span></div><div class=\"line\"><span class=\"string\">    \"\"\"</span></div><div class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">\"GET\"</span>:</div><div class=\"line\">        url = request.GET[<span class=\"string\">\"url\"</span>].strip()</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            res = requests.get(url=url, timeout=<span class=\"number\">10</span>)</div><div class=\"line\">            code = res.status_code</div><div class=\"line\">            time = res.elapsed.total_seconds()</div><div class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"application/json\"</span> <span class=\"keyword\">in</span> res.headers.get(<span class=\"string\">'Content-Type'</span>):</div><div class=\"line\">                content = res.json()</div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                content = <span class=\"string\">\"not json type\"</span></div><div class=\"line\">            result = &#123;<span class=\"string\">\"code\"</span>: code, <span class=\"string\">\"time\"</span>: time, <span class=\"string\">\"content\"</span>: json.dumps(content, indent=<span class=\"number\">4</span>)&#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> JsonResponse(result)</div><div class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</div><div class=\"line\">            <span class=\"keyword\">return</span> HttpResponse(e)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">pass</span></div></pre></td></tr></table></figure>\n<h3 id=\"template\"><a href=\"#template\" class=\"headerlink\" title=\"template\"></a>template</h3><blockquote>\n<p>模板中使用jquery的get方法，将数据组装后传，调用后端方法，进行请求，并接收回传结果并显示。<br>我是通过对id后面的数值判断拿的参数值，应该还有其他的方法，后期再研究一下。</p>\n</blockquote>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">extends</span></span> \"base/head.html\" %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">block</span></span> title %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">    </span><span class=\"template-variable\">&#123;&#123; title &#125;&#125;</span><span class=\"xml\"> detail</span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endblock</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">block</span></span> env %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">    </span><span class=\"template-variable\">&#123;&#123; env &#125;&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endblock</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">block</span></span> script %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"application/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span></div><div class=\"line\"><span class=\"xml\">        $(document).ready(function () &#123;</span></div><div class=\"line\"><span class=\"xml\">            $(\"button\").click(function () &#123;</span></div><div class=\"line\"><span class=\"xml\">                </span><span class=\"comment\">&#123;#                alert($(this).attr(\"id\").slice(3));#&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">                var nowid = $(this).attr(\"id\").slice(3);</span></div><div class=\"line\"><span class=\"xml\">                $.get(\"</span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">url</span></span> \"interface:reqfunc\" %&#125;</span><span class=\"xml\">\",</span></div><div class=\"line\"><span class=\"xml\">                        &#123;</span></div><div class=\"line\"><span class=\"xml\">                            url: $(\"#comurl\" + nowid).text(),</span></div><div class=\"line\"><span class=\"xml\">                        &#125;,</span></div><div class=\"line\"><span class=\"xml\">                        function (ret) &#123;</span></div><div class=\"line\"><span class=\"xml\">                            $(\"#code\" + nowid).text(ret.code);</span></div><div class=\"line\"><span class=\"xml\">                            $(\"#time\" + nowid).text(ret.time + \" S\");</span></div><div class=\"line\"><span class=\"xml\">                            $(\"#content\" + nowid).text(ret.content);</span></div><div class=\"line\"><span class=\"xml\">                        &#125;);</span></div><div class=\"line\"><span class=\"xml\">            &#125;);</span></div><div class=\"line\"><span class=\"xml\">            $(\"#hidden\").click(function () &#123;</span></div><div class=\"line\"><span class=\"xml\">                $(\"#cont\").toggle(speed, callback);</span></div><div class=\"line\"><span class=\"xml\">            &#125;)</span></div><div class=\"line\"><span class=\"xml\">        &#125;);</span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endblock</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">block</span></span> content %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; url.name &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table table-bordered\"</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">thead</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>num<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>接口<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>code<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>time<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>run<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">thead</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;<span class=\"name\">tbody</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">for</span></span> i <span class=\"keyword\">in</span> params %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span></span></span></div><div class=\"line\"><span class=\"xml\">                        id=\"comurl</span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\">\"&gt;</span><span class=\"template-variable\">&#123;&#123; url.schame &#125;&#125;</span><span class=\"xml\"></span><span class=\"template-variable\">&#123;&#123; url.domain &#125;&#125;</span><span class=\"xml\"></span><span class=\"template-variable\">&#123;&#123; url.version.version &#125;&#125;</span><span class=\"xml\"></span><span class=\"template-variable\">&#123;&#123; url.path &#125;&#125;</span><span class=\"xml\">?</span><span class=\"template-variable\">&#123;&#123; i.query &#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"code</span></span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"label label-danger\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"time</span></span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"label label-danger\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">\"run</span></span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span>run<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cont\"</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                        </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">autoescape</span></span> off %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">                                        <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">id</span>=<span class=\"string\">\"content</span></span></span><span class=\"template-variable\">&#123;&#123; forloop.counter &#125;&#125;</span><span class=\"xml\"><span class=\"tag\"><span class=\"string\">\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                        </span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endautoescape</span></span> %&#125;</span><span class=\"xml\"></span></div><div class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">id</span>=<span class=\"string\">\"hidden\"</span>&gt;</span>hidden<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                    <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">                                <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">            <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">        <span class=\"tag\">&lt;/<span class=\"name\">tbody</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span></div><div class=\"line\"><span class=\"xml\"></span><span class=\"template-tag\">&#123;% <span class=\"name\"><span class=\"name\">endblock</span></span> %&#125;</span><span class=\"xml\"></span></div></pre></td></tr></table></figure>\n<h3 id=\"urls-py\"><a href=\"#urls-py\" class=\"headerlink\" title=\"urls.py\"></a>urls.py</h3><blockquote>\n<p>需要将视图层的数据做url指向</p>\n</blockquote>\n<figure class=\"highlight django\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"xml\">url(r'^reqfunc/$', views.req_func, name=\"reqfunc\"),</span></div></pre></td></tr></table></figure>\n<p>目前就这些，参考资料后补。</p>"},{"title":"hexo博客自动化发布","date":"2017-11-06T02:43:51.000Z","_content":"\nHexo借助travis-ci自动发布博客\n====\n\n![travis ci](http://oi1wvrjc2.bkt.clouddn.com/17-11-6/87226994.jpg)\n\n###认证\n\n#### 安装travis\n```bash\ngem install travis\n```\n\n#### 生成source密钥\n```bash\ntravis encrypt -r owner/repo GH_Token=Your_Personal_Access_Token\n```\n\n### 使用同一仓库的分支做为源码库\n\n\n### 遇到问题\n\n#### 安装hexo-cli后无法使用\n\n#### 无法push到仓库\n\n","source":"_posts/hexo博客自动化发布.md","raw":"---\ntitle: hexo博客自动化发布\ndate: 2017-11-06 10:43:51\ntags: \n- auto deploy\ncategories:\n- hexo\npermalink: hexo-blog-using-travis-CI-automation-release\n---\n\nHexo借助travis-ci自动发布博客\n====\n\n![travis ci](http://oi1wvrjc2.bkt.clouddn.com/17-11-6/87226994.jpg)\n\n###认证\n\n#### 安装travis\n```bash\ngem install travis\n```\n\n#### 生成source密钥\n```bash\ntravis encrypt -r owner/repo GH_Token=Your_Personal_Access_Token\n```\n\n### 使用同一仓库的分支做为源码库\n\n\n### 遇到问题\n\n#### 安装hexo-cli后无法使用\n\n#### 无法push到仓库\n\n","slug":"hexo-blog-using-travis-CI-automation-release","published":1,"updated":"2017-11-06T06:31:51.134Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqlt000x4rd33yud1w6g","content":"<h1 id=\"Hexo借助travis-ci自动发布博客\"><a href=\"#Hexo借助travis-ci自动发布博客\" class=\"headerlink\" title=\"Hexo借助travis-ci自动发布博客\"></a>Hexo借助travis-ci自动发布博客</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-11-6/87226994.jpg\" alt=\"travis ci\"></p>\n<p>###认证</p>\n<h4 id=\"安装travis\"><a href=\"#安装travis\" class=\"headerlink\" title=\"安装travis\"></a>安装travis</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem install travis</div></pre></td></tr></table></figure>\n<h4 id=\"生成source密钥\"><a href=\"#生成source密钥\" class=\"headerlink\" title=\"生成source密钥\"></a>生成source密钥</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">travis encrypt -r owner/repo GH_Token=Your_Personal_Access_Token</div></pre></td></tr></table></figure>\n<h3 id=\"使用同一仓库的分支做为源码库\"><a href=\"#使用同一仓库的分支做为源码库\" class=\"headerlink\" title=\"使用同一仓库的分支做为源码库\"></a>使用同一仓库的分支做为源码库</h3><h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><h4 id=\"安装hexo-cli后无法使用\"><a href=\"#安装hexo-cli后无法使用\" class=\"headerlink\" title=\"安装hexo-cli后无法使用\"></a>安装hexo-cli后无法使用</h4><h4 id=\"无法push到仓库\"><a href=\"#无法push到仓库\" class=\"headerlink\" title=\"无法push到仓库\"></a>无法push到仓库</h4>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Hexo借助travis-ci自动发布博客\"><a href=\"#Hexo借助travis-ci自动发布博客\" class=\"headerlink\" title=\"Hexo借助travis-ci自动发布博客\"></a>Hexo借助travis-ci自动发布博客</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-11-6/87226994.jpg\" alt=\"travis ci\"></p>\n<p>###认证</p>\n<h4 id=\"安装travis\"><a href=\"#安装travis\" class=\"headerlink\" title=\"安装travis\"></a>安装travis</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem install travis</div></pre></td></tr></table></figure>\n<h4 id=\"生成source密钥\"><a href=\"#生成source密钥\" class=\"headerlink\" title=\"生成source密钥\"></a>生成source密钥</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">travis encrypt -r owner/repo GH_Token=Your_Personal_Access_Token</div></pre></td></tr></table></figure>\n<h3 id=\"使用同一仓库的分支做为源码库\"><a href=\"#使用同一仓库的分支做为源码库\" class=\"headerlink\" title=\"使用同一仓库的分支做为源码库\"></a>使用同一仓库的分支做为源码库</h3><h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><h4 id=\"安装hexo-cli后无法使用\"><a href=\"#安装hexo-cli后无法使用\" class=\"headerlink\" title=\"安装hexo-cli后无法使用\"></a>安装hexo-cli后无法使用</h4><h4 id=\"无法push到仓库\"><a href=\"#无法push到仓库\" class=\"headerlink\" title=\"无法push到仓库\"></a>无法push到仓库</h4>"},{"title":"linux下一句话Kill进程","date":"2017-06-08T09:31:15.000Z","category":["linux"],"_content":"### 查询tomcat进程\n\n![Control-Linux-Processes](http://oi1wvrjc2.bkt.clouddn.com/17-9-26/39733243.jpg)\n```bash\nps -ef | grep tomcat\nps -aux | grep tomcat\n```\n\n### 只查看进程pid\n```bash\npgrep -f tomcat\n```\n\n\n### tomcat server killed\n\n```bash\nkill -s 9 `pgrep -f tomcat`\n```\n\n> 引用自[这里](http://blog.csdn.net/smarxx/article/details/6664219)","source":"_posts/linux下一句话Kill进程.md","raw":"---\ntitle: linux下一句话Kill进程\ndate: 2017-06-08 17:31:15\ntags: \n- linux\ncategories:\n- linux\ncategory:\n- linux\npermalink: many-way-to-killed-ps-in-linux\n---\n### 查询tomcat进程\n\n![Control-Linux-Processes](http://oi1wvrjc2.bkt.clouddn.com/17-9-26/39733243.jpg)\n```bash\nps -ef | grep tomcat\nps -aux | grep tomcat\n```\n\n### 只查看进程pid\n```bash\npgrep -f tomcat\n```\n\n\n### tomcat server killed\n\n```bash\nkill -s 9 `pgrep -f tomcat`\n```\n\n> 引用自[这里](http://blog.csdn.net/smarxx/article/details/6664219)","slug":"many-way-to-killed-ps-in-linux","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqlu00104rd3kf8wo0wg","content":"<h3 id=\"查询tomcat进程\"><a href=\"#查询tomcat进程\" class=\"headerlink\" title=\"查询tomcat进程\"></a>查询tomcat进程</h3><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-9-26/39733243.jpg\" alt=\"Control-Linux-Processes\"><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef | grep tomcat</div><div class=\"line\">ps -aux | grep tomcat</div></pre></td></tr></table></figure></p>\n<h3 id=\"只查看进程pid\"><a href=\"#只查看进程pid\" class=\"headerlink\" title=\"只查看进程pid\"></a>只查看进程pid</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pgrep -f tomcat</div></pre></td></tr></table></figure>\n<h3 id=\"tomcat-server-killed\"><a href=\"#tomcat-server-killed\" class=\"headerlink\" title=\"tomcat server killed\"></a>tomcat server killed</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">kill</span> -s 9 `pgrep -f tomcat`</div></pre></td></tr></table></figure>\n<blockquote>\n<p>引用自<a href=\"http://blog.csdn.net/smarxx/article/details/6664219\" target=\"_blank\" rel=\"external\">这里</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"查询tomcat进程\"><a href=\"#查询tomcat进程\" class=\"headerlink\" title=\"查询tomcat进程\"></a>查询tomcat进程</h3><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-9-26/39733243.jpg\" alt=\"Control-Linux-Processes\"><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef | grep tomcat</div><div class=\"line\">ps -aux | grep tomcat</div></pre></td></tr></table></figure></p>\n<h3 id=\"只查看进程pid\"><a href=\"#只查看进程pid\" class=\"headerlink\" title=\"只查看进程pid\"></a>只查看进程pid</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pgrep -f tomcat</div></pre></td></tr></table></figure>\n<h3 id=\"tomcat-server-killed\"><a href=\"#tomcat-server-killed\" class=\"headerlink\" title=\"tomcat server killed\"></a>tomcat server killed</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">kill</span> -s 9 `pgrep -f tomcat`</div></pre></td></tr></table></figure>\n<blockquote>\n<p>引用自<a href=\"http://blog.csdn.net/smarxx/article/details/6664219\" target=\"_blank\" rel=\"external\">这里</a></p>\n</blockquote>\n"},{"title":"linux免密码认证配置","date":"2016-12-12T03:26:53.000Z","_content":"# 服务器免密码认证\n----\n\n> 配置过程很简单，但每次都忘记一些细节，故做个笔记\n\n<!--more-->\n### 单向免密码登陆\n\n服务器A，PC机B。\n\n#### 生成\n一般情况下，linux系统都会在你的目录下`~/`有`.ssh`文件夹，如果没有，则需要生成：\n```shell\nssh-keygen\n```\n如果不需要特殊配置，直接一路yes就可以了\n这时候再去看，就已经有了：\n```shell\nls ~/.ssh\n\nid_rsa  id_rsa.pub  known_hosts\n```\n\n#### 认证\n##### 在目标服务器新建认证文件\n在需要免密码的服务器上，即A服务器中的`~/.ssh/`下新建文件：\n```shell\ncd ~/.ssh\ntouch authorized_keys\n```\n##### 获取公钥\n将操作机pc中的公钥`id_rsa.pub`取出来：\n```shell\ncat ~/.ssh/id_rsa.pub\n```\n\n##### 完成认证\n将打印出来的`id_rsa.pub`中的内容粘贴至服务器A的authorized_keys中，保存即可。\n\n##### 脚本\n如果需要认证多台机器，可以自行将以上过程做成小脚本，我懒，没做。。。\n\n[linux下小工具参考](http://kuanghy.github.io/2016/09/01/linux-softwares)\n\n","source":"_posts/linux免密码认证配置.md","raw":"---\ntitle: linux免密码认证配置\ndate: 2016-12-12 11:26:53\ntags: linux, ubuntu, rsa认证\ncategories:\n- linux\n---\n# 服务器免密码认证\n----\n\n> 配置过程很简单，但每次都忘记一些细节，故做个笔记\n\n<!--more-->\n### 单向免密码登陆\n\n服务器A，PC机B。\n\n#### 生成\n一般情况下，linux系统都会在你的目录下`~/`有`.ssh`文件夹，如果没有，则需要生成：\n```shell\nssh-keygen\n```\n如果不需要特殊配置，直接一路yes就可以了\n这时候再去看，就已经有了：\n```shell\nls ~/.ssh\n\nid_rsa  id_rsa.pub  known_hosts\n```\n\n#### 认证\n##### 在目标服务器新建认证文件\n在需要免密码的服务器上，即A服务器中的`~/.ssh/`下新建文件：\n```shell\ncd ~/.ssh\ntouch authorized_keys\n```\n##### 获取公钥\n将操作机pc中的公钥`id_rsa.pub`取出来：\n```shell\ncat ~/.ssh/id_rsa.pub\n```\n\n##### 完成认证\n将打印出来的`id_rsa.pub`中的内容粘贴至服务器A的authorized_keys中，保存即可。\n\n##### 脚本\n如果需要认证多台机器，可以自行将以上过程做成小脚本，我懒，没做。。。\n\n[linux下小工具参考](http://kuanghy.github.io/2016/09/01/linux-softwares)\n\n","slug":"linux免密码认证配置","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqlv00144rd3aeqvvwbs","content":"<h1 id=\"服务器免密码认证\"><a href=\"#服务器免密码认证\" class=\"headerlink\" title=\"服务器免密码认证\"></a>服务器免密码认证</h1><hr>\n<blockquote>\n<p>配置过程很简单，但每次都忘记一些细节，故做个笔记</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"单向免密码登陆\"><a href=\"#单向免密码登陆\" class=\"headerlink\" title=\"单向免密码登陆\"></a>单向免密码登陆</h3><p>服务器A，PC机B。</p>\n<h4 id=\"生成\"><a href=\"#生成\" class=\"headerlink\" title=\"生成\"></a>生成</h4><p>一般情况下，linux系统都会在你的目录下<code>~/</code>有<code>.ssh</code>文件夹，如果没有，则需要生成：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen</div></pre></td></tr></table></figure></p>\n<p>如果不需要特殊配置，直接一路yes就可以了<br>这时候再去看，就已经有了：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ls ~/.ssh</div><div class=\"line\"></div><div class=\"line\">id_rsa  id_rsa.pub  known_hosts</div></pre></td></tr></table></figure></p>\n<h4 id=\"认证\"><a href=\"#认证\" class=\"headerlink\" title=\"认证\"></a>认证</h4><h5 id=\"在目标服务器新建认证文件\"><a href=\"#在目标服务器新建认证文件\" class=\"headerlink\" title=\"在目标服务器新建认证文件\"></a>在目标服务器新建认证文件</h5><p>在需要免密码的服务器上，即A服务器中的<code>~/.ssh/</code>下新建文件：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/.ssh</div><div class=\"line\">touch authorized_keys</div></pre></td></tr></table></figure></p>\n<h5 id=\"获取公钥\"><a href=\"#获取公钥\" class=\"headerlink\" title=\"获取公钥\"></a>获取公钥</h5><p>将操作机pc中的公钥<code>id_rsa.pub</code>取出来：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>\n<h5 id=\"完成认证\"><a href=\"#完成认证\" class=\"headerlink\" title=\"完成认证\"></a>完成认证</h5><p>将打印出来的<code>id_rsa.pub</code>中的内容粘贴至服务器A的authorized_keys中，保存即可。</p>\n<h5 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h5><p>如果需要认证多台机器，可以自行将以上过程做成小脚本，我懒，没做。。。</p>\n<p><a href=\"http://kuanghy.github.io/2016/09/01/linux-softwares\" target=\"_blank\" rel=\"external\">linux下小工具参考</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"服务器免密码认证\"><a href=\"#服务器免密码认证\" class=\"headerlink\" title=\"服务器免密码认证\"></a>服务器免密码认证</h1><hr>\n<blockquote>\n<p>配置过程很简单，但每次都忘记一些细节，故做个笔记</p>\n</blockquote>","more":"<h3 id=\"单向免密码登陆\"><a href=\"#单向免密码登陆\" class=\"headerlink\" title=\"单向免密码登陆\"></a>单向免密码登陆</h3><p>服务器A，PC机B。</p>\n<h4 id=\"生成\"><a href=\"#生成\" class=\"headerlink\" title=\"生成\"></a>生成</h4><p>一般情况下，linux系统都会在你的目录下<code>~/</code>有<code>.ssh</code>文件夹，如果没有，则需要生成：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen</div></pre></td></tr></table></figure></p>\n<p>如果不需要特殊配置，直接一路yes就可以了<br>这时候再去看，就已经有了：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">ls ~/.ssh</div><div class=\"line\"></div><div class=\"line\">id_rsa  id_rsa.pub  known_hosts</div></pre></td></tr></table></figure></p>\n<h4 id=\"认证\"><a href=\"#认证\" class=\"headerlink\" title=\"认证\"></a>认证</h4><h5 id=\"在目标服务器新建认证文件\"><a href=\"#在目标服务器新建认证文件\" class=\"headerlink\" title=\"在目标服务器新建认证文件\"></a>在目标服务器新建认证文件</h5><p>在需要免密码的服务器上，即A服务器中的<code>~/.ssh/</code>下新建文件：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~/.ssh</div><div class=\"line\">touch authorized_keys</div></pre></td></tr></table></figure></p>\n<h5 id=\"获取公钥\"><a href=\"#获取公钥\" class=\"headerlink\" title=\"获取公钥\"></a>获取公钥</h5><p>将操作机pc中的公钥<code>id_rsa.pub</code>取出来：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p>\n<h5 id=\"完成认证\"><a href=\"#完成认证\" class=\"headerlink\" title=\"完成认证\"></a>完成认证</h5><p>将打印出来的<code>id_rsa.pub</code>中的内容粘贴至服务器A的authorized_keys中，保存即可。</p>\n<h5 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h5><p>如果需要认证多台机器，可以自行将以上过程做成小脚本，我懒，没做。。。</p>\n<p><a href=\"http://kuanghy.github.io/2016/09/01/linux-softwares\" target=\"_blank\" rel=\"external\">linux下小工具参考</a></p>"},{"title":"phpMyAdmin导出excel文件解析时的坑","date":"2017-02-08T06:17:38.000Z","_content":"\n## phpMyAdmin导出excel文件，在解析时遇到的问题\n\n### phpMyAdmin\n很多人都喜欢使用的WEB数据库管理系统，前几年非常流行，刚好我要查询对方数据库，\n他们就用的这个\n\n### 需求\n我的要求很简单，从他们库中导出数据文件，excel即可，然后自己解析，再进行处理数据\n<!--more-->\n\n### 坑\n解析excel，当然首选简单好用的包，xlrd就很不错;\n#### xlrd\n但在读取时，总会报错；错误如下：\n##### 读取\n```python\nimport xlrd\nworkbook = xlrd.open_workbook(\"/home/hanz/book1.xls\")\n```\n\n结果是，报错如下：\n```errorcode\nxlrd.biffh.XLRDError: Unsupported format, or corrupt file: Expected BOF record;\nfound '<html r'\"\n```\n\n#### 其他解析excel包\n之后又试了pandas，巨大无比的一个解析数据的包，但同样无法解析。。。\n\n### 分析\n#### 根据报错分析原因\n根据xlrd报的错，猜了一下原因，有可能导出的excel文件并不是正规的excel保存的那种；\n里面的<html就能看出来，中间是包含有html代码的，于是，用文本打开了看了一下，果然：\n\n![phpmyadmin-export-excel-file](http://oi1wvrjc2.bkt.clouddn.com/17-2-8/44364820-file_1486535637317_11f27.png)\n\n把后缀改为.html，直接就能浏览器打开了。。。果然是伪excel文件。。。\n\n### 解决方案\n知道原因了，解决起来就简单了\n#### 思路\n如果是html文件，那首选html解析的包就可以，不用去做正则匹配，这类解析包也有很多，比如：\n\n[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/)\n\n[pyquery](https://pythonhosted.org/pyquery)\n\n#### 选用\n在这里选用我的宗旨就是方便，人生苦短嘛。\n所以就用pyquery喽。\n语法非常方便！～\npyquery完全API点击这里：[PyQuery-API](https://pythonhosted.org/pyquery/api.html)\n```python\nfrom pyquery import PyQuery\nf = PyQuery(\"/home/hanz/o12_adsf.xls\")\ndoo = f(\"tr\")\ndoo.text()\n```","source":"_posts/phpMyAdmin导出excel文件解析时的坑.md","raw":"---\ntitle: phpMyAdmin导出excel文件解析时的坑\ndate: 2017-02-08 14:17:38\ntags: python\ncategories: \n- python\n---\n\n## phpMyAdmin导出excel文件，在解析时遇到的问题\n\n### phpMyAdmin\n很多人都喜欢使用的WEB数据库管理系统，前几年非常流行，刚好我要查询对方数据库，\n他们就用的这个\n\n### 需求\n我的要求很简单，从他们库中导出数据文件，excel即可，然后自己解析，再进行处理数据\n<!--more-->\n\n### 坑\n解析excel，当然首选简单好用的包，xlrd就很不错;\n#### xlrd\n但在读取时，总会报错；错误如下：\n##### 读取\n```python\nimport xlrd\nworkbook = xlrd.open_workbook(\"/home/hanz/book1.xls\")\n```\n\n结果是，报错如下：\n```errorcode\nxlrd.biffh.XLRDError: Unsupported format, or corrupt file: Expected BOF record;\nfound '<html r'\"\n```\n\n#### 其他解析excel包\n之后又试了pandas，巨大无比的一个解析数据的包，但同样无法解析。。。\n\n### 分析\n#### 根据报错分析原因\n根据xlrd报的错，猜了一下原因，有可能导出的excel文件并不是正规的excel保存的那种；\n里面的<html就能看出来，中间是包含有html代码的，于是，用文本打开了看了一下，果然：\n\n![phpmyadmin-export-excel-file](http://oi1wvrjc2.bkt.clouddn.com/17-2-8/44364820-file_1486535637317_11f27.png)\n\n把后缀改为.html，直接就能浏览器打开了。。。果然是伪excel文件。。。\n\n### 解决方案\n知道原因了，解决起来就简单了\n#### 思路\n如果是html文件，那首选html解析的包就可以，不用去做正则匹配，这类解析包也有很多，比如：\n\n[beautifulsoup](https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/)\n\n[pyquery](https://pythonhosted.org/pyquery)\n\n#### 选用\n在这里选用我的宗旨就是方便，人生苦短嘛。\n所以就用pyquery喽。\n语法非常方便！～\npyquery完全API点击这里：[PyQuery-API](https://pythonhosted.org/pyquery/api.html)\n```python\nfrom pyquery import PyQuery\nf = PyQuery(\"/home/hanz/o12_adsf.xls\")\ndoo = f(\"tr\")\ndoo.text()\n```","slug":"phpMyAdmin导出excel文件解析时的坑","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqlx00174rd3xqct0iuc","content":"<h2 id=\"phpMyAdmin导出excel文件，在解析时遇到的问题\"><a href=\"#phpMyAdmin导出excel文件，在解析时遇到的问题\" class=\"headerlink\" title=\"phpMyAdmin导出excel文件，在解析时遇到的问题\"></a>phpMyAdmin导出excel文件，在解析时遇到的问题</h2><h3 id=\"phpMyAdmin\"><a href=\"#phpMyAdmin\" class=\"headerlink\" title=\"phpMyAdmin\"></a>phpMyAdmin</h3><p>很多人都喜欢使用的WEB数据库管理系统，前几年非常流行，刚好我要查询对方数据库，<br>他们就用的这个</p>\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>我的要求很简单，从他们库中导出数据文件，excel即可，然后自己解析，再进行处理数据<br><a id=\"more\"></a></p>\n<h3 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h3><p>解析excel，当然首选简单好用的包，xlrd就很不错;</p>\n<h4 id=\"xlrd\"><a href=\"#xlrd\" class=\"headerlink\" title=\"xlrd\"></a>xlrd</h4><p>但在读取时，总会报错；错误如下：</p>\n<h5 id=\"读取\"><a href=\"#读取\" class=\"headerlink\" title=\"读取\"></a>读取</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> xlrd</div><div class=\"line\">workbook = xlrd.open_workbook(<span class=\"string\">\"/home/hanz/book1.xls\"</span>)</div></pre></td></tr></table></figure>\n<p>结果是，报错如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">xlrd.biffh.XLRDError: Unsupported format, or corrupt file: Expected BOF record;</div><div class=\"line\">found &apos;&lt;html r&apos;&quot;</div></pre></td></tr></table></figure></p>\n<h4 id=\"其他解析excel包\"><a href=\"#其他解析excel包\" class=\"headerlink\" title=\"其他解析excel包\"></a>其他解析excel包</h4><p>之后又试了pandas，巨大无比的一个解析数据的包，但同样无法解析。。。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><h4 id=\"根据报错分析原因\"><a href=\"#根据报错分析原因\" class=\"headerlink\" title=\"根据报错分析原因\"></a>根据报错分析原因</h4><p>根据xlrd报的错，猜了一下原因，有可能导出的excel文件并不是正规的excel保存的那种；<br>里面的&lt;html就能看出来，中间是包含有html代码的，于是，用文本打开了看了一下，果然：</p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-2-8/44364820-file_1486535637317_11f27.png\" alt=\"phpmyadmin-export-excel-file\"></p>\n<p>把后缀改为.html，直接就能浏览器打开了。。。果然是伪excel文件。。。</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>知道原因了，解决起来就简单了</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>如果是html文件，那首选html解析的包就可以，不用去做正则匹配，这类解析包也有很多，比如：</p>\n<p><a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/\" target=\"_blank\" rel=\"external\">beautifulsoup</a></p>\n<p><a href=\"https://pythonhosted.org/pyquery\" target=\"_blank\" rel=\"external\">pyquery</a></p>\n<h4 id=\"选用\"><a href=\"#选用\" class=\"headerlink\" title=\"选用\"></a>选用</h4><p>在这里选用我的宗旨就是方便，人生苦短嘛。<br>所以就用pyquery喽。<br>语法非常方便！～<br>pyquery完全API点击这里：<a href=\"https://pythonhosted.org/pyquery/api.html\" target=\"_blank\" rel=\"external\">PyQuery-API</a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> pyquery <span class=\"keyword\">import</span> PyQuery</div><div class=\"line\">f = PyQuery(<span class=\"string\">\"/home/hanz/o12_adsf.xls\"</span>)</div><div class=\"line\">doo = f(<span class=\"string\">\"tr\"</span>)</div><div class=\"line\">doo.text()</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"phpMyAdmin导出excel文件，在解析时遇到的问题\"><a href=\"#phpMyAdmin导出excel文件，在解析时遇到的问题\" class=\"headerlink\" title=\"phpMyAdmin导出excel文件，在解析时遇到的问题\"></a>phpMyAdmin导出excel文件，在解析时遇到的问题</h2><h3 id=\"phpMyAdmin\"><a href=\"#phpMyAdmin\" class=\"headerlink\" title=\"phpMyAdmin\"></a>phpMyAdmin</h3><p>很多人都喜欢使用的WEB数据库管理系统，前几年非常流行，刚好我要查询对方数据库，<br>他们就用的这个</p>\n<h3 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h3><p>我的要求很简单，从他们库中导出数据文件，excel即可，然后自己解析，再进行处理数据<br>","more":"</p>\n<h3 id=\"坑\"><a href=\"#坑\" class=\"headerlink\" title=\"坑\"></a>坑</h3><p>解析excel，当然首选简单好用的包，xlrd就很不错;</p>\n<h4 id=\"xlrd\"><a href=\"#xlrd\" class=\"headerlink\" title=\"xlrd\"></a>xlrd</h4><p>但在读取时，总会报错；错误如下：</p>\n<h5 id=\"读取\"><a href=\"#读取\" class=\"headerlink\" title=\"读取\"></a>读取</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> xlrd</div><div class=\"line\">workbook = xlrd.open_workbook(<span class=\"string\">\"/home/hanz/book1.xls\"</span>)</div></pre></td></tr></table></figure>\n<p>结果是，报错如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">xlrd.biffh.XLRDError: Unsupported format, or corrupt file: Expected BOF record;</div><div class=\"line\">found &apos;&lt;html r&apos;&quot;</div></pre></td></tr></table></figure></p>\n<h4 id=\"其他解析excel包\"><a href=\"#其他解析excel包\" class=\"headerlink\" title=\"其他解析excel包\"></a>其他解析excel包</h4><p>之后又试了pandas，巨大无比的一个解析数据的包，但同样无法解析。。。</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><h4 id=\"根据报错分析原因\"><a href=\"#根据报错分析原因\" class=\"headerlink\" title=\"根据报错分析原因\"></a>根据报错分析原因</h4><p>根据xlrd报的错，猜了一下原因，有可能导出的excel文件并不是正规的excel保存的那种；<br>里面的&lt;html就能看出来，中间是包含有html代码的，于是，用文本打开了看了一下，果然：</p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-2-8/44364820-file_1486535637317_11f27.png\" alt=\"phpmyadmin-export-excel-file\"></p>\n<p>把后缀改为.html，直接就能浏览器打开了。。。果然是伪excel文件。。。</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>知道原因了，解决起来就简单了</p>\n<h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>如果是html文件，那首选html解析的包就可以，不用去做正则匹配，这类解析包也有很多，比如：</p>\n<p><a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/\" target=\"_blank\" rel=\"external\">beautifulsoup</a></p>\n<p><a href=\"https://pythonhosted.org/pyquery\" target=\"_blank\" rel=\"external\">pyquery</a></p>\n<h4 id=\"选用\"><a href=\"#选用\" class=\"headerlink\" title=\"选用\"></a>选用</h4><p>在这里选用我的宗旨就是方便，人生苦短嘛。<br>所以就用pyquery喽。<br>语法非常方便！～<br>pyquery完全API点击这里：<a href=\"https://pythonhosted.org/pyquery/api.html\" target=\"_blank\" rel=\"external\">PyQuery-API</a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> pyquery <span class=\"keyword\">import</span> PyQuery</div><div class=\"line\">f = PyQuery(<span class=\"string\">\"/home/hanz/o12_adsf.xls\"</span>)</div><div class=\"line\">doo = f(<span class=\"string\">\"tr\"</span>)</div><div class=\"line\">doo.text()</div></pre></td></tr></table></figure></p>"},{"title":"pycharm license server","date":"2017-04-09T07:52:58.000Z","thumbnail":"http://oi1wvrjc2.bkt.clouddn.com/17-5-2/62310626-file_1493692370185_166d9.jpg?imageView2/1/w/900/h/563/format/webp/q/75|imageslim","_content":"\n# 牛人搞的license server，转一发\n\n> 搭了一个支持JetBrains全系列产品的License Server，理论上支持以下所有版本：\n\n* IntelliJ IDEA\n* PhpStorm\n* PyCharm\n* RubyMine\n* WebStorm\n<!--more-->\n* AppCode\n* CLion\n* DataGrip\n* ReSharper\n* ReSharper C++\n* dotTrace\n* dotMemory\n* dotCover\n* dotPeek\n\n> 不过本人仅测试了pycharm。个人搭建教程请参考idea.lanyus.com\n\n## 域名和端口如下\n## JetBrains License Server url as follows：\n\n[http://pycharm.tyr.gift:8888](http://pycharm.tyr.gift:8888)\n","source":"_posts/pycharm-license-server.md","raw":"---\ntitle: pycharm license server\ndate: 2017-04-09 15:52:58\ntags: \n- python\npermalink: how-to-get-pycharm-license\nthumbnail: http://oi1wvrjc2.bkt.clouddn.com/17-5-2/62310626-file_1493692370185_166d9.jpg?imageView2/1/w/900/h/563/format/webp/q/75|imageslim\ncategories:\n- python\n---\n\n# 牛人搞的license server，转一发\n\n> 搭了一个支持JetBrains全系列产品的License Server，理论上支持以下所有版本：\n\n* IntelliJ IDEA\n* PhpStorm\n* PyCharm\n* RubyMine\n* WebStorm\n<!--more-->\n* AppCode\n* CLion\n* DataGrip\n* ReSharper\n* ReSharper C++\n* dotTrace\n* dotMemory\n* dotCover\n* dotPeek\n\n> 不过本人仅测试了pycharm。个人搭建教程请参考idea.lanyus.com\n\n## 域名和端口如下\n## JetBrains License Server url as follows：\n\n[http://pycharm.tyr.gift:8888](http://pycharm.tyr.gift:8888)\n","slug":"how-to-get-pycharm-license","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqly00194rd36u6rrahx","content":"<h1 id=\"牛人搞的license-server，转一发\"><a href=\"#牛人搞的license-server，转一发\" class=\"headerlink\" title=\"牛人搞的license server，转一发\"></a>牛人搞的license server，转一发</h1><blockquote>\n<p>搭了一个支持JetBrains全系列产品的License Server，理论上支持以下所有版本：</p>\n</blockquote>\n<ul>\n<li>IntelliJ IDEA</li>\n<li>PhpStorm</li>\n<li>PyCharm</li>\n<li>RubyMine</li>\n<li>WebStorm<a id=\"more\"></a></li>\n<li>AppCode</li>\n<li>CLion</li>\n<li>DataGrip</li>\n<li>ReSharper</li>\n<li>ReSharper C++</li>\n<li>dotTrace</li>\n<li>dotMemory</li>\n<li>dotCover</li>\n<li>dotPeek</li>\n</ul>\n<blockquote>\n<p>不过本人仅测试了pycharm。个人搭建教程请参考idea.lanyus.com</p>\n</blockquote>\n<h2 id=\"域名和端口如下\"><a href=\"#域名和端口如下\" class=\"headerlink\" title=\"域名和端口如下\"></a>域名和端口如下</h2><h2 id=\"JetBrains-License-Server-url-as-follows：\"><a href=\"#JetBrains-License-Server-url-as-follows：\" class=\"headerlink\" title=\"JetBrains License Server url as follows：\"></a>JetBrains License Server url as follows：</h2><p><a href=\"http://pycharm.tyr.gift:8888\" target=\"_blank\" rel=\"external\">http://pycharm.tyr.gift:8888</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"牛人搞的license-server，转一发\"><a href=\"#牛人搞的license-server，转一发\" class=\"headerlink\" title=\"牛人搞的license server，转一发\"></a>牛人搞的license server，转一发</h1><blockquote>\n<p>搭了一个支持JetBrains全系列产品的License Server，理论上支持以下所有版本：</p>\n</blockquote>\n<ul>\n<li>IntelliJ IDEA</li>\n<li>PhpStorm</li>\n<li>PyCharm</li>\n<li>RubyMine</li>\n<li>WebStorm","more":"</li>\n<li>AppCode</li>\n<li>CLion</li>\n<li>DataGrip</li>\n<li>ReSharper</li>\n<li>ReSharper C++</li>\n<li>dotTrace</li>\n<li>dotMemory</li>\n<li>dotCover</li>\n<li>dotPeek</li>\n</ul>\n<blockquote>\n<p>不过本人仅测试了pycharm。个人搭建教程请参考idea.lanyus.com</p>\n</blockquote>\n<h2 id=\"域名和端口如下\"><a href=\"#域名和端口如下\" class=\"headerlink\" title=\"域名和端口如下\"></a>域名和端口如下</h2><h2 id=\"JetBrains-License-Server-url-as-follows：\"><a href=\"#JetBrains-License-Server-url-as-follows：\" class=\"headerlink\" title=\"JetBrains License Server url as follows：\"></a>JetBrains License Server url as follows：</h2><p><a href=\"http://pycharm.tyr.gift:8888\" target=\"_blank\" rel=\"external\">http://pycharm.tyr.gift:8888</a></p>"},{"title":"python process control cycle: While and For","date":"2016-12-08T22:22:48.000Z","_content":"循环（迭代器与生成器）的那点事\n======\n\n## while\n\n- while 执行时的基本流程图\n\n![image](http://oi1wvrjc2.bkt.clouddn.com/while.png \"while流程图\")\n\n<!--more-->\n\n> while语句的基本格式\n\n其中<exception>为对参数或表达式取布尔值，即：bool(<exception>)，结果只有两种，True和False\n\n如下：\n\n```python\nwhile <exception>:\n    <suite>\n    <break>\nelse:\n    <suite>\n```\n\n> tips:\n\n讲述一下bool值：\n\n1. 在数值上下文环境中，True被当作1, False被当作0；如True+2 => 3, int(True) => 1\n\n2. 其他类型值转换bool值时，除了'', \"\", \"\"\"\", 0, (), [], {}, None, 0.0, 0L, 0.0+0.0j, False值为Faluse，其他的都为True；例如：bool(-1) => True\n\n\n\n----\n\n- while表达式中的break，指跳出最近的所在的循环；一般为满足条件后跳出，以防止死循环； \n\n举例：猜字游戏\n\n```python\ndef guess():\n    while True:\n        input_seed = raw_input(\"please input the seed:\")\n        try:\n            seed = int(input_seed)\n            if seed == 11:\n                print(\"congretulations to you!\")\n                break\n            else:\n                print(\"guess again!\")\n        except ValueError:\n            print(\"please input int type\")\n        except Exception as e:\n            print(e)\n```\n\n- else为可选部分，当控制权离开循环而又没有碰到break语句时，就会执行else中的语句；\n\n[注意：当第一次判断while循环条件时就不满足时，即一次循环也没有执行时，还是会执行else语句的]\n\n```python\ndef func1():\n    keys = \"goodjob\"\n    while keys:\n        print(keys)\n        keys = keys[1:]\n    else:\n        print(\"done\")\n```\n\n```python\ndef func3():\n    while False:\n        print(\"false\")\n    else:\n        print(\"the end\")\n```\n\n- break, continue和pass\n\n> break: 跳出最近所在的循环 （指跳出整个循环）\n\ncontinue: 立即跳到循环的顶端，即跳过本次循环，执行下一次循环\n\npass: 占位语句，无实际作用\n\n```python\na = 10\nb = 0\nwhile True:\n    if a == 1: break\n    b += 1\n    print(\"b=\",b)\n    if b == 100: break\n    if a == 3: continue\n    a -= 1\n    print(\"a=\",a)\n```\n\n```python\ndef func2():\n    while True:\n        pass\n```\n\n----\n\n## for\n\n>for语句的基本格式和一般用法\n\n```python\nfor <target> in <object>:\n    <suite1>\nelse:\n    <suite2>\n```\n\n>执行方式\n\n当运行for循环时，会将序列对象中的元素逐个赋值给目标，然后为每个元素执行循环主体。\n\n\n\n----\n\n- for循环也有break, continue和else子句\n\n```python\nfor <target> in <object>:\n    <suite1>\n    if <test>: break\n    if <test>: contiune\nelse:\n    <suite2>\n```\n\n- 基本用法 \n\n> 求1-10之和，之积\n\n```python\ndef func4():\n    h = 0\n    j = 1\n    for x in xrange(1,11):\n        h += x\n        j *= x\n    print h, j\n```\n\n- for中的元组赋值\n\n若对应列表中的元组进行赋值，则可看做对元组的解包运算；\n\n```python\ndef func5():\n    T = [(1,2),(3,4),(5,6)]\n    for x in T:\n        print x\n    for x, y in T:\n        print(x,\"=>\",y)\n```\n\n- 结合items操作字典\n\nfor 循环中的元组使得用items方法来遍历字典中的键和值变得很方便，而不必再遍历键并手动索引以获取值\n\n```python\ndef func6():\n    D = {'a':1,'b':2,'c':3}\n    for x in D:\n        print x\n    for x, y in D.items():\n        print(x,\"=>\",y)\n```\n\n- 多重for循环\n\n注意：else是第二层循环中的子句，而非if的子句\n\n```python\ndef func7():\n    items = ['aaa',111,(4,5),2.01]\n    tests = [(4,5),3.14]\n    for key in tests:\n        for item in items:\n            if key == item:\n                print(key, \"was found\")\n                break\n        else:\n            print(key, \"not found\")\n```\n\n- 常用range搭配，来做循环计数器和索引\n\n> range，python2.7为生成list，python3.*与xrange合并，均变为生成可迭代的对象；\n\n简单说区别：生成可迭代对象比生成list速度更快，占用内存更小，在大数据量情况下非常有效。\n\n```python\nlist(range(-5,5))\n>> [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4]\nlist(range(5,-5,-2))\n>> [5, 3, 1, -1, -3]\n```\n\n- 利用range进行索引，可以通过控制range来实现特殊的遍历，例如，可跳过一些元素\n\n```python\nS = 'abcdefghijklmn'\nfor i in range(0, len(S), 2): print S[i],\n>> a c e g i k m\n```\n\n> 扩展：其他的跳过元素的方式，运用切片技术，如需要可详细了解：\n\n\n\n```python\nfor item in S[::2]:print item,\n>> a c e g i k m\n```\n\n- 并行遍历\n\n对两组列表进行并行遍历\n\n```python\ndef func9():\n    a = [1,2,3,4]\n    b = [11,22,33,44]\n    c = zip(a,b)\n    print type(c)\n    print c\n    for m, n in c:\n        print m,\"+\",n,\"=\",m+n\n>>\n<type 'list'>\n[(1, 11), (2, 22), (3, 33), (4, 44)]\n1 + 11 = 12\n2 + 22 = 24\n3 + 33 = 36\n4 + 44 = 48\n```\n\n> 扩展：zip和range一样，2.×时代生成为list，3.×时代均为可迭代对象；\n\n\n\n---\n\n- 产生偏移和元素: enumerate\n\n有时可能会有这种需求，查看迭代的元素所在的位置，可以这样实现\n\n```python\n\ndef func10():\n    a = \"abcdefg\"\n    j = 0\n    for x in a:\n        print x, \"offset is \",j\n        j += 1\n>>>\na offset is  0\nb offset is  1\nc offset is  2\nd offset is  3\ne offset is  4\nf offset is  5\ng offset is  6\n```\n\n但内置函数enumerate可以帮我们做\n\n```python\ndef func11():\n    a = \"abcdefg\"\n    j = 0\n    for m, n in enumerate(a):\n        print n, \"offset is --\", m\n```\n\n## 列表推导\n\n> 列表推导式为从序列中创建列表提供了一个简单的方法。\n\n### 普通创建列表方式\n我们可以像这样创建一个普通的列表，像这样：\n```python\ntestlist = []\nfor x in range(10):\n    testlist.append(x**2)\n\nprint testlist\n\n>>> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n```\n\n通过上面的程序可以发现，通过for循环中被创建的名为x的变量在循环完毕后，依然存在。\n如果想完成上面的功能，且不会产生其他的副作用，可以使用lambda来创建：\n\n### 通过lambda表达式来创建\n```python\ntestlist = list(map(lambda x: x**2, range(10)))\n\n>>> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n```\n还有一种更加易读的创建方式：\n\n### 通过列表推导创建\n\n#### 基本列表推导式\n\n```python\ntestlist = [x**2 for x in range(10)]\n\n>>> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n```\n这种方式更加易读，且创建起列表来得心应手。\n下面我们来看看，它是如何来创建的，即它的格式是什么。\n\n> 列表推导式由包含一个表达式的括号组成，表达式后面跟随一个 for 子句，\n> 之后可以有零或多个 for 或 if 子句。结果是一个列表，\n> 由表达式依据其后面的 for 和 if 子句上下文计算而来的结果构成。\n\n等同于：\n```python\ntestlist = []\nfor x in range(10):\n    testlist.append(x**2)\n\ntestlist\n\n>>>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n```\n\n#### 带控制流程的列表推导\n\n来具体看个例子：\n双重循环加判断：\n```python\n[(x, y) for x in [1,2,3] for y in [3,1,5] if x != y ]\n\n>>> [(1, 3), (1, 5), (2, 3), (2, 1), (2, 5), (3, 1), (3, 5)]\n```\n如果看起来太复杂，那么变成常规的语法来看看：\n上面的等同于：\n```python\ntestlist = []\nfor x in [1,2,3]:\n    for y in [3,1,5]:\n        if x != y:\n            testlist.append((x, y))\n\ntestlist\n\n>>> [(1, 3), (1, 5), (2, 3), (2, 1), (2, 5), (3, 1), (3, 5)]\n```\n注意下上面的for 和if语句的顺序。\n\n#### 嵌套的列表推导式\n\n列表解析中的第一个表达式可以是任何表达式，包括列表解析。\n\n再看一个例子：\n有一个长度为4的列表组成的3×4的矩阵，如果想要交换行列，应如何操作？\n```python\ntestlist = [\n    [1,2,3,4],\n    [5,6,7,8],\n    [9,10,11,12],\n]\n```\n##### 普通方式：\n```python\nresult = []\nfor x in range(4):\n    bb = []\n    for y in testlist:\n        bb.append(y[x])\n    result.append(bb)\n\n>>> [[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]\n```\n\n##### 一层列表推导：\n```python\nresult = []\nfor x in range(4):\n    result.append([row[i] for i in testlist])\n\nresult\n\n>>> [[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]\n```\n\n##### 双层列表推导\n```python\n[[y[x] for y in testlist] for x in range(4)]\n```\n\n##### 内置函数处理\n```python\nlist(zip(*testlist))\n```\n上次讲过一点zip的功能，这里的*号为参数列表的分拆，等同于：\n```python\na = [1,2,3,4]\nb = [5,6,7,8]\nc = [9,10,11,12]\ntt = zip(a,b,c)\nresult = list(tt)\n```\n\n### 练习\n自己偿试将上次的food.py中的循环判断语句，使用列表表达式的方式进行处理\n\n\n用自己的话来说一遍：\n把最终要处理的表达式提在最前面，把循环语句放在后面；循环语句与判断语句按顺序依次排列。\n每一层中扩号都执行了一次append操作。\n\n\n\n\n## 文件迭代器\n\n### 文件读取方法大集合\n\n- 基本读取文件方法\n\n\n\n- with的用法\n\n\n\n## 生成器-generator\n\nyield\n\n\n\n## 迭代器\n","source":"_posts/python-process-control-cycle-While-and-For.md","raw":"---\ntitle: 'python process control cycle: While and For'\ndate: 2016-12-09 06:22:48\ntags:\n- python\n- 迭代\ncategories:\n- python\n---\n循环（迭代器与生成器）的那点事\n======\n\n## while\n\n- while 执行时的基本流程图\n\n![image](http://oi1wvrjc2.bkt.clouddn.com/while.png \"while流程图\")\n\n<!--more-->\n\n> while语句的基本格式\n\n其中<exception>为对参数或表达式取布尔值，即：bool(<exception>)，结果只有两种，True和False\n\n如下：\n\n```python\nwhile <exception>:\n    <suite>\n    <break>\nelse:\n    <suite>\n```\n\n> tips:\n\n讲述一下bool值：\n\n1. 在数值上下文环境中，True被当作1, False被当作0；如True+2 => 3, int(True) => 1\n\n2. 其他类型值转换bool值时，除了'', \"\", \"\"\"\", 0, (), [], {}, None, 0.0, 0L, 0.0+0.0j, False值为Faluse，其他的都为True；例如：bool(-1) => True\n\n\n\n----\n\n- while表达式中的break，指跳出最近的所在的循环；一般为满足条件后跳出，以防止死循环； \n\n举例：猜字游戏\n\n```python\ndef guess():\n    while True:\n        input_seed = raw_input(\"please input the seed:\")\n        try:\n            seed = int(input_seed)\n            if seed == 11:\n                print(\"congretulations to you!\")\n                break\n            else:\n                print(\"guess again!\")\n        except ValueError:\n            print(\"please input int type\")\n        except Exception as e:\n            print(e)\n```\n\n- else为可选部分，当控制权离开循环而又没有碰到break语句时，就会执行else中的语句；\n\n[注意：当第一次判断while循环条件时就不满足时，即一次循环也没有执行时，还是会执行else语句的]\n\n```python\ndef func1():\n    keys = \"goodjob\"\n    while keys:\n        print(keys)\n        keys = keys[1:]\n    else:\n        print(\"done\")\n```\n\n```python\ndef func3():\n    while False:\n        print(\"false\")\n    else:\n        print(\"the end\")\n```\n\n- break, continue和pass\n\n> break: 跳出最近所在的循环 （指跳出整个循环）\n\ncontinue: 立即跳到循环的顶端，即跳过本次循环，执行下一次循环\n\npass: 占位语句，无实际作用\n\n```python\na = 10\nb = 0\nwhile True:\n    if a == 1: break\n    b += 1\n    print(\"b=\",b)\n    if b == 100: break\n    if a == 3: continue\n    a -= 1\n    print(\"a=\",a)\n```\n\n```python\ndef func2():\n    while True:\n        pass\n```\n\n----\n\n## for\n\n>for语句的基本格式和一般用法\n\n```python\nfor <target> in <object>:\n    <suite1>\nelse:\n    <suite2>\n```\n\n>执行方式\n\n当运行for循环时，会将序列对象中的元素逐个赋值给目标，然后为每个元素执行循环主体。\n\n\n\n----\n\n- for循环也有break, continue和else子句\n\n```python\nfor <target> in <object>:\n    <suite1>\n    if <test>: break\n    if <test>: contiune\nelse:\n    <suite2>\n```\n\n- 基本用法 \n\n> 求1-10之和，之积\n\n```python\ndef func4():\n    h = 0\n    j = 1\n    for x in xrange(1,11):\n        h += x\n        j *= x\n    print h, j\n```\n\n- for中的元组赋值\n\n若对应列表中的元组进行赋值，则可看做对元组的解包运算；\n\n```python\ndef func5():\n    T = [(1,2),(3,4),(5,6)]\n    for x in T:\n        print x\n    for x, y in T:\n        print(x,\"=>\",y)\n```\n\n- 结合items操作字典\n\nfor 循环中的元组使得用items方法来遍历字典中的键和值变得很方便，而不必再遍历键并手动索引以获取值\n\n```python\ndef func6():\n    D = {'a':1,'b':2,'c':3}\n    for x in D:\n        print x\n    for x, y in D.items():\n        print(x,\"=>\",y)\n```\n\n- 多重for循环\n\n注意：else是第二层循环中的子句，而非if的子句\n\n```python\ndef func7():\n    items = ['aaa',111,(4,5),2.01]\n    tests = [(4,5),3.14]\n    for key in tests:\n        for item in items:\n            if key == item:\n                print(key, \"was found\")\n                break\n        else:\n            print(key, \"not found\")\n```\n\n- 常用range搭配，来做循环计数器和索引\n\n> range，python2.7为生成list，python3.*与xrange合并，均变为生成可迭代的对象；\n\n简单说区别：生成可迭代对象比生成list速度更快，占用内存更小，在大数据量情况下非常有效。\n\n```python\nlist(range(-5,5))\n>> [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4]\nlist(range(5,-5,-2))\n>> [5, 3, 1, -1, -3]\n```\n\n- 利用range进行索引，可以通过控制range来实现特殊的遍历，例如，可跳过一些元素\n\n```python\nS = 'abcdefghijklmn'\nfor i in range(0, len(S), 2): print S[i],\n>> a c e g i k m\n```\n\n> 扩展：其他的跳过元素的方式，运用切片技术，如需要可详细了解：\n\n\n\n```python\nfor item in S[::2]:print item,\n>> a c e g i k m\n```\n\n- 并行遍历\n\n对两组列表进行并行遍历\n\n```python\ndef func9():\n    a = [1,2,3,4]\n    b = [11,22,33,44]\n    c = zip(a,b)\n    print type(c)\n    print c\n    for m, n in c:\n        print m,\"+\",n,\"=\",m+n\n>>\n<type 'list'>\n[(1, 11), (2, 22), (3, 33), (4, 44)]\n1 + 11 = 12\n2 + 22 = 24\n3 + 33 = 36\n4 + 44 = 48\n```\n\n> 扩展：zip和range一样，2.×时代生成为list，3.×时代均为可迭代对象；\n\n\n\n---\n\n- 产生偏移和元素: enumerate\n\n有时可能会有这种需求，查看迭代的元素所在的位置，可以这样实现\n\n```python\n\ndef func10():\n    a = \"abcdefg\"\n    j = 0\n    for x in a:\n        print x, \"offset is \",j\n        j += 1\n>>>\na offset is  0\nb offset is  1\nc offset is  2\nd offset is  3\ne offset is  4\nf offset is  5\ng offset is  6\n```\n\n但内置函数enumerate可以帮我们做\n\n```python\ndef func11():\n    a = \"abcdefg\"\n    j = 0\n    for m, n in enumerate(a):\n        print n, \"offset is --\", m\n```\n\n## 列表推导\n\n> 列表推导式为从序列中创建列表提供了一个简单的方法。\n\n### 普通创建列表方式\n我们可以像这样创建一个普通的列表，像这样：\n```python\ntestlist = []\nfor x in range(10):\n    testlist.append(x**2)\n\nprint testlist\n\n>>> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n```\n\n通过上面的程序可以发现，通过for循环中被创建的名为x的变量在循环完毕后，依然存在。\n如果想完成上面的功能，且不会产生其他的副作用，可以使用lambda来创建：\n\n### 通过lambda表达式来创建\n```python\ntestlist = list(map(lambda x: x**2, range(10)))\n\n>>> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n```\n还有一种更加易读的创建方式：\n\n### 通过列表推导创建\n\n#### 基本列表推导式\n\n```python\ntestlist = [x**2 for x in range(10)]\n\n>>> [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n```\n这种方式更加易读，且创建起列表来得心应手。\n下面我们来看看，它是如何来创建的，即它的格式是什么。\n\n> 列表推导式由包含一个表达式的括号组成，表达式后面跟随一个 for 子句，\n> 之后可以有零或多个 for 或 if 子句。结果是一个列表，\n> 由表达式依据其后面的 for 和 if 子句上下文计算而来的结果构成。\n\n等同于：\n```python\ntestlist = []\nfor x in range(10):\n    testlist.append(x**2)\n\ntestlist\n\n>>>[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n```\n\n#### 带控制流程的列表推导\n\n来具体看个例子：\n双重循环加判断：\n```python\n[(x, y) for x in [1,2,3] for y in [3,1,5] if x != y ]\n\n>>> [(1, 3), (1, 5), (2, 3), (2, 1), (2, 5), (3, 1), (3, 5)]\n```\n如果看起来太复杂，那么变成常规的语法来看看：\n上面的等同于：\n```python\ntestlist = []\nfor x in [1,2,3]:\n    for y in [3,1,5]:\n        if x != y:\n            testlist.append((x, y))\n\ntestlist\n\n>>> [(1, 3), (1, 5), (2, 3), (2, 1), (2, 5), (3, 1), (3, 5)]\n```\n注意下上面的for 和if语句的顺序。\n\n#### 嵌套的列表推导式\n\n列表解析中的第一个表达式可以是任何表达式，包括列表解析。\n\n再看一个例子：\n有一个长度为4的列表组成的3×4的矩阵，如果想要交换行列，应如何操作？\n```python\ntestlist = [\n    [1,2,3,4],\n    [5,6,7,8],\n    [9,10,11,12],\n]\n```\n##### 普通方式：\n```python\nresult = []\nfor x in range(4):\n    bb = []\n    for y in testlist:\n        bb.append(y[x])\n    result.append(bb)\n\n>>> [[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]\n```\n\n##### 一层列表推导：\n```python\nresult = []\nfor x in range(4):\n    result.append([row[i] for i in testlist])\n\nresult\n\n>>> [[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]\n```\n\n##### 双层列表推导\n```python\n[[y[x] for y in testlist] for x in range(4)]\n```\n\n##### 内置函数处理\n```python\nlist(zip(*testlist))\n```\n上次讲过一点zip的功能，这里的*号为参数列表的分拆，等同于：\n```python\na = [1,2,3,4]\nb = [5,6,7,8]\nc = [9,10,11,12]\ntt = zip(a,b,c)\nresult = list(tt)\n```\n\n### 练习\n自己偿试将上次的food.py中的循环判断语句，使用列表表达式的方式进行处理\n\n\n用自己的话来说一遍：\n把最终要处理的表达式提在最前面，把循环语句放在后面；循环语句与判断语句按顺序依次排列。\n每一层中扩号都执行了一次append操作。\n\n\n\n\n## 文件迭代器\n\n### 文件读取方法大集合\n\n- 基本读取文件方法\n\n\n\n- with的用法\n\n\n\n## 生成器-generator\n\nyield\n\n\n\n## 迭代器\n","slug":"python-process-control-cycle-While-and-For","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqm0001d4rd3s5wp2lou","content":"<h1 id=\"循环（迭代器与生成器）的那点事\"><a href=\"#循环（迭代器与生成器）的那点事\" class=\"headerlink\" title=\"循环（迭代器与生成器）的那点事\"></a>循环（迭代器与生成器）的那点事</h1><h2 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h2><ul>\n<li>while 执行时的基本流程图</li>\n</ul>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/while.png\" alt=\"image\" title=\"while流程图\"></p>\n<a id=\"more\"></a>\n<blockquote>\n<p>while语句的基本格式</p>\n</blockquote>\n<p>其中<exception>为对参数或表达式取布尔值，即：bool(<exception>)，结果只有两种，True和False</exception></exception></p>\n<p>如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span> &lt;exception&gt;:</div><div class=\"line\">    &lt;suite&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">break</span>&gt;</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    &lt;suite&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>tips:</p>\n</blockquote>\n<p>讲述一下bool值：</p>\n<ol>\n<li><p>在数值上下文环境中，True被当作1, False被当作0；如True+2 =&gt; 3, int(True) =&gt; 1</p>\n</li>\n<li><p>其他类型值转换bool值时，除了’’, “”, “”””, 0, (), [], {}, None, 0.0, 0L, 0.0+0.0j, False值为Faluse，其他的都为True；例如：bool(-1) =&gt; True</p>\n</li>\n</ol>\n<hr>\n<ul>\n<li>while表达式中的break，指跳出最近的所在的循环；一般为满足条件后跳出，以防止死循环； </li>\n</ul>\n<p>举例：猜字游戏</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">guess</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        input_seed = raw_input(<span class=\"string\">\"please input the seed:\"</span>)</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            seed = int(input_seed)</div><div class=\"line\">            <span class=\"keyword\">if</span> seed == <span class=\"number\">11</span>:</div><div class=\"line\">                print(<span class=\"string\">\"congretulations to you!\"</span>)</div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                print(<span class=\"string\">\"guess again!\"</span>)</div><div class=\"line\">        <span class=\"keyword\">except</span> ValueError:</div><div class=\"line\">            print(<span class=\"string\">\"please input int type\"</span>)</div><div class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</div><div class=\"line\">            print(e)</div></pre></td></tr></table></figure>\n<ul>\n<li>else为可选部分，当控制权离开循环而又没有碰到break语句时，就会执行else中的语句；</li>\n</ul>\n<p>[注意：当第一次判断while循环条件时就不满足时，即一次循环也没有执行时，还是会执行else语句的]</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func1</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    keys = <span class=\"string\">\"goodjob\"</span></div><div class=\"line\">    <span class=\"keyword\">while</span> keys:</div><div class=\"line\">        print(keys)</div><div class=\"line\">        keys = keys[<span class=\"number\">1</span>:]</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        print(<span class=\"string\">\"done\"</span>)</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func3</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">False</span>:</div><div class=\"line\">        print(<span class=\"string\">\"false\"</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        print(<span class=\"string\">\"the end\"</span>)</div></pre></td></tr></table></figure>\n<ul>\n<li>break, continue和pass</li>\n</ul>\n<blockquote>\n<p>break: 跳出最近所在的循环 （指跳出整个循环）</p>\n</blockquote>\n<p>continue: 立即跳到循环的顶端，即跳过本次循环，执行下一次循环</p>\n<p>pass: 占位语句，无实际作用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = <span class=\"number\">10</span></div><div class=\"line\">b = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">    <span class=\"keyword\">if</span> a == <span class=\"number\">1</span>: <span class=\"keyword\">break</span></div><div class=\"line\">    b += <span class=\"number\">1</span></div><div class=\"line\">    print(<span class=\"string\">\"b=\"</span>,b)</div><div class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">100</span>: <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> a == <span class=\"number\">3</span>: <span class=\"keyword\">continue</span></div><div class=\"line\">    a -= <span class=\"number\">1</span></div><div class=\"line\">    print(<span class=\"string\">\"a=\"</span>,a)</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func2</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        <span class=\"keyword\">pass</span></div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"for\"></a>for</h2><blockquote>\n<p>for语句的基本格式和一般用法</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> &lt;target&gt; <span class=\"keyword\">in</span> &lt;object&gt;:</div><div class=\"line\">    &lt;suite1&gt;</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    &lt;suite2&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>执行方式</p>\n</blockquote>\n<p>当运行for循环时，会将序列对象中的元素逐个赋值给目标，然后为每个元素执行循环主体。</p>\n<hr>\n<ul>\n<li>for循环也有break, continue和else子句</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> &lt;target&gt; <span class=\"keyword\">in</span> &lt;object&gt;:</div><div class=\"line\">    &lt;suite1&gt;</div><div class=\"line\">    <span class=\"keyword\">if</span> &lt;test&gt;: <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> &lt;test&gt;: contiune</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    &lt;suite2&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>基本用法 </li>\n</ul>\n<blockquote>\n<p>求1-10之和，之积</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func4</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    h = <span class=\"number\">0</span></div><div class=\"line\">    j = <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> xrange(<span class=\"number\">1</span>,<span class=\"number\">11</span>):</div><div class=\"line\">        h += x</div><div class=\"line\">        j *= x</div><div class=\"line\">    <span class=\"keyword\">print</span> h, j</div></pre></td></tr></table></figure>\n<ul>\n<li>for中的元组赋值</li>\n</ul>\n<p>若对应列表中的元组进行赋值，则可看做对元组的解包运算；</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func5</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    T = [(<span class=\"number\">1</span>,<span class=\"number\">2</span>),(<span class=\"number\">3</span>,<span class=\"number\">4</span>),(<span class=\"number\">5</span>,<span class=\"number\">6</span>)]</div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> T:</div><div class=\"line\">        <span class=\"keyword\">print</span> x</div><div class=\"line\">    <span class=\"keyword\">for</span> x, y <span class=\"keyword\">in</span> T:</div><div class=\"line\">        print(x,<span class=\"string\">\"=&gt;\"</span>,y)</div></pre></td></tr></table></figure>\n<ul>\n<li>结合items操作字典</li>\n</ul>\n<p>for 循环中的元组使得用items方法来遍历字典中的键和值变得很方便，而不必再遍历键并手动索引以获取值</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func6</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    D = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>,<span class=\"string\">'b'</span>:<span class=\"number\">2</span>,<span class=\"string\">'c'</span>:<span class=\"number\">3</span>&#125;</div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> D:</div><div class=\"line\">        <span class=\"keyword\">print</span> x</div><div class=\"line\">    <span class=\"keyword\">for</span> x, y <span class=\"keyword\">in</span> D.items():</div><div class=\"line\">        print(x,<span class=\"string\">\"=&gt;\"</span>,y)</div></pre></td></tr></table></figure>\n<ul>\n<li>多重for循环</li>\n</ul>\n<p>注意：else是第二层循环中的子句，而非if的子句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func7</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    items = [<span class=\"string\">'aaa'</span>,<span class=\"number\">111</span>,(<span class=\"number\">4</span>,<span class=\"number\">5</span>),<span class=\"number\">2.01</span>]</div><div class=\"line\">    tests = [(<span class=\"number\">4</span>,<span class=\"number\">5</span>),<span class=\"number\">3.14</span>]</div><div class=\"line\">    <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> tests:</div><div class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</div><div class=\"line\">            <span class=\"keyword\">if</span> key == item:</div><div class=\"line\">                print(key, <span class=\"string\">\"was found\"</span>)</div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            print(key, <span class=\"string\">\"not found\"</span>)</div></pre></td></tr></table></figure>\n<ul>\n<li>常用range搭配，来做循环计数器和索引</li>\n</ul>\n<blockquote>\n<p>range，python2.7为生成list，python3.*与xrange合并，均变为生成可迭代的对象；</p>\n</blockquote>\n<p>简单说区别：生成可迭代对象比生成list速度更快，占用内存更小，在大数据量情况下非常有效。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">list(range(<span class=\"number\">-5</span>,<span class=\"number\">5</span>))</div><div class=\"line\">&gt;&gt; [<span class=\"number\">-5</span>, <span class=\"number\">-4</span>, <span class=\"number\">-3</span>, <span class=\"number\">-2</span>, <span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</div><div class=\"line\">list(range(<span class=\"number\">5</span>,<span class=\"number\">-5</span>,<span class=\"number\">-2</span>))</div><div class=\"line\">&gt;&gt; [<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-3</span>]</div></pre></td></tr></table></figure>\n<ul>\n<li>利用range进行索引，可以通过控制range来实现特殊的遍历，例如，可跳过一些元素</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">S = <span class=\"string\">'abcdefghijklmn'</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(S), <span class=\"number\">2</span>): <span class=\"keyword\">print</span> S[i],</div><div class=\"line\">&gt;&gt; a c e g i k m</div></pre></td></tr></table></figure>\n<blockquote>\n<p>扩展：其他的跳过元素的方式，运用切片技术，如需要可详细了解：</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> S[::<span class=\"number\">2</span>]:<span class=\"keyword\">print</span> item,</div><div class=\"line\">&gt;&gt; a c e g i k m</div></pre></td></tr></table></figure>\n<ul>\n<li>并行遍历</li>\n</ul>\n<p>对两组列表进行并行遍历</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func9</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</div><div class=\"line\">    b = [<span class=\"number\">11</span>,<span class=\"number\">22</span>,<span class=\"number\">33</span>,<span class=\"number\">44</span>]</div><div class=\"line\">    c = zip(a,b)</div><div class=\"line\">    <span class=\"keyword\">print</span> type(c)</div><div class=\"line\">    <span class=\"keyword\">print</span> c</div><div class=\"line\">    <span class=\"keyword\">for</span> m, n <span class=\"keyword\">in</span> c:</div><div class=\"line\">        <span class=\"keyword\">print</span> m,<span class=\"string\">\"+\"</span>,n,<span class=\"string\">\"=\"</span>,m+n</div><div class=\"line\">&gt;&gt;</div><div class=\"line\">&lt;type <span class=\"string\">'list'</span>&gt;</div><div class=\"line\">[(<span class=\"number\">1</span>, <span class=\"number\">11</span>), (<span class=\"number\">2</span>, <span class=\"number\">22</span>), (<span class=\"number\">3</span>, <span class=\"number\">33</span>), (<span class=\"number\">4</span>, <span class=\"number\">44</span>)]</div><div class=\"line\"><span class=\"number\">1</span> + <span class=\"number\">11</span> = <span class=\"number\">12</span></div><div class=\"line\"><span class=\"number\">2</span> + <span class=\"number\">22</span> = <span class=\"number\">24</span></div><div class=\"line\"><span class=\"number\">3</span> + <span class=\"number\">33</span> = <span class=\"number\">36</span></div><div class=\"line\"><span class=\"number\">4</span> + <span class=\"number\">44</span> = <span class=\"number\">48</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>扩展：zip和range一样，2.×时代生成为list，3.×时代均为可迭代对象；</p>\n</blockquote>\n<hr>\n<ul>\n<li>产生偏移和元素: enumerate</li>\n</ul>\n<p>有时可能会有这种需求，查看迭代的元素所在的位置，可以这样实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func10</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    a = <span class=\"string\">\"abcdefg\"</span></div><div class=\"line\">    j = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> a:</div><div class=\"line\">        <span class=\"keyword\">print</span> x, <span class=\"string\">\"offset is \"</span>,j</div><div class=\"line\">        j += <span class=\"number\">1</span></div><div class=\"line\">&gt;&gt;&gt;</div><div class=\"line\">a offset <span class=\"keyword\">is</span>  <span class=\"number\">0</span></div><div class=\"line\">b offset <span class=\"keyword\">is</span>  <span class=\"number\">1</span></div><div class=\"line\">c offset <span class=\"keyword\">is</span>  <span class=\"number\">2</span></div><div class=\"line\">d offset <span class=\"keyword\">is</span>  <span class=\"number\">3</span></div><div class=\"line\">e offset <span class=\"keyword\">is</span>  <span class=\"number\">4</span></div><div class=\"line\">f offset <span class=\"keyword\">is</span>  <span class=\"number\">5</span></div><div class=\"line\">g offset <span class=\"keyword\">is</span>  <span class=\"number\">6</span></div></pre></td></tr></table></figure>\n<p>但内置函数enumerate可以帮我们做</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func11</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    a = <span class=\"string\">\"abcdefg\"</span></div><div class=\"line\">    j = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> m, n <span class=\"keyword\">in</span> enumerate(a):</div><div class=\"line\">        <span class=\"keyword\">print</span> n, <span class=\"string\">\"offset is --\"</span>, m</div></pre></td></tr></table></figure>\n<h2 id=\"列表推导\"><a href=\"#列表推导\" class=\"headerlink\" title=\"列表推导\"></a>列表推导</h2><blockquote>\n<p>列表推导式为从序列中创建列表提供了一个简单的方法。</p>\n</blockquote>\n<h3 id=\"普通创建列表方式\"><a href=\"#普通创建列表方式\" class=\"headerlink\" title=\"普通创建列表方式\"></a>普通创建列表方式</h3><p>我们可以像这样创建一个普通的列表，像这样：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>):</div><div class=\"line\">    testlist.append(x**<span class=\"number\">2</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span> testlist</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>, <span class=\"number\">25</span>, <span class=\"number\">36</span>, <span class=\"number\">49</span>, <span class=\"number\">64</span>, <span class=\"number\">81</span>]</div></pre></td></tr></table></figure></p>\n<p>通过上面的程序可以发现，通过for循环中被创建的名为x的变量在循环完毕后，依然存在。<br>如果想完成上面的功能，且不会产生其他的副作用，可以使用lambda来创建：</p>\n<h3 id=\"通过lambda表达式来创建\"><a href=\"#通过lambda表达式来创建\" class=\"headerlink\" title=\"通过lambda表达式来创建\"></a>通过lambda表达式来创建</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = list(map(<span class=\"keyword\">lambda</span> x: x**<span class=\"number\">2</span>, range(<span class=\"number\">10</span>)))</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>, <span class=\"number\">25</span>, <span class=\"number\">36</span>, <span class=\"number\">49</span>, <span class=\"number\">64</span>, <span class=\"number\">81</span>]</div></pre></td></tr></table></figure>\n<p>还有一种更加易读的创建方式：</p>\n<h3 id=\"通过列表推导创建\"><a href=\"#通过列表推导创建\" class=\"headerlink\" title=\"通过列表推导创建\"></a>通过列表推导创建</h3><h4 id=\"基本列表推导式\"><a href=\"#基本列表推导式\" class=\"headerlink\" title=\"基本列表推导式\"></a>基本列表推导式</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = [x**<span class=\"number\">2</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>)]</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>, <span class=\"number\">25</span>, <span class=\"number\">36</span>, <span class=\"number\">49</span>, <span class=\"number\">64</span>, <span class=\"number\">81</span>]</div></pre></td></tr></table></figure>\n<p>这种方式更加易读，且创建起列表来得心应手。<br>下面我们来看看，它是如何来创建的，即它的格式是什么。</p>\n<blockquote>\n<p>列表推导式由包含一个表达式的括号组成，表达式后面跟随一个 for 子句，<br>之后可以有零或多个 for 或 if 子句。结果是一个列表，<br>由表达式依据其后面的 for 和 if 子句上下文计算而来的结果构成。</p>\n</blockquote>\n<p>等同于：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>):</div><div class=\"line\">    testlist.append(x**<span class=\"number\">2</span>)</div><div class=\"line\"></div><div class=\"line\">testlist</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt;[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>, <span class=\"number\">25</span>, <span class=\"number\">36</span>, <span class=\"number\">49</span>, <span class=\"number\">64</span>, <span class=\"number\">81</span>]</div></pre></td></tr></table></figure></p>\n<h4 id=\"带控制流程的列表推导\"><a href=\"#带控制流程的列表推导\" class=\"headerlink\" title=\"带控制流程的列表推导\"></a>带控制流程的列表推导</h4><p>来具体看个例子：<br>双重循环加判断：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[(x, y) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> [<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>] <span class=\"keyword\">if</span> x != y ]</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[(<span class=\"number\">1</span>, <span class=\"number\">3</span>), (<span class=\"number\">1</span>, <span class=\"number\">5</span>), (<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">2</span>, <span class=\"number\">1</span>), (<span class=\"number\">2</span>, <span class=\"number\">5</span>), (<span class=\"number\">3</span>, <span class=\"number\">1</span>), (<span class=\"number\">3</span>, <span class=\"number\">5</span>)]</div></pre></td></tr></table></figure></p>\n<p>如果看起来太复杂，那么变成常规的语法来看看：<br>上面的等同于：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]:</div><div class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> [<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>]:</div><div class=\"line\">        <span class=\"keyword\">if</span> x != y:</div><div class=\"line\">            testlist.append((x, y))</div><div class=\"line\"></div><div class=\"line\">testlist</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[(<span class=\"number\">1</span>, <span class=\"number\">3</span>), (<span class=\"number\">1</span>, <span class=\"number\">5</span>), (<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">2</span>, <span class=\"number\">1</span>), (<span class=\"number\">2</span>, <span class=\"number\">5</span>), (<span class=\"number\">3</span>, <span class=\"number\">1</span>), (<span class=\"number\">3</span>, <span class=\"number\">5</span>)]</div></pre></td></tr></table></figure></p>\n<p>注意下上面的for 和if语句的顺序。</p>\n<h4 id=\"嵌套的列表推导式\"><a href=\"#嵌套的列表推导式\" class=\"headerlink\" title=\"嵌套的列表推导式\"></a>嵌套的列表推导式</h4><p>列表解析中的第一个表达式可以是任何表达式，包括列表解析。</p>\n<p>再看一个例子：<br>有一个长度为4的列表组成的3×4的矩阵，如果想要交换行列，应如何操作？<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = [</div><div class=\"line\">    [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],</div><div class=\"line\">    [<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>],</div><div class=\"line\">    [<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>],</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<h5 id=\"普通方式：\"><a href=\"#普通方式：\" class=\"headerlink\" title=\"普通方式：\"></a>普通方式：</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">result = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">    bb = []</div><div class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> testlist:</div><div class=\"line\">        bb.append(y[x])</div><div class=\"line\">    result.append(bb)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[[<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>], [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">10</span>], [<span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>], [<span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">12</span>]]</div></pre></td></tr></table></figure>\n<h5 id=\"一层列表推导：\"><a href=\"#一层列表推导：\" class=\"headerlink\" title=\"一层列表推导：\"></a>一层列表推导：</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">result = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">    result.append([row[i] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> testlist])</div><div class=\"line\"></div><div class=\"line\">result</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[[<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>], [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">10</span>], [<span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>], [<span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">12</span>]]</div></pre></td></tr></table></figure>\n<h5 id=\"双层列表推导\"><a href=\"#双层列表推导\" class=\"headerlink\" title=\"双层列表推导\"></a>双层列表推导</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[[y[x] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> testlist] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>)]</div></pre></td></tr></table></figure>\n<h5 id=\"内置函数处理\"><a href=\"#内置函数处理\" class=\"headerlink\" title=\"内置函数处理\"></a>内置函数处理</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">list(zip(*testlist))</div></pre></td></tr></table></figure>\n<p>上次讲过一点zip的功能，这里的*号为参数列表的分拆，等同于：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</div><div class=\"line\">b = [<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>]</div><div class=\"line\">c = [<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>]</div><div class=\"line\">tt = zip(a,b,c)</div><div class=\"line\">result = list(tt)</div></pre></td></tr></table></figure></p>\n<h3 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h3><p>自己偿试将上次的food.py中的循环判断语句，使用列表表达式的方式进行处理</p>\n<p>用自己的话来说一遍：<br>把最终要处理的表达式提在最前面，把循环语句放在后面；循环语句与判断语句按顺序依次排列。<br>每一层中扩号都执行了一次append操作。</p>\n<h2 id=\"文件迭代器\"><a href=\"#文件迭代器\" class=\"headerlink\" title=\"文件迭代器\"></a>文件迭代器</h2><h3 id=\"文件读取方法大集合\"><a href=\"#文件读取方法大集合\" class=\"headerlink\" title=\"文件读取方法大集合\"></a>文件读取方法大集合</h3><ul>\n<li>基本读取文件方法</li>\n</ul>\n<ul>\n<li>with的用法</li>\n</ul>\n<h2 id=\"生成器-generator\"><a href=\"#生成器-generator\" class=\"headerlink\" title=\"生成器-generator\"></a>生成器-generator</h2><p>yield</p>\n<h2 id=\"迭代器\"><a href=\"#迭代器\" class=\"headerlink\" title=\"迭代器\"></a>迭代器</h2>","site":{"data":{}},"excerpt":"<h1 id=\"循环（迭代器与生成器）的那点事\"><a href=\"#循环（迭代器与生成器）的那点事\" class=\"headerlink\" title=\"循环（迭代器与生成器）的那点事\"></a>循环（迭代器与生成器）的那点事</h1><h2 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h2><ul>\n<li>while 执行时的基本流程图</li>\n</ul>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/while.png\" alt=\"image\" title=\"while流程图\"></p>","more":"<blockquote>\n<p>while语句的基本格式</p>\n</blockquote>\n<p>其中<exception>为对参数或表达式取布尔值，即：bool(<exception>)，结果只有两种，True和False</exception></exception></p>\n<p>如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">while</span> &lt;exception&gt;:</div><div class=\"line\">    &lt;suite&gt;</div><div class=\"line\">    &lt;<span class=\"keyword\">break</span>&gt;</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    &lt;suite&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>tips:</p>\n</blockquote>\n<p>讲述一下bool值：</p>\n<ol>\n<li><p>在数值上下文环境中，True被当作1, False被当作0；如True+2 =&gt; 3, int(True) =&gt; 1</p>\n</li>\n<li><p>其他类型值转换bool值时，除了’’, “”, “”””, 0, (), [], {}, None, 0.0, 0L, 0.0+0.0j, False值为Faluse，其他的都为True；例如：bool(-1) =&gt; True</p>\n</li>\n</ol>\n<hr>\n<ul>\n<li>while表达式中的break，指跳出最近的所在的循环；一般为满足条件后跳出，以防止死循环； </li>\n</ul>\n<p>举例：猜字游戏</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">guess</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        input_seed = raw_input(<span class=\"string\">\"please input the seed:\"</span>)</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            seed = int(input_seed)</div><div class=\"line\">            <span class=\"keyword\">if</span> seed == <span class=\"number\">11</span>:</div><div class=\"line\">                print(<span class=\"string\">\"congretulations to you!\"</span>)</div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                print(<span class=\"string\">\"guess again!\"</span>)</div><div class=\"line\">        <span class=\"keyword\">except</span> ValueError:</div><div class=\"line\">            print(<span class=\"string\">\"please input int type\"</span>)</div><div class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</div><div class=\"line\">            print(e)</div></pre></td></tr></table></figure>\n<ul>\n<li>else为可选部分，当控制权离开循环而又没有碰到break语句时，就会执行else中的语句；</li>\n</ul>\n<p>[注意：当第一次判断while循环条件时就不满足时，即一次循环也没有执行时，还是会执行else语句的]</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func1</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    keys = <span class=\"string\">\"goodjob\"</span></div><div class=\"line\">    <span class=\"keyword\">while</span> keys:</div><div class=\"line\">        print(keys)</div><div class=\"line\">        keys = keys[<span class=\"number\">1</span>:]</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        print(<span class=\"string\">\"done\"</span>)</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func3</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">False</span>:</div><div class=\"line\">        print(<span class=\"string\">\"false\"</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        print(<span class=\"string\">\"the end\"</span>)</div></pre></td></tr></table></figure>\n<ul>\n<li>break, continue和pass</li>\n</ul>\n<blockquote>\n<p>break: 跳出最近所在的循环 （指跳出整个循环）</p>\n</blockquote>\n<p>continue: 立即跳到循环的顶端，即跳过本次循环，执行下一次循环</p>\n<p>pass: 占位语句，无实际作用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = <span class=\"number\">10</span></div><div class=\"line\">b = <span class=\"number\">0</span></div><div class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">    <span class=\"keyword\">if</span> a == <span class=\"number\">1</span>: <span class=\"keyword\">break</span></div><div class=\"line\">    b += <span class=\"number\">1</span></div><div class=\"line\">    print(<span class=\"string\">\"b=\"</span>,b)</div><div class=\"line\">    <span class=\"keyword\">if</span> b == <span class=\"number\">100</span>: <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> a == <span class=\"number\">3</span>: <span class=\"keyword\">continue</span></div><div class=\"line\">    a -= <span class=\"number\">1</span></div><div class=\"line\">    print(<span class=\"string\">\"a=\"</span>,a)</div></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func2</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        <span class=\"keyword\">pass</span></div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"for\"><a href=\"#for\" class=\"headerlink\" title=\"for\"></a>for</h2><blockquote>\n<p>for语句的基本格式和一般用法</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> &lt;target&gt; <span class=\"keyword\">in</span> &lt;object&gt;:</div><div class=\"line\">    &lt;suite1&gt;</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    &lt;suite2&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>执行方式</p>\n</blockquote>\n<p>当运行for循环时，会将序列对象中的元素逐个赋值给目标，然后为每个元素执行循环主体。</p>\n<hr>\n<ul>\n<li>for循环也有break, continue和else子句</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> &lt;target&gt; <span class=\"keyword\">in</span> &lt;object&gt;:</div><div class=\"line\">    &lt;suite1&gt;</div><div class=\"line\">    <span class=\"keyword\">if</span> &lt;test&gt;: <span class=\"keyword\">break</span></div><div class=\"line\">    <span class=\"keyword\">if</span> &lt;test&gt;: contiune</div><div class=\"line\"><span class=\"keyword\">else</span>:</div><div class=\"line\">    &lt;suite2&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>基本用法 </li>\n</ul>\n<blockquote>\n<p>求1-10之和，之积</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func4</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    h = <span class=\"number\">0</span></div><div class=\"line\">    j = <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> xrange(<span class=\"number\">1</span>,<span class=\"number\">11</span>):</div><div class=\"line\">        h += x</div><div class=\"line\">        j *= x</div><div class=\"line\">    <span class=\"keyword\">print</span> h, j</div></pre></td></tr></table></figure>\n<ul>\n<li>for中的元组赋值</li>\n</ul>\n<p>若对应列表中的元组进行赋值，则可看做对元组的解包运算；</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func5</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    T = [(<span class=\"number\">1</span>,<span class=\"number\">2</span>),(<span class=\"number\">3</span>,<span class=\"number\">4</span>),(<span class=\"number\">5</span>,<span class=\"number\">6</span>)]</div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> T:</div><div class=\"line\">        <span class=\"keyword\">print</span> x</div><div class=\"line\">    <span class=\"keyword\">for</span> x, y <span class=\"keyword\">in</span> T:</div><div class=\"line\">        print(x,<span class=\"string\">\"=&gt;\"</span>,y)</div></pre></td></tr></table></figure>\n<ul>\n<li>结合items操作字典</li>\n</ul>\n<p>for 循环中的元组使得用items方法来遍历字典中的键和值变得很方便，而不必再遍历键并手动索引以获取值</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func6</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    D = &#123;<span class=\"string\">'a'</span>:<span class=\"number\">1</span>,<span class=\"string\">'b'</span>:<span class=\"number\">2</span>,<span class=\"string\">'c'</span>:<span class=\"number\">3</span>&#125;</div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> D:</div><div class=\"line\">        <span class=\"keyword\">print</span> x</div><div class=\"line\">    <span class=\"keyword\">for</span> x, y <span class=\"keyword\">in</span> D.items():</div><div class=\"line\">        print(x,<span class=\"string\">\"=&gt;\"</span>,y)</div></pre></td></tr></table></figure>\n<ul>\n<li>多重for循环</li>\n</ul>\n<p>注意：else是第二层循环中的子句，而非if的子句</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func7</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    items = [<span class=\"string\">'aaa'</span>,<span class=\"number\">111</span>,(<span class=\"number\">4</span>,<span class=\"number\">5</span>),<span class=\"number\">2.01</span>]</div><div class=\"line\">    tests = [(<span class=\"number\">4</span>,<span class=\"number\">5</span>),<span class=\"number\">3.14</span>]</div><div class=\"line\">    <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> tests:</div><div class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> items:</div><div class=\"line\">            <span class=\"keyword\">if</span> key == item:</div><div class=\"line\">                print(key, <span class=\"string\">\"was found\"</span>)</div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            print(key, <span class=\"string\">\"not found\"</span>)</div></pre></td></tr></table></figure>\n<ul>\n<li>常用range搭配，来做循环计数器和索引</li>\n</ul>\n<blockquote>\n<p>range，python2.7为生成list，python3.*与xrange合并，均变为生成可迭代的对象；</p>\n</blockquote>\n<p>简单说区别：生成可迭代对象比生成list速度更快，占用内存更小，在大数据量情况下非常有效。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">list(range(<span class=\"number\">-5</span>,<span class=\"number\">5</span>))</div><div class=\"line\">&gt;&gt; [<span class=\"number\">-5</span>, <span class=\"number\">-4</span>, <span class=\"number\">-3</span>, <span class=\"number\">-2</span>, <span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>]</div><div class=\"line\">list(range(<span class=\"number\">5</span>,<span class=\"number\">-5</span>,<span class=\"number\">-2</span>))</div><div class=\"line\">&gt;&gt; [<span class=\"number\">5</span>, <span class=\"number\">3</span>, <span class=\"number\">1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-3</span>]</div></pre></td></tr></table></figure>\n<ul>\n<li>利用range进行索引，可以通过控制range来实现特殊的遍历，例如，可跳过一些元素</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">S = <span class=\"string\">'abcdefghijklmn'</span></div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(S), <span class=\"number\">2</span>): <span class=\"keyword\">print</span> S[i],</div><div class=\"line\">&gt;&gt; a c e g i k m</div></pre></td></tr></table></figure>\n<blockquote>\n<p>扩展：其他的跳过元素的方式，运用切片技术，如需要可详细了解：</p>\n</blockquote>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> S[::<span class=\"number\">2</span>]:<span class=\"keyword\">print</span> item,</div><div class=\"line\">&gt;&gt; a c e g i k m</div></pre></td></tr></table></figure>\n<ul>\n<li>并行遍历</li>\n</ul>\n<p>对两组列表进行并行遍历</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func9</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</div><div class=\"line\">    b = [<span class=\"number\">11</span>,<span class=\"number\">22</span>,<span class=\"number\">33</span>,<span class=\"number\">44</span>]</div><div class=\"line\">    c = zip(a,b)</div><div class=\"line\">    <span class=\"keyword\">print</span> type(c)</div><div class=\"line\">    <span class=\"keyword\">print</span> c</div><div class=\"line\">    <span class=\"keyword\">for</span> m, n <span class=\"keyword\">in</span> c:</div><div class=\"line\">        <span class=\"keyword\">print</span> m,<span class=\"string\">\"+\"</span>,n,<span class=\"string\">\"=\"</span>,m+n</div><div class=\"line\">&gt;&gt;</div><div class=\"line\">&lt;type <span class=\"string\">'list'</span>&gt;</div><div class=\"line\">[(<span class=\"number\">1</span>, <span class=\"number\">11</span>), (<span class=\"number\">2</span>, <span class=\"number\">22</span>), (<span class=\"number\">3</span>, <span class=\"number\">33</span>), (<span class=\"number\">4</span>, <span class=\"number\">44</span>)]</div><div class=\"line\"><span class=\"number\">1</span> + <span class=\"number\">11</span> = <span class=\"number\">12</span></div><div class=\"line\"><span class=\"number\">2</span> + <span class=\"number\">22</span> = <span class=\"number\">24</span></div><div class=\"line\"><span class=\"number\">3</span> + <span class=\"number\">33</span> = <span class=\"number\">36</span></div><div class=\"line\"><span class=\"number\">4</span> + <span class=\"number\">44</span> = <span class=\"number\">48</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>扩展：zip和range一样，2.×时代生成为list，3.×时代均为可迭代对象；</p>\n</blockquote>\n<hr>\n<ul>\n<li>产生偏移和元素: enumerate</li>\n</ul>\n<p>有时可能会有这种需求，查看迭代的元素所在的位置，可以这样实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func10</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    a = <span class=\"string\">\"abcdefg\"</span></div><div class=\"line\">    j = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> a:</div><div class=\"line\">        <span class=\"keyword\">print</span> x, <span class=\"string\">\"offset is \"</span>,j</div><div class=\"line\">        j += <span class=\"number\">1</span></div><div class=\"line\">&gt;&gt;&gt;</div><div class=\"line\">a offset <span class=\"keyword\">is</span>  <span class=\"number\">0</span></div><div class=\"line\">b offset <span class=\"keyword\">is</span>  <span class=\"number\">1</span></div><div class=\"line\">c offset <span class=\"keyword\">is</span>  <span class=\"number\">2</span></div><div class=\"line\">d offset <span class=\"keyword\">is</span>  <span class=\"number\">3</span></div><div class=\"line\">e offset <span class=\"keyword\">is</span>  <span class=\"number\">4</span></div><div class=\"line\">f offset <span class=\"keyword\">is</span>  <span class=\"number\">5</span></div><div class=\"line\">g offset <span class=\"keyword\">is</span>  <span class=\"number\">6</span></div></pre></td></tr></table></figure>\n<p>但内置函数enumerate可以帮我们做</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func11</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    a = <span class=\"string\">\"abcdefg\"</span></div><div class=\"line\">    j = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> m, n <span class=\"keyword\">in</span> enumerate(a):</div><div class=\"line\">        <span class=\"keyword\">print</span> n, <span class=\"string\">\"offset is --\"</span>, m</div></pre></td></tr></table></figure>\n<h2 id=\"列表推导\"><a href=\"#列表推导\" class=\"headerlink\" title=\"列表推导\"></a>列表推导</h2><blockquote>\n<p>列表推导式为从序列中创建列表提供了一个简单的方法。</p>\n</blockquote>\n<h3 id=\"普通创建列表方式\"><a href=\"#普通创建列表方式\" class=\"headerlink\" title=\"普通创建列表方式\"></a>普通创建列表方式</h3><p>我们可以像这样创建一个普通的列表，像这样：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>):</div><div class=\"line\">    testlist.append(x**<span class=\"number\">2</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span> testlist</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>, <span class=\"number\">25</span>, <span class=\"number\">36</span>, <span class=\"number\">49</span>, <span class=\"number\">64</span>, <span class=\"number\">81</span>]</div></pre></td></tr></table></figure></p>\n<p>通过上面的程序可以发现，通过for循环中被创建的名为x的变量在循环完毕后，依然存在。<br>如果想完成上面的功能，且不会产生其他的副作用，可以使用lambda来创建：</p>\n<h3 id=\"通过lambda表达式来创建\"><a href=\"#通过lambda表达式来创建\" class=\"headerlink\" title=\"通过lambda表达式来创建\"></a>通过lambda表达式来创建</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = list(map(<span class=\"keyword\">lambda</span> x: x**<span class=\"number\">2</span>, range(<span class=\"number\">10</span>)))</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>, <span class=\"number\">25</span>, <span class=\"number\">36</span>, <span class=\"number\">49</span>, <span class=\"number\">64</span>, <span class=\"number\">81</span>]</div></pre></td></tr></table></figure>\n<p>还有一种更加易读的创建方式：</p>\n<h3 id=\"通过列表推导创建\"><a href=\"#通过列表推导创建\" class=\"headerlink\" title=\"通过列表推导创建\"></a>通过列表推导创建</h3><h4 id=\"基本列表推导式\"><a href=\"#基本列表推导式\" class=\"headerlink\" title=\"基本列表推导式\"></a>基本列表推导式</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = [x**<span class=\"number\">2</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>)]</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>, <span class=\"number\">25</span>, <span class=\"number\">36</span>, <span class=\"number\">49</span>, <span class=\"number\">64</span>, <span class=\"number\">81</span>]</div></pre></td></tr></table></figure>\n<p>这种方式更加易读，且创建起列表来得心应手。<br>下面我们来看看，它是如何来创建的，即它的格式是什么。</p>\n<blockquote>\n<p>列表推导式由包含一个表达式的括号组成，表达式后面跟随一个 for 子句，<br>之后可以有零或多个 for 或 if 子句。结果是一个列表，<br>由表达式依据其后面的 for 和 if 子句上下文计算而来的结果构成。</p>\n</blockquote>\n<p>等同于：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>):</div><div class=\"line\">    testlist.append(x**<span class=\"number\">2</span>)</div><div class=\"line\"></div><div class=\"line\">testlist</div><div class=\"line\"></div><div class=\"line\">&gt;&gt;&gt;[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>, <span class=\"number\">9</span>, <span class=\"number\">16</span>, <span class=\"number\">25</span>, <span class=\"number\">36</span>, <span class=\"number\">49</span>, <span class=\"number\">64</span>, <span class=\"number\">81</span>]</div></pre></td></tr></table></figure></p>\n<h4 id=\"带控制流程的列表推导\"><a href=\"#带控制流程的列表推导\" class=\"headerlink\" title=\"带控制流程的列表推导\"></a>带控制流程的列表推导</h4><p>来具体看个例子：<br>双重循环加判断：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[(x, y) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> [<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>] <span class=\"keyword\">if</span> x != y ]</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[(<span class=\"number\">1</span>, <span class=\"number\">3</span>), (<span class=\"number\">1</span>, <span class=\"number\">5</span>), (<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">2</span>, <span class=\"number\">1</span>), (<span class=\"number\">2</span>, <span class=\"number\">5</span>), (<span class=\"number\">3</span>, <span class=\"number\">1</span>), (<span class=\"number\">3</span>, <span class=\"number\">5</span>)]</div></pre></td></tr></table></figure></p>\n<p>如果看起来太复杂，那么变成常规的语法来看看：<br>上面的等同于：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>]:</div><div class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> [<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>]:</div><div class=\"line\">        <span class=\"keyword\">if</span> x != y:</div><div class=\"line\">            testlist.append((x, y))</div><div class=\"line\"></div><div class=\"line\">testlist</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[(<span class=\"number\">1</span>, <span class=\"number\">3</span>), (<span class=\"number\">1</span>, <span class=\"number\">5</span>), (<span class=\"number\">2</span>, <span class=\"number\">3</span>), (<span class=\"number\">2</span>, <span class=\"number\">1</span>), (<span class=\"number\">2</span>, <span class=\"number\">5</span>), (<span class=\"number\">3</span>, <span class=\"number\">1</span>), (<span class=\"number\">3</span>, <span class=\"number\">5</span>)]</div></pre></td></tr></table></figure></p>\n<p>注意下上面的for 和if语句的顺序。</p>\n<h4 id=\"嵌套的列表推导式\"><a href=\"#嵌套的列表推导式\" class=\"headerlink\" title=\"嵌套的列表推导式\"></a>嵌套的列表推导式</h4><p>列表解析中的第一个表达式可以是任何表达式，包括列表解析。</p>\n<p>再看一个例子：<br>有一个长度为4的列表组成的3×4的矩阵，如果想要交换行列，应如何操作？<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">testlist = [</div><div class=\"line\">    [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],</div><div class=\"line\">    [<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>],</div><div class=\"line\">    [<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>],</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<h5 id=\"普通方式：\"><a href=\"#普通方式：\" class=\"headerlink\" title=\"普通方式：\"></a>普通方式：</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">result = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">    bb = []</div><div class=\"line\">    <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> testlist:</div><div class=\"line\">        bb.append(y[x])</div><div class=\"line\">    result.append(bb)</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[[<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>], [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">10</span>], [<span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>], [<span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">12</span>]]</div></pre></td></tr></table></figure>\n<h5 id=\"一层列表推导：\"><a href=\"#一层列表推导：\" class=\"headerlink\" title=\"一层列表推导：\"></a>一层列表推导：</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">result = []</div><div class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</div><div class=\"line\">    result.append([row[i] <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> testlist])</div><div class=\"line\"></div><div class=\"line\">result</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>[[<span class=\"number\">1</span>, <span class=\"number\">5</span>, <span class=\"number\">9</span>], [<span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">10</span>], [<span class=\"number\">3</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>], [<span class=\"number\">4</span>, <span class=\"number\">8</span>, <span class=\"number\">12</span>]]</div></pre></td></tr></table></figure>\n<h5 id=\"双层列表推导\"><a href=\"#双层列表推导\" class=\"headerlink\" title=\"双层列表推导\"></a>双层列表推导</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[[y[x] <span class=\"keyword\">for</span> y <span class=\"keyword\">in</span> testlist] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>)]</div></pre></td></tr></table></figure>\n<h5 id=\"内置函数处理\"><a href=\"#内置函数处理\" class=\"headerlink\" title=\"内置函数处理\"></a>内置函数处理</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">list(zip(*testlist))</div></pre></td></tr></table></figure>\n<p>上次讲过一点zip的功能，这里的*号为参数列表的分拆，等同于：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">a = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]</div><div class=\"line\">b = [<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>]</div><div class=\"line\">c = [<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>]</div><div class=\"line\">tt = zip(a,b,c)</div><div class=\"line\">result = list(tt)</div></pre></td></tr></table></figure></p>\n<h3 id=\"练习\"><a href=\"#练习\" class=\"headerlink\" title=\"练习\"></a>练习</h3><p>自己偿试将上次的food.py中的循环判断语句，使用列表表达式的方式进行处理</p>\n<p>用自己的话来说一遍：<br>把最终要处理的表达式提在最前面，把循环语句放在后面；循环语句与判断语句按顺序依次排列。<br>每一层中扩号都执行了一次append操作。</p>\n<h2 id=\"文件迭代器\"><a href=\"#文件迭代器\" class=\"headerlink\" title=\"文件迭代器\"></a>文件迭代器</h2><h3 id=\"文件读取方法大集合\"><a href=\"#文件读取方法大集合\" class=\"headerlink\" title=\"文件读取方法大集合\"></a>文件读取方法大集合</h3><ul>\n<li>基本读取文件方法</li>\n</ul>\n<ul>\n<li>with的用法</li>\n</ul>\n<h2 id=\"生成器-generator\"><a href=\"#生成器-generator\" class=\"headerlink\" title=\"生成器-generator\"></a>生成器-generator</h2><p>yield</p>\n<h2 id=\"迭代器\"><a href=\"#迭代器\" class=\"headerlink\" title=\"迭代器\"></a>迭代器</h2>"},{"title":"python中的排序操作","date":"2016-12-15T10:25:11.000Z","_content":"详细介绍python中的排序方法(sort, sorted)\n====\n> 排序操作在日常工作中会经常用到，这里把python的各类排序方法来具体说明\n\n<!--more-->\n本文整理自[mozillazg's Blog](https://mozillazg.com/2013/03/python-sorting-how-to.html)\n\n英文原文为：[HowTo/Sorting](https://wiki.python.org/moin/HowTo/Sorting/)，可阅读原文\n\nPython 内置的`sort()`方法可以实现对列表的原地排序功能。\n内置的`sorted()`函数则不会修改原列表，而是生成一个经过排序的新列表。\n\n下面总结一些常用的排序方法。\n### 基本排序\n\n### 可选参数及高级用法\n\n#### keys\n\n#### Operator\n\n#### reverse\n\n#### 平衡（Stability）排序和复杂排序\n\n#### 根据多个参数无固定顺序排序\n\n### 以前的实现方法\n\n#### cmp\n\n#### 其它\n\n\n\n","source":"_posts/python中的排序操作.md","raw":"---\ntitle: python中的排序操作\ndate: 2016-12-15 18:25:11\ntags:\n- python\n- 排序\n- sort\n- sorted\ncategories:\n- python\n---\n详细介绍python中的排序方法(sort, sorted)\n====\n> 排序操作在日常工作中会经常用到，这里把python的各类排序方法来具体说明\n\n<!--more-->\n本文整理自[mozillazg's Blog](https://mozillazg.com/2013/03/python-sorting-how-to.html)\n\n英文原文为：[HowTo/Sorting](https://wiki.python.org/moin/HowTo/Sorting/)，可阅读原文\n\nPython 内置的`sort()`方法可以实现对列表的原地排序功能。\n内置的`sorted()`函数则不会修改原列表，而是生成一个经过排序的新列表。\n\n下面总结一些常用的排序方法。\n### 基本排序\n\n### 可选参数及高级用法\n\n#### keys\n\n#### Operator\n\n#### reverse\n\n#### 平衡（Stability）排序和复杂排序\n\n#### 根据多个参数无固定顺序排序\n\n### 以前的实现方法\n\n#### cmp\n\n#### 其它\n\n\n\n","slug":"python中的排序操作","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqm1001f4rd3wwcqm7on","content":"<h1 id=\"详细介绍python中的排序方法-sort-sorted\"><a href=\"#详细介绍python中的排序方法-sort-sorted\" class=\"headerlink\" title=\"详细介绍python中的排序方法(sort, sorted)\"></a>详细介绍python中的排序方法(sort, sorted)</h1><blockquote>\n<p>排序操作在日常工作中会经常用到，这里把python的各类排序方法来具体说明</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>本文整理自<a href=\"https://mozillazg.com/2013/03/python-sorting-how-to.html\" target=\"_blank\" rel=\"external\">mozillazg’s Blog</a></p>\n<p>英文原文为：<a href=\"https://wiki.python.org/moin/HowTo/Sorting/\" target=\"_blank\" rel=\"external\">HowTo/Sorting</a>，可阅读原文</p>\n<p>Python 内置的<code>sort()</code>方法可以实现对列表的原地排序功能。<br>内置的<code>sorted()</code>函数则不会修改原列表，而是生成一个经过排序的新列表。</p>\n<p>下面总结一些常用的排序方法。</p>\n<h3 id=\"基本排序\"><a href=\"#基本排序\" class=\"headerlink\" title=\"基本排序\"></a>基本排序</h3><h3 id=\"可选参数及高级用法\"><a href=\"#可选参数及高级用法\" class=\"headerlink\" title=\"可选参数及高级用法\"></a>可选参数及高级用法</h3><h4 id=\"keys\"><a href=\"#keys\" class=\"headerlink\" title=\"keys\"></a>keys</h4><h4 id=\"Operator\"><a href=\"#Operator\" class=\"headerlink\" title=\"Operator\"></a>Operator</h4><h4 id=\"reverse\"><a href=\"#reverse\" class=\"headerlink\" title=\"reverse\"></a>reverse</h4><h4 id=\"平衡（Stability）排序和复杂排序\"><a href=\"#平衡（Stability）排序和复杂排序\" class=\"headerlink\" title=\"平衡（Stability）排序和复杂排序\"></a>平衡（Stability）排序和复杂排序</h4><h4 id=\"根据多个参数无固定顺序排序\"><a href=\"#根据多个参数无固定顺序排序\" class=\"headerlink\" title=\"根据多个参数无固定顺序排序\"></a>根据多个参数无固定顺序排序</h4><h3 id=\"以前的实现方法\"><a href=\"#以前的实现方法\" class=\"headerlink\" title=\"以前的实现方法\"></a>以前的实现方法</h3><h4 id=\"cmp\"><a href=\"#cmp\" class=\"headerlink\" title=\"cmp\"></a>cmp</h4><h4 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h4>","site":{"data":{}},"excerpt":"<h1 id=\"详细介绍python中的排序方法-sort-sorted\"><a href=\"#详细介绍python中的排序方法-sort-sorted\" class=\"headerlink\" title=\"详细介绍python中的排序方法(sort, sorted)\"></a>详细介绍python中的排序方法(sort, sorted)</h1><blockquote>\n<p>排序操作在日常工作中会经常用到，这里把python的各类排序方法来具体说明</p>\n</blockquote>","more":"<p>本文整理自<a href=\"https://mozillazg.com/2013/03/python-sorting-how-to.html\" target=\"_blank\" rel=\"external\">mozillazg’s Blog</a></p>\n<p>英文原文为：<a href=\"https://wiki.python.org/moin/HowTo/Sorting/\" target=\"_blank\" rel=\"external\">HowTo/Sorting</a>，可阅读原文</p>\n<p>Python 内置的<code>sort()</code>方法可以实现对列表的原地排序功能。<br>内置的<code>sorted()</code>函数则不会修改原列表，而是生成一个经过排序的新列表。</p>\n<p>下面总结一些常用的排序方法。</p>\n<h3 id=\"基本排序\"><a href=\"#基本排序\" class=\"headerlink\" title=\"基本排序\"></a>基本排序</h3><h3 id=\"可选参数及高级用法\"><a href=\"#可选参数及高级用法\" class=\"headerlink\" title=\"可选参数及高级用法\"></a>可选参数及高级用法</h3><h4 id=\"keys\"><a href=\"#keys\" class=\"headerlink\" title=\"keys\"></a>keys</h4><h4 id=\"Operator\"><a href=\"#Operator\" class=\"headerlink\" title=\"Operator\"></a>Operator</h4><h4 id=\"reverse\"><a href=\"#reverse\" class=\"headerlink\" title=\"reverse\"></a>reverse</h4><h4 id=\"平衡（Stability）排序和复杂排序\"><a href=\"#平衡（Stability）排序和复杂排序\" class=\"headerlink\" title=\"平衡（Stability）排序和复杂排序\"></a>平衡（Stability）排序和复杂排序</h4><h4 id=\"根据多个参数无固定顺序排序\"><a href=\"#根据多个参数无固定顺序排序\" class=\"headerlink\" title=\"根据多个参数无固定顺序排序\"></a>根据多个参数无固定顺序排序</h4><h3 id=\"以前的实现方法\"><a href=\"#以前的实现方法\" class=\"headerlink\" title=\"以前的实现方法\"></a>以前的实现方法</h3><h4 id=\"cmp\"><a href=\"#cmp\" class=\"headerlink\" title=\"cmp\"></a>cmp</h4><h4 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h4>"},{"title":"python中的文件读取","date":"2016-12-10T18:40:29.000Z","_content":"\n深入python中文件读取的各类方法\n=====\n\n> 参考[文档](http://www.pythondoc.com/pythontutorial3/index.html)\n\n## 基本方法\n\n<!--more-->","source":"_posts/python中的文件读取.md","raw":"---\ntitle: python中的文件读取\ndate: 2016-12-11 02:40:29\ntags:\n- python\n- 文件\n- 读写\ncategories:\n- python\n---\n\n深入python中文件读取的各类方法\n=====\n\n> 参考[文档](http://www.pythondoc.com/pythontutorial3/index.html)\n\n## 基本方法\n\n<!--more-->","slug":"python中的文件读取","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmb001j4rd3cjkpbeb0","content":"<h1 id=\"深入python中文件读取的各类方法\"><a href=\"#深入python中文件读取的各类方法\" class=\"headerlink\" title=\"深入python中文件读取的各类方法\"></a>深入python中文件读取的各类方法</h1><blockquote>\n<p>参考<a href=\"http://www.pythondoc.com/pythontutorial3/index.html\" target=\"_blank\" rel=\"external\">文档</a></p>\n</blockquote>\n<h2 id=\"基本方法\"><a href=\"#基本方法\" class=\"headerlink\" title=\"基本方法\"></a>基本方法</h2><a id=\"more\"></a>","site":{"data":{}},"excerpt":"<h1 id=\"深入python中文件读取的各类方法\"><a href=\"#深入python中文件读取的各类方法\" class=\"headerlink\" title=\"深入python中文件读取的各类方法\"></a>深入python中文件读取的各类方法</h1><blockquote>\n<p>参考<a href=\"http://www.pythondoc.com/pythontutorial3/index.html\" target=\"_blank\" rel=\"external\">文档</a></p>\n</blockquote>\n<h2 id=\"基本方法\"><a href=\"#基本方法\" class=\"headerlink\" title=\"基本方法\"></a>基本方法</h2>","more":""},{"title":"python安装PIL模块","date":"2016-12-29T02:59:36.000Z","_content":"\npython安装PIL模块\n=====\n\n> 因为要获取图片的信息，所以需要PIL模块来解析\n\n[官方教程](http://effbot.org/imagingbook/)\n<!--more-->\n## 安装\n\n### ubuntu\n\n```shell\npip install -I --no-cache-dir -v Pillow\n```\n\n## 使用\n\n### 引用\n```python\nfrom PIL import Image\n```\n### 简单应用\n\n```python\nfrom PIL import Image\n# 打开\nima = Image.open(\"test.png\")\n# 获取尺寸\\类型等\nprint ima.format, ima.size, ima.mode\n#Out[19]: PNG (400, 300) RGB\n```\n\n### 加载网络图片\n使用StringIO模块将文件写入内存，即伪装成file\n```python\nfrom PIL import Image\nimport StringIO\nimport requests\nres = requests.get(url=\"http://car0.autoimg.cn/logo/brand/100/130549643705032710.jpg\")\nresBuff = StringIO.StringIO(res.content)\nima = Image.open(resBuff)\nima.size\n#Out[19]: (100, 100)\n```\n","source":"_posts/python安装PIL模块.md","raw":"---\ntitle: python安装PIL模块\ndate: 2016-12-29 10:59:36\ntags:\n- PIL\ncategories:\n- python\n---\n\npython安装PIL模块\n=====\n\n> 因为要获取图片的信息，所以需要PIL模块来解析\n\n[官方教程](http://effbot.org/imagingbook/)\n<!--more-->\n## 安装\n\n### ubuntu\n\n```shell\npip install -I --no-cache-dir -v Pillow\n```\n\n## 使用\n\n### 引用\n```python\nfrom PIL import Image\n```\n### 简单应用\n\n```python\nfrom PIL import Image\n# 打开\nima = Image.open(\"test.png\")\n# 获取尺寸\\类型等\nprint ima.format, ima.size, ima.mode\n#Out[19]: PNG (400, 300) RGB\n```\n\n### 加载网络图片\n使用StringIO模块将文件写入内存，即伪装成file\n```python\nfrom PIL import Image\nimport StringIO\nimport requests\nres = requests.get(url=\"http://car0.autoimg.cn/logo/brand/100/130549643705032710.jpg\")\nresBuff = StringIO.StringIO(res.content)\nima = Image.open(resBuff)\nima.size\n#Out[19]: (100, 100)\n```\n","slug":"python安装PIL模块","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmc001l4rd3gz2nz20c","content":"<h1 id=\"python安装PIL模块\"><a href=\"#python安装PIL模块\" class=\"headerlink\" title=\"python安装PIL模块\"></a>python安装PIL模块</h1><blockquote>\n<p>因为要获取图片的信息，所以需要PIL模块来解析</p>\n</blockquote>\n<p><a href=\"http://effbot.org/imagingbook/\" target=\"_blank\" rel=\"external\">官方教程</a><br><a id=\"more\"></a></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"ubuntu\"><a href=\"#ubuntu\" class=\"headerlink\" title=\"ubuntu\"></a>ubuntu</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install -I --no-cache-dir -v Pillow</div></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</div></pre></td></tr></table></figure>\n<h3 id=\"简单应用\"><a href=\"#简单应用\" class=\"headerlink\" title=\"简单应用\"></a>简单应用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"comment\"># 打开</span></div><div class=\"line\">ima = Image.open(<span class=\"string\">\"test.png\"</span>)</div><div class=\"line\"><span class=\"comment\"># 获取尺寸\\类型等</span></div><div class=\"line\"><span class=\"keyword\">print</span> ima.format, ima.size, ima.mode</div><div class=\"line\"><span class=\"comment\">#Out[19]: PNG (400, 300) RGB</span></div></pre></td></tr></table></figure>\n<h3 id=\"加载网络图片\"><a href=\"#加载网络图片\" class=\"headerlink\" title=\"加载网络图片\"></a>加载网络图片</h3><p>使用StringIO模块将文件写入内存，即伪装成file<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"keyword\">import</span> StringIO</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\">res = requests.get(url=<span class=\"string\">\"http://car0.autoimg.cn/logo/brand/100/130549643705032710.jpg\"</span>)</div><div class=\"line\">resBuff = StringIO.StringIO(res.content)</div><div class=\"line\">ima = Image.open(resBuff)</div><div class=\"line\">ima.size</div><div class=\"line\"><span class=\"comment\">#Out[19]: (100, 100)</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"python安装PIL模块\"><a href=\"#python安装PIL模块\" class=\"headerlink\" title=\"python安装PIL模块\"></a>python安装PIL模块</h1><blockquote>\n<p>因为要获取图片的信息，所以需要PIL模块来解析</p>\n</blockquote>\n<p><a href=\"http://effbot.org/imagingbook/\" target=\"_blank\" rel=\"external\">官方教程</a><br>","more":"</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"ubuntu\"><a href=\"#ubuntu\" class=\"headerlink\" title=\"ubuntu\"></a>ubuntu</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install -I --no-cache-dir -v Pillow</div></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</div></pre></td></tr></table></figure>\n<h3 id=\"简单应用\"><a href=\"#简单应用\" class=\"headerlink\" title=\"简单应用\"></a>简单应用</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"comment\"># 打开</span></div><div class=\"line\">ima = Image.open(<span class=\"string\">\"test.png\"</span>)</div><div class=\"line\"><span class=\"comment\"># 获取尺寸\\类型等</span></div><div class=\"line\"><span class=\"keyword\">print</span> ima.format, ima.size, ima.mode</div><div class=\"line\"><span class=\"comment\">#Out[19]: PNG (400, 300) RGB</span></div></pre></td></tr></table></figure>\n<h3 id=\"加载网络图片\"><a href=\"#加载网络图片\" class=\"headerlink\" title=\"加载网络图片\"></a>加载网络图片</h3><p>使用StringIO模块将文件写入内存，即伪装成file<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</div><div class=\"line\"><span class=\"keyword\">import</span> StringIO</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\">res = requests.get(url=<span class=\"string\">\"http://car0.autoimg.cn/logo/brand/100/130549643705032710.jpg\"</span>)</div><div class=\"line\">resBuff = StringIO.StringIO(res.content)</div><div class=\"line\">ima = Image.open(resBuff)</div><div class=\"line\">ima.size</div><div class=\"line\"><span class=\"comment\">#Out[19]: (100, 100)</span></div></pre></td></tr></table></figure></p>"},{"title":"python数据结构之二叉树(Binary tree)","date":"2016-12-16T02:37:36.000Z","_content":"\n数据结构之二叉树\n====\n定义，参考自：[维基百科-二叉树](https://zh.wikipedia.org/zh/二叉树)\n\n特性：二元树是一个有根树，并且每个节点最多有2个子节点。非空的二叉树，若树叶总数为 n0，分支度为2的总数为 n2，则 n0 = n2 + 1。\n\n如图：\n\n![二叉树](http://oi1wvrjc2.bkt.clouddn.com/16-12-16/27272502-file_1481867029975_ef8b.jpg)\n<!--more-->\n\n## 二叉树的实现\n\n\n\n","source":"_posts/python数据结构之二叉树-Binary-tree.md","raw":"---\ntitle: python数据结构之二叉树(Binary tree)\ndate: 2016-12-16 10:37:36\ntags:\n- python\n- 数据结构\n- 二叉树\ncategories:\n- python\n---\n\n数据结构之二叉树\n====\n定义，参考自：[维基百科-二叉树](https://zh.wikipedia.org/zh/二叉树)\n\n特性：二元树是一个有根树，并且每个节点最多有2个子节点。非空的二叉树，若树叶总数为 n0，分支度为2的总数为 n2，则 n0 = n2 + 1。\n\n如图：\n\n![二叉树](http://oi1wvrjc2.bkt.clouddn.com/16-12-16/27272502-file_1481867029975_ef8b.jpg)\n<!--more-->\n\n## 二叉树的实现\n\n\n\n","slug":"python数据结构之二叉树-Binary-tree","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqme001p4rd3n9chf72l","content":"<h1 id=\"数据结构之二叉树\"><a href=\"#数据结构之二叉树\" class=\"headerlink\" title=\"数据结构之二叉树\"></a>数据结构之二叉树</h1><p>定义，参考自：<a href=\"https://zh.wikipedia.org/zh/二叉树\" target=\"_blank\" rel=\"external\">维基百科-二叉树</a></p>\n<p>特性：二元树是一个有根树，并且每个节点最多有2个子节点。非空的二叉树，若树叶总数为 n0，分支度为2的总数为 n2，则 n0 = n2 + 1。</p>\n<p>如图：</p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/16-12-16/27272502-file_1481867029975_ef8b.jpg\" alt=\"二叉树\"><br><a id=\"more\"></a></p>\n<h2 id=\"二叉树的实现\"><a href=\"#二叉树的实现\" class=\"headerlink\" title=\"二叉树的实现\"></a>二叉树的实现</h2>","site":{"data":{}},"excerpt":"<h1 id=\"数据结构之二叉树\"><a href=\"#数据结构之二叉树\" class=\"headerlink\" title=\"数据结构之二叉树\"></a>数据结构之二叉树</h1><p>定义，参考自：<a href=\"https://zh.wikipedia.org/zh/二叉树\" target=\"_blank\" rel=\"external\">维基百科-二叉树</a></p>\n<p>特性：二元树是一个有根树，并且每个节点最多有2个子节点。非空的二叉树，若树叶总数为 n0，分支度为2的总数为 n2，则 n0 = n2 + 1。</p>\n<p>如图：</p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/16-12-16/27272502-file_1481867029975_ef8b.jpg\" alt=\"二叉树\"><br>","more":"</p>\n<h2 id=\"二叉树的实现\"><a href=\"#二叉树的实现\" class=\"headerlink\" title=\"二叉树的实现\"></a>二叉树的实现</h2>"},{"title":"python设计模式之单例模式(singleton pattern)","date":"2016-12-16T02:21:03.000Z","_content":"","source":"_posts/python设计模式之单例模式-singleton-pattern.md","raw":"---\ntitle: python设计模式之单例模式(singleton pattern)\ndate: 2016-12-16 10:21:03\ntags:\n- python\n- 单例\n- 设计模式\ncategories:\n- python\n- 设计模式\n---\n","slug":"python设计模式之单例模式-singleton-pattern","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmg001s4rd3hb9p9u5n","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"python风格指南","date":"2016-12-13T07:35:16.000Z","_content":"\n# 参考\n> 有一个好的代码风格并且遵循规范还是很有必要的，这决定了你的代码能被多少人读懂。\n\n[python风格规范](http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/)\n<!--more-->","source":"_posts/python风格指南.md","raw":"---\ntitle: python风格指南\ndate: 2016-12-13 15:35:16\ntags:\n- python\n- 风格\ncategories:\n- python\n- 标准\n---\n\n# 参考\n> 有一个好的代码风格并且遵循规范还是很有必要的，这决定了你的代码能被多少人读懂。\n\n[python风格规范](http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/)\n<!--more-->","slug":"python风格指南","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmm001x4rd3ua3xvy5v","content":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><blockquote>\n<p>有一个好的代码风格并且遵循规范还是很有必要的，这决定了你的代码能被多少人读懂。</p>\n</blockquote>\n<p><a href=\"http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/\" target=\"_blank\" rel=\"external\">python风格规范</a><br><a id=\"more\"></a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><blockquote>\n<p>有一个好的代码风格并且遵循规范还是很有必要的，这决定了你的代码能被多少人读懂。</p>\n</blockquote>\n<p><a href=\"http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/\" target=\"_blank\" rel=\"external\">python风格规范</a><br>","more":"</p>"},{"title":"sense8 & what's up~","date":"2017-05-15T06:07:53.000Z","_content":"# 每个人心中，都有自己的sense8\n\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-15/76076106-file_1494828659527_1781d.png)\n\n### 观感\n\n\n### 推荐\n独立鱼\n","source":"_posts/sense8-what-s-up.md","raw":"---\ntitle: sense8 & what's up~\ndate: 2017-05-15 14:07:53\ntags: \n- sense8\n- what's up\ncategories:\n- life\n- 精彩美剧\npermalink: sense8-in-our-heart\n\n---\n# 每个人心中，都有自己的sense8\n\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-15/76076106-file_1494828659527_1781d.png)\n\n### 观感\n\n\n### 推荐\n独立鱼\n","slug":"sense8-in-our-heart","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmt00204rd3syqg5rml","content":"<h1 id=\"每个人心中，都有自己的sense8\"><a href=\"#每个人心中，都有自己的sense8\" class=\"headerlink\" title=\"每个人心中，都有自己的sense8\"></a>每个人心中，都有自己的sense8</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-15/76076106-file_1494828659527_1781d.png\" alt=\"\"></p>\n<h3 id=\"观感\"><a href=\"#观感\" class=\"headerlink\" title=\"观感\"></a>观感</h3><h3 id=\"推荐\"><a href=\"#推荐\" class=\"headerlink\" title=\"推荐\"></a>推荐</h3><p>独立鱼</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"每个人心中，都有自己的sense8\"><a href=\"#每个人心中，都有自己的sense8\" class=\"headerlink\" title=\"每个人心中，都有自己的sense8\"></a>每个人心中，都有自己的sense8</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-15/76076106-file_1494828659527_1781d.png\" alt=\"\"></p>\n<h3 id=\"观感\"><a href=\"#观感\" class=\"headerlink\" title=\"观感\"></a>观感</h3><h3 id=\"推荐\"><a href=\"#推荐\" class=\"headerlink\" title=\"推荐\"></a>推荐</h3><p>独立鱼</p>\n"},{"title":"start-hexo","date":"2016-12-09T01:40:20.000Z","_content":"\n# HEXO\n## 环境配置\n> 系统：ubuntu 16.04 64位\n\n#### 安装git\n```bash\nsudo apt-get install git\n```\n#### 安装node\n```bash\ncurl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\n\nsudo apt-get install -y nodejs\n```\n> 不同系统安装node参见：[这里](https://nodejs.org/en/download/package-manager/)\n\n<!--more-->\n#### 安装HEXO\n```bash\nnpm install hexo-cli -g\nnpm install hexo --save\n```\n> hexo官网很详细，见[这里](https://hexo.io/zh-cn/)\n\n至此，环境基本配置完毕。\n----\n\n## 初始化\n```bash\nhexo init myblog\n```\n\n## 教程参考：\n\n> [官方教程](http://theme-next.iissnan.com/)\n> [令狐葱](http://jiji262.github.io/)\n\n> [Zhiho's Blog](http://zhiho.github.io/2015/09/29/hexo-next/)","source":"_posts/start-hexo.md","raw":"---\ntitle: start-hexo\ndate: 2016-12-09 09:40:20\ntags:\n- hexo\ncategories:\n- hexo\npermalink: start-hexo\n---\n\n# HEXO\n## 环境配置\n> 系统：ubuntu 16.04 64位\n\n#### 安装git\n```bash\nsudo apt-get install git\n```\n#### 安装node\n```bash\ncurl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\n\nsudo apt-get install -y nodejs\n```\n> 不同系统安装node参见：[这里](https://nodejs.org/en/download/package-manager/)\n\n<!--more-->\n#### 安装HEXO\n```bash\nnpm install hexo-cli -g\nnpm install hexo --save\n```\n> hexo官网很详细，见[这里](https://hexo.io/zh-cn/)\n\n至此，环境基本配置完毕。\n----\n\n## 初始化\n```bash\nhexo init myblog\n```\n\n## 教程参考：\n\n> [官方教程](http://theme-next.iissnan.com/)\n> [令狐葱](http://jiji262.github.io/)\n\n> [Zhiho's Blog](http://zhiho.github.io/2015/09/29/hexo-next/)","slug":"start-hexo","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmu00244rd3v7aiovz4","content":"<h1 id=\"HEXO\"><a href=\"#HEXO\" class=\"headerlink\" title=\"HEXO\"></a>HEXO</h1><h2 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h2><blockquote>\n<p>系统：ubuntu 16.04 64位</p>\n</blockquote>\n<h4 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure>\n<h4 id=\"安装node\"><a href=\"#安装node\" class=\"headerlink\" title=\"安装node\"></a>安装node</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</div><div class=\"line\"></div><div class=\"line\">sudo apt-get install -y nodejs</div></pre></td></tr></table></figure>\n<blockquote>\n<p>不同系统安装node参见：<a href=\"https://nodejs.org/en/download/package-manager/\" target=\"_blank\" rel=\"external\">这里</a></p>\n</blockquote>\n<a id=\"more\"></a>\n<h4 id=\"安装HEXO\"><a href=\"#安装HEXO\" class=\"headerlink\" title=\"安装HEXO\"></a>安装HEXO</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div><div class=\"line\">npm install hexo --save</div></pre></td></tr></table></figure>\n<blockquote>\n<p>hexo官网很详细，见<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">这里</a></p>\n</blockquote>\n<h2 id=\"至此，环境基本配置完毕。\"><a href=\"#至此，环境基本配置完毕。\" class=\"headerlink\" title=\"至此，环境基本配置完毕。\"></a>至此，环境基本配置完毕。</h2><h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init myblog</div></pre></td></tr></table></figure>\n<h2 id=\"教程参考：\"><a href=\"#教程参考：\" class=\"headerlink\" title=\"教程参考：\"></a>教程参考：</h2><blockquote>\n<p><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">官方教程</a><br><a href=\"http://jiji262.github.io/\" target=\"_blank\" rel=\"external\">令狐葱</a></p>\n<p><a href=\"http://zhiho.github.io/2015/09/29/hexo-next/\" target=\"_blank\" rel=\"external\">Zhiho’s Blog</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"HEXO\"><a href=\"#HEXO\" class=\"headerlink\" title=\"HEXO\"></a>HEXO</h1><h2 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h2><blockquote>\n<p>系统：ubuntu 16.04 64位</p>\n</blockquote>\n<h4 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install git</div></pre></td></tr></table></figure>\n<h4 id=\"安装node\"><a href=\"#安装node\" class=\"headerlink\" title=\"安装node\"></a>安装node</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -</div><div class=\"line\"></div><div class=\"line\">sudo apt-get install -y nodejs</div></pre></td></tr></table></figure>\n<blockquote>\n<p>不同系统安装node参见：<a href=\"https://nodejs.org/en/download/package-manager/\" target=\"_blank\" rel=\"external\">这里</a></p>\n</blockquote>","more":"<h4 id=\"安装HEXO\"><a href=\"#安装HEXO\" class=\"headerlink\" title=\"安装HEXO\"></a>安装HEXO</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-cli -g</div><div class=\"line\">npm install hexo --save</div></pre></td></tr></table></figure>\n<blockquote>\n<p>hexo官网很详细，见<a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"external\">这里</a></p>\n</blockquote>\n<h2 id=\"至此，环境基本配置完毕。\"><a href=\"#至此，环境基本配置完毕。\" class=\"headerlink\" title=\"至此，环境基本配置完毕。\"></a>至此，环境基本配置完毕。</h2><h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init myblog</div></pre></td></tr></table></figure>\n<h2 id=\"教程参考：\"><a href=\"#教程参考：\" class=\"headerlink\" title=\"教程参考：\"></a>教程参考：</h2><blockquote>\n<p><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">官方教程</a><br><a href=\"http://jiji262.github.io/\" target=\"_blank\" rel=\"external\">令狐葱</a></p>\n<p><a href=\"http://zhiho.github.io/2015/09/29/hexo-next/\" target=\"_blank\" rel=\"external\">Zhiho’s Blog</a></p>\n</blockquote>"},{"title":"talking about python unittest","date":"2016-12-09T10:09:04.000Z","_content":"# python unittest 基础教程分享\n\n<!--more-->","source":"_posts/talking-about-python-unittest.md","raw":"---\ntitle: talking about python unittest\ndate: 2016-12-09 18:09:04\ntags: python unittest test\ncategories:\n- python\n---\n# python unittest 基础教程分享\n\n<!--more-->","slug":"talking-about-python-unittest","published":1,"updated":"2017-11-06T06:03:46.599Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmw00284rd339kau0s6","content":"<h1 id=\"python-unittest-基础教程分享\"><a href=\"#python-unittest-基础教程分享\" class=\"headerlink\" title=\"python unittest 基础教程分享\"></a>python unittest 基础教程分享</h1><a id=\"more\"></a>","site":{"data":{}},"excerpt":"<h1 id=\"python-unittest-基础教程分享\"><a href=\"#python-unittest-基础教程分享\" class=\"headerlink\" title=\"python unittest 基础教程分享\"></a>python unittest 基础教程分享</h1>","more":""},{"title":"ubuntu 常用工具","date":"2016-12-28T06:16:15.000Z","_content":"\nUbuntu常用工具\n=====\n> 收集了ubuntu下常用的小工具\n\n<!--more-->\n### 版本控制软件GUI版\n\n#### 安装\n> 按照wiki安装，rabbitvcs\n```shell\nsudo apt-add-repository universe\nsudo apt-get update\nsudo apt-get install rabbitvcs-nautilus\n```\n\n[WIKI](http://wiki.rabbitvcs.org/wiki/install/ubuntu)\n\n#### 安装完毕重启\n```shell\nnautilus -q\n```\n\n#### 安装完成效果图\n![效果图1](http://oi1wvrjc2.bkt.clouddn.com/16-12-28/59784456-file_1482905990308_3716.png)\n\n\n> 以下引用\n[旷世的忧伤博客](http://kuanghy.github.io/2016/09/01/linux-softwares)\n\n### Transmission\nTransmission 是一种 BitTorrent 客户端，特点是一个跨平台的后端和其上的简洁的用户界面。BT 种子一种“.torrent”文件，装有BT（BitTorrent）下载必须的文件信息，作用相当于HTTP下载里的URL链接\n\n### gimp\n图形处理\n\n### steam\n游戏客户端\n\n### bleachbit\n系统记录清理工具\n\n### xdman\nXtreme Download Manager, 下载管理器\n\n### preload\nPreload 是一个自适应预读守护进程。它监控用户运行的应用程序，并且分析这些数据，预测用户可能运行的程序，并读取这些程序的二进制文件及其依赖文件到系统内存，以达到加速启动的时间。Preload 将在后台静静运行。如果你想改变 Preload 的行为，你可以编辑它的配置文件 /etc/preload.conf。\n\n### apt-fast\nApt-fast 是一款替代 apt-get 提升下载速度的软件，安装软件时，通过增加线程使下载软件速度加快。 Apt-fast 已经更新到1.6.4版本，引入配置“对话框”，在其安装过程中，一步步对话框选择设置，每个用户的配置选项，从而改善和清晰化 Apt-fast的初始配置过程。\n\n### AppGrid\n一个优秀的Ubuntu软件中心替代品\n\n### diffuse\n文件比较工具\n\n### ReText\nmarkdown 文档编辑器\n\n### 配置数学公式：\n有时候需要在文档中添加一些数学公式，比如时间复杂度什么的O(N2)，其实，我发现Github官网的页面是不支持的，不知道是不是Github有自己的数学公式输入格式。\n\n在Retext下想使用，首先应该先安装MathJax\n\n`sudo apt-get install libjs-mathjax`\n安装好后，打开ReText的设置界面，在Markdown extensions框里添加字段：mathjax，重启ReText，输入公式，如 N32 ，OK！\n\n添加语法高亮：\nReText支持语法高亮，但需要在在Markdown extensions框里添加字段：codehilite，同时，需要下载安装高亮支持模块python-pygments：\n\n`sudo apt-get install python-pygments`\n这个方法来自与ReText的扩展说明, 文档里的扩展功能添加进ReText的Markdown extensions时，都必须该成小写字母，否则无效！同时，两个扩展之间用英文逗号分割。\n\n### Remarkable\nRemarkable, Linux 下的 markdown 文档编辑器。\n\n### brackets\nWeb 前端编辑器\n\n### terminology\n万能的终端工具\n\n### terminator\n一个不错的终端工具\n\n### terminix\nGTK3 终端模拟器\n\n### TermKit\nTermKit 是由 Steven Wittens 为 MacOS X 编写的一个很有趣的项目，可以称之为下一代的富媒体终端。\n\n### Tmux\nTmux 是一个优秀的终端复用软件。使用它最直观的好处就是，通过一个终端登录远程主机并运行tmux后，在其中可以开启多个控制台而无需再“浪费”多余的终端来连接这台远程主机。\n\n### nmon\nNmon（nigel’s monitor 的简写）是一个显示系统性能信息的工具,可以显示与 netwrok，cpu, memory 和磁盘使用情况的信息。\n\n### ncdu\n是一个支持光标的 du 程序，这个命令是用来分析各种目录占用的磁盘空间。按 n 则通过文件名来排序，按 s 则按文件大小来排序（默认的）。\n\n### dstat\n一种灵活的组合工具，它可用于监控内存，进程，网络和磁盘性能，它可以用来取代 ifstat, iostat, dmstat 等。\n\n### slurm\n一个网卡带宽监控命令行实用程序，它会自动生成 ASCII 图形输出。安装:\n\n`apt-get install slurm`\n使用：\n\n`slurm -i <网卡名称>`\n\n### ranwhen.py\n一种基于 Python 的终端工具，它可以用来以图形方式显示系统活动状态\n\n### plymouth-manager\n修改开机登录界面。可以美化你Ubuntu的启动主题Plymouth，下载：https://launchpad.net/plymouth-manager/+download\n\n### kazam\n屏幕录制软件\n\n### firebug\n火狐插件，Web开发者调试工具\n\n### okular\n阅读器，可用于阅读pdf，也可用于阅读epub电子书。\n\n### ranger\n基于终端的文件浏览器\n\n### lolcat\n`输入彩色文本，例如 cat “hello world”\tlolcat`\n\n### cmatrix\n终端打印矩阵\n\n### Weather Indicator Applet (天气预报)\n安装命令：\n\n`sudo apt-get install indicator-weather`\n\n### ClassicMenu\n经典的 GNOME2 菜单, 安装命令：\n\n`sudo apt-add-repository ppa:diesch/testing`\n\n`sudo apt-get update`\n\n`sudo apt-get install classicmenu-indicator`\n\n### Caffeine（咖啡因）\n你怎样确保你的电脑不会在放一部精彩的电影中途突然休眠呢？Caffeine 会帮助你解决这个问题。当然，你并不需要为你的电脑泡一杯咖啡。你只需要安装一个轻量级的指示器 —— Caffeine。只要当前你是全屏模式，它就会禁用你的屏幕保护程序、锁屏程序，让你的电脑不会因为没有在任务中而进入睡眠模式。\n\n`sudo add-apt-repository ppa:caffeine-developers/ppa`\n\n`sudo apt-get update`\n\n`sudo apt-get install caffeine`\n\n`sudo apt-get install libappindicator3-1 gir1.2-appindicator3-0.1`\n\n### gparted\n格式化、分区工具\n\n### cheat\nLinux 命令备忘清单，https://github.com/chrisallenlane/cheat\n\n### htop\nhtop 是一个更加先进的交互式的实时监控工具。htop 与 top 命令非常相似，但是他有一些非常丰富的功能，如用户友好界面管理进程、快捷键、横向和纵向进程等更多的。htop 是一个第三方工具并不包括在 Linux 系统中，你需要使用包管理工具进行安装。\n\n### Tickeys\nTickeys是一款很强大的键盘音效软件。Tickeys 自带多种声音效果方案，有打字机、冒泡、机械键盘、剑气等。每天都听着键盘声音是不是很烦闷，现在有了这款神器你就可以瞬间帮助自己的键盘加上逼格特效。https://github.com/BillBillBillBill/Tickeys-linux/\n\n### festival\n语音合成软件,安装使用参考:https://linuxtoy.org/archives/festival_on_ubuntu.html\n\n### autossh\n自动重连 ssh\n\n### SysPeek\n系统指示器, 安装：\n\n`sudo add-apt-repository ppa:nilarimogard/webupd8`\n`sudo apt-get update`\n`sudo apt-get install syspeek`\n\n### lnav\nlnav 工具是在终端界面看日志的神器\n\n### proxychains\n命令行翻墙代理， 配置文件 /etc/proxychains.conf\n\n### Touchpad Indicator (触摸板开关)\n`sudo add-apt-repository ppa:atareao/atareao`\n`sudo apt-get update`\n`sudo apt-get install touchpad-indicator`\n\n### Keylock Application Indicator （显示大写键状态）\n`sudo add-apt-repository ppa:tsbarnes/indicator-keylock`\n`sudo apt-get update`\n`sudo apt-get install indicator-keylock`\n\n### apparmor\nLinux 进程权限控制\n\n### Fabric\nFabric 是一个用 Python 编写的命令行工具库，它可以帮助系统管理员高效地执行某些任务，比如通过 SSH 到多台机器上执行某些命令，远程布署应用等。\n\n### Dia\n跨平台的流程图绘制程序, 基于GTK的图形（diagram）绘制程序，适用于Linux, Unix和Windows, 下载：https://sourceforge.net/projects/dia-installer/\n\n### Taskwarrior\nTASKWARRIOR 是一个很棒的命令行 TODO 工具。Ubuntu安装：\n\n`sudo apt-get install task`\nMac 安装：\n\n`brew install task`\n\n### Python Sphinx\nSphinx 是一个非常棒的文档的工具，它采用 reStructuredText 标记语言编写文档，然后可以将文档导出成 html、pdf 等格式。中文参考文档。\n\n安装：\n\n`pip install sphinx`\n\n### ACK\nACK 比 grep 更好的搜索工具。\n\n### Electron\nElectron 框架的前身是 Atom Shell，可以让你写使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用程序。它是基于io.js 和 Chromium 开源项目，并用于在 Atom 编辑器中。Electron 是开源的，由 GitHub 维护，有一个活跃的社区。最重要的是，Electron 应用服务构建和运行在 Mac，Windows 和 Linux。\n\n### Speedtest\n带宽测试工具, 安装:\n\n`pip install speedtest-cli`\n也可以直接访问网页版: Speedtest.net\n\n### paste\n将文件按行并列显示：\n\n`paste test.txt test2.txt test3.txt`\n\n### expand\n将文件的制表符（TAB）转换为空白字符（space），将结果显示到标准输出设备。-t 参数可以指定制表符的参数。示例：\n\n`expand -t 4 test.txt > test1.txt`\n\n### 抓包工具\ncharles\nFiddler\nwireshark\nmitmproxy\n\n### pwgen\n一个生成随机、无特殊含义但可以正常拼读的密码。安装：\n\n`sudo apt-get install pwgen`\n生成14位不含大写字母的密码：\n\n`pwgen -A 14`\n\n参数：\n```bash\n-c 或 --capitalize 生成的密码中至少包含一个大写字母\n-A 或 --no-capitalize 生成的密码中不含大写字母\n-n 或 --numerals 生成的密码中至少包含一个数字\n-0 或 --no-numerals 生成的密码中不含数字\n-y 或 --symbols 生成的密码中至少包含一个特殊字符\n-s 或 --secure 生成一个完全随机的密码\n-B 或 --ambiguous 生成的密码中不含易混淆字符\n-h 或 --help 输出帮助信息\n-H 或 --sha1=path/to/file[#seed] 使用指定文件的 sha1 哈希值作为随机生成器\n-C 按列输出生成的密码\n-1 不按列输出生成的密码\n-v 或 --no-vowels 不使用任何元音，以免意外生成让人讨厌的单词\n```\n\n### Zeal\nZeal 是一个简单的离线 API 文档浏览器，仿照 Dash（一个 OSX 应用） 写成，能在 Linux 和 Windows 上使用。\nLinux 下安装和使用可以参考: http://xmodulo.com/browse-search-api-documentation-offline-linux.html\n\n### ack\nAck 是比 grep 更快的文本搜索工具\n\n### Ag\nAg 是比 grep、ack 更快的搜索工具\n\n### ccat\nCcat 是 cat 的着色版本，可以对输出文本进行语法高亮\n\n### Insomnia\nInsomnia 跨平台的、免费的 REST 客户端","source":"_posts/ubuntu-常用工具.md","raw":"---\ntitle: ubuntu 常用工具\ndate: 2016-12-28 14:16:15\ntags:\n- ubuntu\n- 常用工具\ncategories:\n- linux\npermalink: ubuntu-commonly-used-tools\n---\n\nUbuntu常用工具\n=====\n> 收集了ubuntu下常用的小工具\n\n<!--more-->\n### 版本控制软件GUI版\n\n#### 安装\n> 按照wiki安装，rabbitvcs\n```shell\nsudo apt-add-repository universe\nsudo apt-get update\nsudo apt-get install rabbitvcs-nautilus\n```\n\n[WIKI](http://wiki.rabbitvcs.org/wiki/install/ubuntu)\n\n#### 安装完毕重启\n```shell\nnautilus -q\n```\n\n#### 安装完成效果图\n![效果图1](http://oi1wvrjc2.bkt.clouddn.com/16-12-28/59784456-file_1482905990308_3716.png)\n\n\n> 以下引用\n[旷世的忧伤博客](http://kuanghy.github.io/2016/09/01/linux-softwares)\n\n### Transmission\nTransmission 是一种 BitTorrent 客户端，特点是一个跨平台的后端和其上的简洁的用户界面。BT 种子一种“.torrent”文件，装有BT（BitTorrent）下载必须的文件信息，作用相当于HTTP下载里的URL链接\n\n### gimp\n图形处理\n\n### steam\n游戏客户端\n\n### bleachbit\n系统记录清理工具\n\n### xdman\nXtreme Download Manager, 下载管理器\n\n### preload\nPreload 是一个自适应预读守护进程。它监控用户运行的应用程序，并且分析这些数据，预测用户可能运行的程序，并读取这些程序的二进制文件及其依赖文件到系统内存，以达到加速启动的时间。Preload 将在后台静静运行。如果你想改变 Preload 的行为，你可以编辑它的配置文件 /etc/preload.conf。\n\n### apt-fast\nApt-fast 是一款替代 apt-get 提升下载速度的软件，安装软件时，通过增加线程使下载软件速度加快。 Apt-fast 已经更新到1.6.4版本，引入配置“对话框”，在其安装过程中，一步步对话框选择设置，每个用户的配置选项，从而改善和清晰化 Apt-fast的初始配置过程。\n\n### AppGrid\n一个优秀的Ubuntu软件中心替代品\n\n### diffuse\n文件比较工具\n\n### ReText\nmarkdown 文档编辑器\n\n### 配置数学公式：\n有时候需要在文档中添加一些数学公式，比如时间复杂度什么的O(N2)，其实，我发现Github官网的页面是不支持的，不知道是不是Github有自己的数学公式输入格式。\n\n在Retext下想使用，首先应该先安装MathJax\n\n`sudo apt-get install libjs-mathjax`\n安装好后，打开ReText的设置界面，在Markdown extensions框里添加字段：mathjax，重启ReText，输入公式，如 N32 ，OK！\n\n添加语法高亮：\nReText支持语法高亮，但需要在在Markdown extensions框里添加字段：codehilite，同时，需要下载安装高亮支持模块python-pygments：\n\n`sudo apt-get install python-pygments`\n这个方法来自与ReText的扩展说明, 文档里的扩展功能添加进ReText的Markdown extensions时，都必须该成小写字母，否则无效！同时，两个扩展之间用英文逗号分割。\n\n### Remarkable\nRemarkable, Linux 下的 markdown 文档编辑器。\n\n### brackets\nWeb 前端编辑器\n\n### terminology\n万能的终端工具\n\n### terminator\n一个不错的终端工具\n\n### terminix\nGTK3 终端模拟器\n\n### TermKit\nTermKit 是由 Steven Wittens 为 MacOS X 编写的一个很有趣的项目，可以称之为下一代的富媒体终端。\n\n### Tmux\nTmux 是一个优秀的终端复用软件。使用它最直观的好处就是，通过一个终端登录远程主机并运行tmux后，在其中可以开启多个控制台而无需再“浪费”多余的终端来连接这台远程主机。\n\n### nmon\nNmon（nigel’s monitor 的简写）是一个显示系统性能信息的工具,可以显示与 netwrok，cpu, memory 和磁盘使用情况的信息。\n\n### ncdu\n是一个支持光标的 du 程序，这个命令是用来分析各种目录占用的磁盘空间。按 n 则通过文件名来排序，按 s 则按文件大小来排序（默认的）。\n\n### dstat\n一种灵活的组合工具，它可用于监控内存，进程，网络和磁盘性能，它可以用来取代 ifstat, iostat, dmstat 等。\n\n### slurm\n一个网卡带宽监控命令行实用程序，它会自动生成 ASCII 图形输出。安装:\n\n`apt-get install slurm`\n使用：\n\n`slurm -i <网卡名称>`\n\n### ranwhen.py\n一种基于 Python 的终端工具，它可以用来以图形方式显示系统活动状态\n\n### plymouth-manager\n修改开机登录界面。可以美化你Ubuntu的启动主题Plymouth，下载：https://launchpad.net/plymouth-manager/+download\n\n### kazam\n屏幕录制软件\n\n### firebug\n火狐插件，Web开发者调试工具\n\n### okular\n阅读器，可用于阅读pdf，也可用于阅读epub电子书。\n\n### ranger\n基于终端的文件浏览器\n\n### lolcat\n`输入彩色文本，例如 cat “hello world”\tlolcat`\n\n### cmatrix\n终端打印矩阵\n\n### Weather Indicator Applet (天气预报)\n安装命令：\n\n`sudo apt-get install indicator-weather`\n\n### ClassicMenu\n经典的 GNOME2 菜单, 安装命令：\n\n`sudo apt-add-repository ppa:diesch/testing`\n\n`sudo apt-get update`\n\n`sudo apt-get install classicmenu-indicator`\n\n### Caffeine（咖啡因）\n你怎样确保你的电脑不会在放一部精彩的电影中途突然休眠呢？Caffeine 会帮助你解决这个问题。当然，你并不需要为你的电脑泡一杯咖啡。你只需要安装一个轻量级的指示器 —— Caffeine。只要当前你是全屏模式，它就会禁用你的屏幕保护程序、锁屏程序，让你的电脑不会因为没有在任务中而进入睡眠模式。\n\n`sudo add-apt-repository ppa:caffeine-developers/ppa`\n\n`sudo apt-get update`\n\n`sudo apt-get install caffeine`\n\n`sudo apt-get install libappindicator3-1 gir1.2-appindicator3-0.1`\n\n### gparted\n格式化、分区工具\n\n### cheat\nLinux 命令备忘清单，https://github.com/chrisallenlane/cheat\n\n### htop\nhtop 是一个更加先进的交互式的实时监控工具。htop 与 top 命令非常相似，但是他有一些非常丰富的功能，如用户友好界面管理进程、快捷键、横向和纵向进程等更多的。htop 是一个第三方工具并不包括在 Linux 系统中，你需要使用包管理工具进行安装。\n\n### Tickeys\nTickeys是一款很强大的键盘音效软件。Tickeys 自带多种声音效果方案，有打字机、冒泡、机械键盘、剑气等。每天都听着键盘声音是不是很烦闷，现在有了这款神器你就可以瞬间帮助自己的键盘加上逼格特效。https://github.com/BillBillBillBill/Tickeys-linux/\n\n### festival\n语音合成软件,安装使用参考:https://linuxtoy.org/archives/festival_on_ubuntu.html\n\n### autossh\n自动重连 ssh\n\n### SysPeek\n系统指示器, 安装：\n\n`sudo add-apt-repository ppa:nilarimogard/webupd8`\n`sudo apt-get update`\n`sudo apt-get install syspeek`\n\n### lnav\nlnav 工具是在终端界面看日志的神器\n\n### proxychains\n命令行翻墙代理， 配置文件 /etc/proxychains.conf\n\n### Touchpad Indicator (触摸板开关)\n`sudo add-apt-repository ppa:atareao/atareao`\n`sudo apt-get update`\n`sudo apt-get install touchpad-indicator`\n\n### Keylock Application Indicator （显示大写键状态）\n`sudo add-apt-repository ppa:tsbarnes/indicator-keylock`\n`sudo apt-get update`\n`sudo apt-get install indicator-keylock`\n\n### apparmor\nLinux 进程权限控制\n\n### Fabric\nFabric 是一个用 Python 编写的命令行工具库，它可以帮助系统管理员高效地执行某些任务，比如通过 SSH 到多台机器上执行某些命令，远程布署应用等。\n\n### Dia\n跨平台的流程图绘制程序, 基于GTK的图形（diagram）绘制程序，适用于Linux, Unix和Windows, 下载：https://sourceforge.net/projects/dia-installer/\n\n### Taskwarrior\nTASKWARRIOR 是一个很棒的命令行 TODO 工具。Ubuntu安装：\n\n`sudo apt-get install task`\nMac 安装：\n\n`brew install task`\n\n### Python Sphinx\nSphinx 是一个非常棒的文档的工具，它采用 reStructuredText 标记语言编写文档，然后可以将文档导出成 html、pdf 等格式。中文参考文档。\n\n安装：\n\n`pip install sphinx`\n\n### ACK\nACK 比 grep 更好的搜索工具。\n\n### Electron\nElectron 框架的前身是 Atom Shell，可以让你写使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用程序。它是基于io.js 和 Chromium 开源项目，并用于在 Atom 编辑器中。Electron 是开源的，由 GitHub 维护，有一个活跃的社区。最重要的是，Electron 应用服务构建和运行在 Mac，Windows 和 Linux。\n\n### Speedtest\n带宽测试工具, 安装:\n\n`pip install speedtest-cli`\n也可以直接访问网页版: Speedtest.net\n\n### paste\n将文件按行并列显示：\n\n`paste test.txt test2.txt test3.txt`\n\n### expand\n将文件的制表符（TAB）转换为空白字符（space），将结果显示到标准输出设备。-t 参数可以指定制表符的参数。示例：\n\n`expand -t 4 test.txt > test1.txt`\n\n### 抓包工具\ncharles\nFiddler\nwireshark\nmitmproxy\n\n### pwgen\n一个生成随机、无特殊含义但可以正常拼读的密码。安装：\n\n`sudo apt-get install pwgen`\n生成14位不含大写字母的密码：\n\n`pwgen -A 14`\n\n参数：\n```bash\n-c 或 --capitalize 生成的密码中至少包含一个大写字母\n-A 或 --no-capitalize 生成的密码中不含大写字母\n-n 或 --numerals 生成的密码中至少包含一个数字\n-0 或 --no-numerals 生成的密码中不含数字\n-y 或 --symbols 生成的密码中至少包含一个特殊字符\n-s 或 --secure 生成一个完全随机的密码\n-B 或 --ambiguous 生成的密码中不含易混淆字符\n-h 或 --help 输出帮助信息\n-H 或 --sha1=path/to/file[#seed] 使用指定文件的 sha1 哈希值作为随机生成器\n-C 按列输出生成的密码\n-1 不按列输出生成的密码\n-v 或 --no-vowels 不使用任何元音，以免意外生成让人讨厌的单词\n```\n\n### Zeal\nZeal 是一个简单的离线 API 文档浏览器，仿照 Dash（一个 OSX 应用） 写成，能在 Linux 和 Windows 上使用。\nLinux 下安装和使用可以参考: http://xmodulo.com/browse-search-api-documentation-offline-linux.html\n\n### ack\nAck 是比 grep 更快的文本搜索工具\n\n### Ag\nAg 是比 grep、ack 更快的搜索工具\n\n### ccat\nCcat 是 cat 的着色版本，可以对输出文本进行语法高亮\n\n### Insomnia\nInsomnia 跨平台的、免费的 REST 客户端","slug":"ubuntu-commonly-used-tools","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmx002c4rd3f6aa0yxq","content":"<h1 id=\"Ubuntu常用工具\"><a href=\"#Ubuntu常用工具\" class=\"headerlink\" title=\"Ubuntu常用工具\"></a>Ubuntu常用工具</h1><blockquote>\n<p>收集了ubuntu下常用的小工具</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"版本控制软件GUI版\"><a href=\"#版本控制软件GUI版\" class=\"headerlink\" title=\"版本控制软件GUI版\"></a>版本控制软件GUI版</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><blockquote>\n<p>按照wiki安装，rabbitvcs<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-add-repository universe</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install rabbitvcs-nautilus</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p><a href=\"http://wiki.rabbitvcs.org/wiki/install/ubuntu\" target=\"_blank\" rel=\"external\">WIKI</a></p>\n<h4 id=\"安装完毕重启\"><a href=\"#安装完毕重启\" class=\"headerlink\" title=\"安装完毕重启\"></a>安装完毕重启</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nautilus -q</div></pre></td></tr></table></figure>\n<h4 id=\"安装完成效果图\"><a href=\"#安装完成效果图\" class=\"headerlink\" title=\"安装完成效果图\"></a>安装完成效果图</h4><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/16-12-28/59784456-file_1482905990308_3716.png\" alt=\"效果图1\"></p>\n<blockquote>\n<p>以下引用<br><a href=\"http://kuanghy.github.io/2016/09/01/linux-softwares\" target=\"_blank\" rel=\"external\">旷世的忧伤博客</a></p>\n</blockquote>\n<h3 id=\"Transmission\"><a href=\"#Transmission\" class=\"headerlink\" title=\"Transmission\"></a>Transmission</h3><p>Transmission 是一种 BitTorrent 客户端，特点是一个跨平台的后端和其上的简洁的用户界面。BT 种子一种“.torrent”文件，装有BT（BitTorrent）下载必须的文件信息，作用相当于HTTP下载里的URL链接</p>\n<h3 id=\"gimp\"><a href=\"#gimp\" class=\"headerlink\" title=\"gimp\"></a>gimp</h3><p>图形处理</p>\n<h3 id=\"steam\"><a href=\"#steam\" class=\"headerlink\" title=\"steam\"></a>steam</h3><p>游戏客户端</p>\n<h3 id=\"bleachbit\"><a href=\"#bleachbit\" class=\"headerlink\" title=\"bleachbit\"></a>bleachbit</h3><p>系统记录清理工具</p>\n<h3 id=\"xdman\"><a href=\"#xdman\" class=\"headerlink\" title=\"xdman\"></a>xdman</h3><p>Xtreme Download Manager, 下载管理器</p>\n<h3 id=\"preload\"><a href=\"#preload\" class=\"headerlink\" title=\"preload\"></a>preload</h3><p>Preload 是一个自适应预读守护进程。它监控用户运行的应用程序，并且分析这些数据，预测用户可能运行的程序，并读取这些程序的二进制文件及其依赖文件到系统内存，以达到加速启动的时间。Preload 将在后台静静运行。如果你想改变 Preload 的行为，你可以编辑它的配置文件 /etc/preload.conf。</p>\n<h3 id=\"apt-fast\"><a href=\"#apt-fast\" class=\"headerlink\" title=\"apt-fast\"></a>apt-fast</h3><p>Apt-fast 是一款替代 apt-get 提升下载速度的软件，安装软件时，通过增加线程使下载软件速度加快。 Apt-fast 已经更新到1.6.4版本，引入配置“对话框”，在其安装过程中，一步步对话框选择设置，每个用户的配置选项，从而改善和清晰化 Apt-fast的初始配置过程。</p>\n<h3 id=\"AppGrid\"><a href=\"#AppGrid\" class=\"headerlink\" title=\"AppGrid\"></a>AppGrid</h3><p>一个优秀的Ubuntu软件中心替代品</p>\n<h3 id=\"diffuse\"><a href=\"#diffuse\" class=\"headerlink\" title=\"diffuse\"></a>diffuse</h3><p>文件比较工具</p>\n<h3 id=\"ReText\"><a href=\"#ReText\" class=\"headerlink\" title=\"ReText\"></a>ReText</h3><p>markdown 文档编辑器</p>\n<h3 id=\"配置数学公式：\"><a href=\"#配置数学公式：\" class=\"headerlink\" title=\"配置数学公式：\"></a>配置数学公式：</h3><p>有时候需要在文档中添加一些数学公式，比如时间复杂度什么的O(N2)，其实，我发现Github官网的页面是不支持的，不知道是不是Github有自己的数学公式输入格式。</p>\n<p>在Retext下想使用，首先应该先安装MathJax</p>\n<p><code>sudo apt-get install libjs-mathjax</code><br>安装好后，打开ReText的设置界面，在Markdown extensions框里添加字段：mathjax，重启ReText，输入公式，如 N32 ，OK！</p>\n<p>添加语法高亮：<br>ReText支持语法高亮，但需要在在Markdown extensions框里添加字段：codehilite，同时，需要下载安装高亮支持模块python-pygments：</p>\n<p><code>sudo apt-get install python-pygments</code><br>这个方法来自与ReText的扩展说明, 文档里的扩展功能添加进ReText的Markdown extensions时，都必须该成小写字母，否则无效！同时，两个扩展之间用英文逗号分割。</p>\n<h3 id=\"Remarkable\"><a href=\"#Remarkable\" class=\"headerlink\" title=\"Remarkable\"></a>Remarkable</h3><p>Remarkable, Linux 下的 markdown 文档编辑器。</p>\n<h3 id=\"brackets\"><a href=\"#brackets\" class=\"headerlink\" title=\"brackets\"></a>brackets</h3><p>Web 前端编辑器</p>\n<h3 id=\"terminology\"><a href=\"#terminology\" class=\"headerlink\" title=\"terminology\"></a>terminology</h3><p>万能的终端工具</p>\n<h3 id=\"terminator\"><a href=\"#terminator\" class=\"headerlink\" title=\"terminator\"></a>terminator</h3><p>一个不错的终端工具</p>\n<h3 id=\"terminix\"><a href=\"#terminix\" class=\"headerlink\" title=\"terminix\"></a>terminix</h3><p>GTK3 终端模拟器</p>\n<h3 id=\"TermKit\"><a href=\"#TermKit\" class=\"headerlink\" title=\"TermKit\"></a>TermKit</h3><p>TermKit 是由 Steven Wittens 为 MacOS X 编写的一个很有趣的项目，可以称之为下一代的富媒体终端。</p>\n<h3 id=\"Tmux\"><a href=\"#Tmux\" class=\"headerlink\" title=\"Tmux\"></a>Tmux</h3><p>Tmux 是一个优秀的终端复用软件。使用它最直观的好处就是，通过一个终端登录远程主机并运行tmux后，在其中可以开启多个控制台而无需再“浪费”多余的终端来连接这台远程主机。</p>\n<h3 id=\"nmon\"><a href=\"#nmon\" class=\"headerlink\" title=\"nmon\"></a>nmon</h3><p>Nmon（nigel’s monitor 的简写）是一个显示系统性能信息的工具,可以显示与 netwrok，cpu, memory 和磁盘使用情况的信息。</p>\n<h3 id=\"ncdu\"><a href=\"#ncdu\" class=\"headerlink\" title=\"ncdu\"></a>ncdu</h3><p>是一个支持光标的 du 程序，这个命令是用来分析各种目录占用的磁盘空间。按 n 则通过文件名来排序，按 s 则按文件大小来排序（默认的）。</p>\n<h3 id=\"dstat\"><a href=\"#dstat\" class=\"headerlink\" title=\"dstat\"></a>dstat</h3><p>一种灵活的组合工具，它可用于监控内存，进程，网络和磁盘性能，它可以用来取代 ifstat, iostat, dmstat 等。</p>\n<h3 id=\"slurm\"><a href=\"#slurm\" class=\"headerlink\" title=\"slurm\"></a>slurm</h3><p>一个网卡带宽监控命令行实用程序，它会自动生成 ASCII 图形输出。安装:</p>\n<p><code>apt-get install slurm</code><br>使用：</p>\n<p><code>slurm -i &lt;网卡名称&gt;</code></p>\n<h3 id=\"ranwhen-py\"><a href=\"#ranwhen-py\" class=\"headerlink\" title=\"ranwhen.py\"></a>ranwhen.py</h3><p>一种基于 Python 的终端工具，它可以用来以图形方式显示系统活动状态</p>\n<h3 id=\"plymouth-manager\"><a href=\"#plymouth-manager\" class=\"headerlink\" title=\"plymouth-manager\"></a>plymouth-manager</h3><p>修改开机登录界面。可以美化你Ubuntu的启动主题Plymouth，下载：<a href=\"https://launchpad.net/plymouth-manager/+download\" target=\"_blank\" rel=\"external\">https://launchpad.net/plymouth-manager/+download</a></p>\n<h3 id=\"kazam\"><a href=\"#kazam\" class=\"headerlink\" title=\"kazam\"></a>kazam</h3><p>屏幕录制软件</p>\n<h3 id=\"firebug\"><a href=\"#firebug\" class=\"headerlink\" title=\"firebug\"></a>firebug</h3><p>火狐插件，Web开发者调试工具</p>\n<h3 id=\"okular\"><a href=\"#okular\" class=\"headerlink\" title=\"okular\"></a>okular</h3><p>阅读器，可用于阅读pdf，也可用于阅读epub电子书。</p>\n<h3 id=\"ranger\"><a href=\"#ranger\" class=\"headerlink\" title=\"ranger\"></a>ranger</h3><p>基于终端的文件浏览器</p>\n<h3 id=\"lolcat\"><a href=\"#lolcat\" class=\"headerlink\" title=\"lolcat\"></a>lolcat</h3><p><code>输入彩色文本，例如 cat “hello world”    lolcat</code></p>\n<h3 id=\"cmatrix\"><a href=\"#cmatrix\" class=\"headerlink\" title=\"cmatrix\"></a>cmatrix</h3><p>终端打印矩阵</p>\n<h3 id=\"Weather-Indicator-Applet-天气预报\"><a href=\"#Weather-Indicator-Applet-天气预报\" class=\"headerlink\" title=\"Weather Indicator Applet (天气预报)\"></a>Weather Indicator Applet (天气预报)</h3><p>安装命令：</p>\n<p><code>sudo apt-get install indicator-weather</code></p>\n<h3 id=\"ClassicMenu\"><a href=\"#ClassicMenu\" class=\"headerlink\" title=\"ClassicMenu\"></a>ClassicMenu</h3><p>经典的 GNOME2 菜单, 安装命令：</p>\n<p><code>sudo apt-add-repository ppa:diesch/testing</code></p>\n<p><code>sudo apt-get update</code></p>\n<p><code>sudo apt-get install classicmenu-indicator</code></p>\n<h3 id=\"Caffeine（咖啡因）\"><a href=\"#Caffeine（咖啡因）\" class=\"headerlink\" title=\"Caffeine（咖啡因）\"></a>Caffeine（咖啡因）</h3><p>你怎样确保你的电脑不会在放一部精彩的电影中途突然休眠呢？Caffeine 会帮助你解决这个问题。当然，你并不需要为你的电脑泡一杯咖啡。你只需要安装一个轻量级的指示器 —— Caffeine。只要当前你是全屏模式，它就会禁用你的屏幕保护程序、锁屏程序，让你的电脑不会因为没有在任务中而进入睡眠模式。</p>\n<p><code>sudo add-apt-repository ppa:caffeine-developers/ppa</code></p>\n<p><code>sudo apt-get update</code></p>\n<p><code>sudo apt-get install caffeine</code></p>\n<p><code>sudo apt-get install libappindicator3-1 gir1.2-appindicator3-0.1</code></p>\n<h3 id=\"gparted\"><a href=\"#gparted\" class=\"headerlink\" title=\"gparted\"></a>gparted</h3><p>格式化、分区工具</p>\n<h3 id=\"cheat\"><a href=\"#cheat\" class=\"headerlink\" title=\"cheat\"></a>cheat</h3><p>Linux 命令备忘清单，<a href=\"https://github.com/chrisallenlane/cheat\" target=\"_blank\" rel=\"external\">https://github.com/chrisallenlane/cheat</a></p>\n<h3 id=\"htop\"><a href=\"#htop\" class=\"headerlink\" title=\"htop\"></a>htop</h3><p>htop 是一个更加先进的交互式的实时监控工具。htop 与 top 命令非常相似，但是他有一些非常丰富的功能，如用户友好界面管理进程、快捷键、横向和纵向进程等更多的。htop 是一个第三方工具并不包括在 Linux 系统中，你需要使用包管理工具进行安装。</p>\n<h3 id=\"Tickeys\"><a href=\"#Tickeys\" class=\"headerlink\" title=\"Tickeys\"></a>Tickeys</h3><p>Tickeys是一款很强大的键盘音效软件。Tickeys 自带多种声音效果方案，有打字机、冒泡、机械键盘、剑气等。每天都听着键盘声音是不是很烦闷，现在有了这款神器你就可以瞬间帮助自己的键盘加上逼格特效。<a href=\"https://github.com/BillBillBillBill/Tickeys-linux/\" target=\"_blank\" rel=\"external\">https://github.com/BillBillBillBill/Tickeys-linux/</a></p>\n<h3 id=\"festival\"><a href=\"#festival\" class=\"headerlink\" title=\"festival\"></a>festival</h3><p>语音合成软件,安装使用参考:<a href=\"https://linuxtoy.org/archives/festival_on_ubuntu.html\" target=\"_blank\" rel=\"external\">https://linuxtoy.org/archives/festival_on_ubuntu.html</a></p>\n<h3 id=\"autossh\"><a href=\"#autossh\" class=\"headerlink\" title=\"autossh\"></a>autossh</h3><p>自动重连 ssh</p>\n<h3 id=\"SysPeek\"><a href=\"#SysPeek\" class=\"headerlink\" title=\"SysPeek\"></a>SysPeek</h3><p>系统指示器, 安装：</p>\n<p><code>sudo add-apt-repository ppa:nilarimogard/webupd8</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install syspeek</code></p>\n<h3 id=\"lnav\"><a href=\"#lnav\" class=\"headerlink\" title=\"lnav\"></a>lnav</h3><p>lnav 工具是在终端界面看日志的神器</p>\n<h3 id=\"proxychains\"><a href=\"#proxychains\" class=\"headerlink\" title=\"proxychains\"></a>proxychains</h3><p>命令行翻墙代理， 配置文件 /etc/proxychains.conf</p>\n<h3 id=\"Touchpad-Indicator-触摸板开关\"><a href=\"#Touchpad-Indicator-触摸板开关\" class=\"headerlink\" title=\"Touchpad Indicator (触摸板开关)\"></a>Touchpad Indicator (触摸板开关)</h3><p><code>sudo add-apt-repository ppa:atareao/atareao</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install touchpad-indicator</code></p>\n<h3 id=\"Keylock-Application-Indicator-（显示大写键状态）\"><a href=\"#Keylock-Application-Indicator-（显示大写键状态）\" class=\"headerlink\" title=\"Keylock Application Indicator （显示大写键状态）\"></a>Keylock Application Indicator （显示大写键状态）</h3><p><code>sudo add-apt-repository ppa:tsbarnes/indicator-keylock</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install indicator-keylock</code></p>\n<h3 id=\"apparmor\"><a href=\"#apparmor\" class=\"headerlink\" title=\"apparmor\"></a>apparmor</h3><p>Linux 进程权限控制</p>\n<h3 id=\"Fabric\"><a href=\"#Fabric\" class=\"headerlink\" title=\"Fabric\"></a>Fabric</h3><p>Fabric 是一个用 Python 编写的命令行工具库，它可以帮助系统管理员高效地执行某些任务，比如通过 SSH 到多台机器上执行某些命令，远程布署应用等。</p>\n<h3 id=\"Dia\"><a href=\"#Dia\" class=\"headerlink\" title=\"Dia\"></a>Dia</h3><p>跨平台的流程图绘制程序, 基于GTK的图形（diagram）绘制程序，适用于Linux, Unix和Windows, 下载：<a href=\"https://sourceforge.net/projects/dia-installer/\" target=\"_blank\" rel=\"external\">https://sourceforge.net/projects/dia-installer/</a></p>\n<h3 id=\"Taskwarrior\"><a href=\"#Taskwarrior\" class=\"headerlink\" title=\"Taskwarrior\"></a>Taskwarrior</h3><p>TASKWARRIOR 是一个很棒的命令行 TODO 工具。Ubuntu安装：</p>\n<p><code>sudo apt-get install task</code><br>Mac 安装：</p>\n<p><code>brew install task</code></p>\n<h3 id=\"Python-Sphinx\"><a href=\"#Python-Sphinx\" class=\"headerlink\" title=\"Python Sphinx\"></a>Python Sphinx</h3><p>Sphinx 是一个非常棒的文档的工具，它采用 reStructuredText 标记语言编写文档，然后可以将文档导出成 html、pdf 等格式。中文参考文档。</p>\n<p>安装：</p>\n<p><code>pip install sphinx</code></p>\n<h3 id=\"ACK\"><a href=\"#ACK\" class=\"headerlink\" title=\"ACK\"></a>ACK</h3><p>ACK 比 grep 更好的搜索工具。</p>\n<h3 id=\"Electron\"><a href=\"#Electron\" class=\"headerlink\" title=\"Electron\"></a>Electron</h3><p>Electron 框架的前身是 Atom Shell，可以让你写使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用程序。它是基于io.js 和 Chromium 开源项目，并用于在 Atom 编辑器中。Electron 是开源的，由 GitHub 维护，有一个活跃的社区。最重要的是，Electron 应用服务构建和运行在 Mac，Windows 和 Linux。</p>\n<h3 id=\"Speedtest\"><a href=\"#Speedtest\" class=\"headerlink\" title=\"Speedtest\"></a>Speedtest</h3><p>带宽测试工具, 安装:</p>\n<p><code>pip install speedtest-cli</code><br>也可以直接访问网页版: Speedtest.net</p>\n<h3 id=\"paste\"><a href=\"#paste\" class=\"headerlink\" title=\"paste\"></a>paste</h3><p>将文件按行并列显示：</p>\n<p><code>paste test.txt test2.txt test3.txt</code></p>\n<h3 id=\"expand\"><a href=\"#expand\" class=\"headerlink\" title=\"expand\"></a>expand</h3><p>将文件的制表符（TAB）转换为空白字符（space），将结果显示到标准输出设备。-t 参数可以指定制表符的参数。示例：</p>\n<p><code>expand -t 4 test.txt &gt; test1.txt</code></p>\n<h3 id=\"抓包工具\"><a href=\"#抓包工具\" class=\"headerlink\" title=\"抓包工具\"></a>抓包工具</h3><p>charles<br>Fiddler<br>wireshark<br>mitmproxy</p>\n<h3 id=\"pwgen\"><a href=\"#pwgen\" class=\"headerlink\" title=\"pwgen\"></a>pwgen</h3><p>一个生成随机、无特殊含义但可以正常拼读的密码。安装：</p>\n<p><code>sudo apt-get install pwgen</code><br>生成14位不含大写字母的密码：</p>\n<p><code>pwgen -A 14</code></p>\n<p>参数：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c 或 --capitalize 生成的密码中至少包含一个大写字母</div><div class=\"line\">-A 或 --no-capitalize 生成的密码中不含大写字母</div><div class=\"line\">-n 或 --numerals 生成的密码中至少包含一个数字</div><div class=\"line\">-0 或 --no-numerals 生成的密码中不含数字</div><div class=\"line\">-y 或 --symbols 生成的密码中至少包含一个特殊字符</div><div class=\"line\">-s 或 --secure 生成一个完全随机的密码</div><div class=\"line\">-B 或 --ambiguous 生成的密码中不含易混淆字符</div><div class=\"line\">-h 或 --<span class=\"built_in\">help</span> 输出帮助信息</div><div class=\"line\">-H 或 --sha1=path/to/file[<span class=\"comment\">#seed] 使用指定文件的 sha1 哈希值作为随机生成器</span></div><div class=\"line\">-C 按列输出生成的密码</div><div class=\"line\">-1 不按列输出生成的密码</div><div class=\"line\">-v 或 --no-vowels 不使用任何元音，以免意外生成让人讨厌的单词</div></pre></td></tr></table></figure></p>\n<h3 id=\"Zeal\"><a href=\"#Zeal\" class=\"headerlink\" title=\"Zeal\"></a>Zeal</h3><p>Zeal 是一个简单的离线 API 文档浏览器，仿照 Dash（一个 OSX 应用） 写成，能在 Linux 和 Windows 上使用。<br>Linux 下安装和使用可以参考: <a href=\"http://xmodulo.com/browse-search-api-documentation-offline-linux.html\" target=\"_blank\" rel=\"external\">http://xmodulo.com/browse-search-api-documentation-offline-linux.html</a></p>\n<h3 id=\"ack\"><a href=\"#ack\" class=\"headerlink\" title=\"ack\"></a>ack</h3><p>Ack 是比 grep 更快的文本搜索工具</p>\n<h3 id=\"Ag\"><a href=\"#Ag\" class=\"headerlink\" title=\"Ag\"></a>Ag</h3><p>Ag 是比 grep、ack 更快的搜索工具</p>\n<h3 id=\"ccat\"><a href=\"#ccat\" class=\"headerlink\" title=\"ccat\"></a>ccat</h3><p>Ccat 是 cat 的着色版本，可以对输出文本进行语法高亮</p>\n<h3 id=\"Insomnia\"><a href=\"#Insomnia\" class=\"headerlink\" title=\"Insomnia\"></a>Insomnia</h3><p>Insomnia 跨平台的、免费的 REST 客户端</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Ubuntu常用工具\"><a href=\"#Ubuntu常用工具\" class=\"headerlink\" title=\"Ubuntu常用工具\"></a>Ubuntu常用工具</h1><blockquote>\n<p>收集了ubuntu下常用的小工具</p>\n</blockquote>","more":"<h3 id=\"版本控制软件GUI版\"><a href=\"#版本控制软件GUI版\" class=\"headerlink\" title=\"版本控制软件GUI版\"></a>版本控制软件GUI版</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><blockquote>\n<p>按照wiki安装，rabbitvcs<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-add-repository universe</div><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install rabbitvcs-nautilus</div></pre></td></tr></table></figure></p>\n</blockquote>\n<p><a href=\"http://wiki.rabbitvcs.org/wiki/install/ubuntu\" target=\"_blank\" rel=\"external\">WIKI</a></p>\n<h4 id=\"安装完毕重启\"><a href=\"#安装完毕重启\" class=\"headerlink\" title=\"安装完毕重启\"></a>安装完毕重启</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nautilus -q</div></pre></td></tr></table></figure>\n<h4 id=\"安装完成效果图\"><a href=\"#安装完成效果图\" class=\"headerlink\" title=\"安装完成效果图\"></a>安装完成效果图</h4><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/16-12-28/59784456-file_1482905990308_3716.png\" alt=\"效果图1\"></p>\n<blockquote>\n<p>以下引用<br><a href=\"http://kuanghy.github.io/2016/09/01/linux-softwares\" target=\"_blank\" rel=\"external\">旷世的忧伤博客</a></p>\n</blockquote>\n<h3 id=\"Transmission\"><a href=\"#Transmission\" class=\"headerlink\" title=\"Transmission\"></a>Transmission</h3><p>Transmission 是一种 BitTorrent 客户端，特点是一个跨平台的后端和其上的简洁的用户界面。BT 种子一种“.torrent”文件，装有BT（BitTorrent）下载必须的文件信息，作用相当于HTTP下载里的URL链接</p>\n<h3 id=\"gimp\"><a href=\"#gimp\" class=\"headerlink\" title=\"gimp\"></a>gimp</h3><p>图形处理</p>\n<h3 id=\"steam\"><a href=\"#steam\" class=\"headerlink\" title=\"steam\"></a>steam</h3><p>游戏客户端</p>\n<h3 id=\"bleachbit\"><a href=\"#bleachbit\" class=\"headerlink\" title=\"bleachbit\"></a>bleachbit</h3><p>系统记录清理工具</p>\n<h3 id=\"xdman\"><a href=\"#xdman\" class=\"headerlink\" title=\"xdman\"></a>xdman</h3><p>Xtreme Download Manager, 下载管理器</p>\n<h3 id=\"preload\"><a href=\"#preload\" class=\"headerlink\" title=\"preload\"></a>preload</h3><p>Preload 是一个自适应预读守护进程。它监控用户运行的应用程序，并且分析这些数据，预测用户可能运行的程序，并读取这些程序的二进制文件及其依赖文件到系统内存，以达到加速启动的时间。Preload 将在后台静静运行。如果你想改变 Preload 的行为，你可以编辑它的配置文件 /etc/preload.conf。</p>\n<h3 id=\"apt-fast\"><a href=\"#apt-fast\" class=\"headerlink\" title=\"apt-fast\"></a>apt-fast</h3><p>Apt-fast 是一款替代 apt-get 提升下载速度的软件，安装软件时，通过增加线程使下载软件速度加快。 Apt-fast 已经更新到1.6.4版本，引入配置“对话框”，在其安装过程中，一步步对话框选择设置，每个用户的配置选项，从而改善和清晰化 Apt-fast的初始配置过程。</p>\n<h3 id=\"AppGrid\"><a href=\"#AppGrid\" class=\"headerlink\" title=\"AppGrid\"></a>AppGrid</h3><p>一个优秀的Ubuntu软件中心替代品</p>\n<h3 id=\"diffuse\"><a href=\"#diffuse\" class=\"headerlink\" title=\"diffuse\"></a>diffuse</h3><p>文件比较工具</p>\n<h3 id=\"ReText\"><a href=\"#ReText\" class=\"headerlink\" title=\"ReText\"></a>ReText</h3><p>markdown 文档编辑器</p>\n<h3 id=\"配置数学公式：\"><a href=\"#配置数学公式：\" class=\"headerlink\" title=\"配置数学公式：\"></a>配置数学公式：</h3><p>有时候需要在文档中添加一些数学公式，比如时间复杂度什么的O(N2)，其实，我发现Github官网的页面是不支持的，不知道是不是Github有自己的数学公式输入格式。</p>\n<p>在Retext下想使用，首先应该先安装MathJax</p>\n<p><code>sudo apt-get install libjs-mathjax</code><br>安装好后，打开ReText的设置界面，在Markdown extensions框里添加字段：mathjax，重启ReText，输入公式，如 N32 ，OK！</p>\n<p>添加语法高亮：<br>ReText支持语法高亮，但需要在在Markdown extensions框里添加字段：codehilite，同时，需要下载安装高亮支持模块python-pygments：</p>\n<p><code>sudo apt-get install python-pygments</code><br>这个方法来自与ReText的扩展说明, 文档里的扩展功能添加进ReText的Markdown extensions时，都必须该成小写字母，否则无效！同时，两个扩展之间用英文逗号分割。</p>\n<h3 id=\"Remarkable\"><a href=\"#Remarkable\" class=\"headerlink\" title=\"Remarkable\"></a>Remarkable</h3><p>Remarkable, Linux 下的 markdown 文档编辑器。</p>\n<h3 id=\"brackets\"><a href=\"#brackets\" class=\"headerlink\" title=\"brackets\"></a>brackets</h3><p>Web 前端编辑器</p>\n<h3 id=\"terminology\"><a href=\"#terminology\" class=\"headerlink\" title=\"terminology\"></a>terminology</h3><p>万能的终端工具</p>\n<h3 id=\"terminator\"><a href=\"#terminator\" class=\"headerlink\" title=\"terminator\"></a>terminator</h3><p>一个不错的终端工具</p>\n<h3 id=\"terminix\"><a href=\"#terminix\" class=\"headerlink\" title=\"terminix\"></a>terminix</h3><p>GTK3 终端模拟器</p>\n<h3 id=\"TermKit\"><a href=\"#TermKit\" class=\"headerlink\" title=\"TermKit\"></a>TermKit</h3><p>TermKit 是由 Steven Wittens 为 MacOS X 编写的一个很有趣的项目，可以称之为下一代的富媒体终端。</p>\n<h3 id=\"Tmux\"><a href=\"#Tmux\" class=\"headerlink\" title=\"Tmux\"></a>Tmux</h3><p>Tmux 是一个优秀的终端复用软件。使用它最直观的好处就是，通过一个终端登录远程主机并运行tmux后，在其中可以开启多个控制台而无需再“浪费”多余的终端来连接这台远程主机。</p>\n<h3 id=\"nmon\"><a href=\"#nmon\" class=\"headerlink\" title=\"nmon\"></a>nmon</h3><p>Nmon（nigel’s monitor 的简写）是一个显示系统性能信息的工具,可以显示与 netwrok，cpu, memory 和磁盘使用情况的信息。</p>\n<h3 id=\"ncdu\"><a href=\"#ncdu\" class=\"headerlink\" title=\"ncdu\"></a>ncdu</h3><p>是一个支持光标的 du 程序，这个命令是用来分析各种目录占用的磁盘空间。按 n 则通过文件名来排序，按 s 则按文件大小来排序（默认的）。</p>\n<h3 id=\"dstat\"><a href=\"#dstat\" class=\"headerlink\" title=\"dstat\"></a>dstat</h3><p>一种灵活的组合工具，它可用于监控内存，进程，网络和磁盘性能，它可以用来取代 ifstat, iostat, dmstat 等。</p>\n<h3 id=\"slurm\"><a href=\"#slurm\" class=\"headerlink\" title=\"slurm\"></a>slurm</h3><p>一个网卡带宽监控命令行实用程序，它会自动生成 ASCII 图形输出。安装:</p>\n<p><code>apt-get install slurm</code><br>使用：</p>\n<p><code>slurm -i &lt;网卡名称&gt;</code></p>\n<h3 id=\"ranwhen-py\"><a href=\"#ranwhen-py\" class=\"headerlink\" title=\"ranwhen.py\"></a>ranwhen.py</h3><p>一种基于 Python 的终端工具，它可以用来以图形方式显示系统活动状态</p>\n<h3 id=\"plymouth-manager\"><a href=\"#plymouth-manager\" class=\"headerlink\" title=\"plymouth-manager\"></a>plymouth-manager</h3><p>修改开机登录界面。可以美化你Ubuntu的启动主题Plymouth，下载：<a href=\"https://launchpad.net/plymouth-manager/+download\" target=\"_blank\" rel=\"external\">https://launchpad.net/plymouth-manager/+download</a></p>\n<h3 id=\"kazam\"><a href=\"#kazam\" class=\"headerlink\" title=\"kazam\"></a>kazam</h3><p>屏幕录制软件</p>\n<h3 id=\"firebug\"><a href=\"#firebug\" class=\"headerlink\" title=\"firebug\"></a>firebug</h3><p>火狐插件，Web开发者调试工具</p>\n<h3 id=\"okular\"><a href=\"#okular\" class=\"headerlink\" title=\"okular\"></a>okular</h3><p>阅读器，可用于阅读pdf，也可用于阅读epub电子书。</p>\n<h3 id=\"ranger\"><a href=\"#ranger\" class=\"headerlink\" title=\"ranger\"></a>ranger</h3><p>基于终端的文件浏览器</p>\n<h3 id=\"lolcat\"><a href=\"#lolcat\" class=\"headerlink\" title=\"lolcat\"></a>lolcat</h3><p><code>输入彩色文本，例如 cat “hello world”    lolcat</code></p>\n<h3 id=\"cmatrix\"><a href=\"#cmatrix\" class=\"headerlink\" title=\"cmatrix\"></a>cmatrix</h3><p>终端打印矩阵</p>\n<h3 id=\"Weather-Indicator-Applet-天气预报\"><a href=\"#Weather-Indicator-Applet-天气预报\" class=\"headerlink\" title=\"Weather Indicator Applet (天气预报)\"></a>Weather Indicator Applet (天气预报)</h3><p>安装命令：</p>\n<p><code>sudo apt-get install indicator-weather</code></p>\n<h3 id=\"ClassicMenu\"><a href=\"#ClassicMenu\" class=\"headerlink\" title=\"ClassicMenu\"></a>ClassicMenu</h3><p>经典的 GNOME2 菜单, 安装命令：</p>\n<p><code>sudo apt-add-repository ppa:diesch/testing</code></p>\n<p><code>sudo apt-get update</code></p>\n<p><code>sudo apt-get install classicmenu-indicator</code></p>\n<h3 id=\"Caffeine（咖啡因）\"><a href=\"#Caffeine（咖啡因）\" class=\"headerlink\" title=\"Caffeine（咖啡因）\"></a>Caffeine（咖啡因）</h3><p>你怎样确保你的电脑不会在放一部精彩的电影中途突然休眠呢？Caffeine 会帮助你解决这个问题。当然，你并不需要为你的电脑泡一杯咖啡。你只需要安装一个轻量级的指示器 —— Caffeine。只要当前你是全屏模式，它就会禁用你的屏幕保护程序、锁屏程序，让你的电脑不会因为没有在任务中而进入睡眠模式。</p>\n<p><code>sudo add-apt-repository ppa:caffeine-developers/ppa</code></p>\n<p><code>sudo apt-get update</code></p>\n<p><code>sudo apt-get install caffeine</code></p>\n<p><code>sudo apt-get install libappindicator3-1 gir1.2-appindicator3-0.1</code></p>\n<h3 id=\"gparted\"><a href=\"#gparted\" class=\"headerlink\" title=\"gparted\"></a>gparted</h3><p>格式化、分区工具</p>\n<h3 id=\"cheat\"><a href=\"#cheat\" class=\"headerlink\" title=\"cheat\"></a>cheat</h3><p>Linux 命令备忘清单，<a href=\"https://github.com/chrisallenlane/cheat\" target=\"_blank\" rel=\"external\">https://github.com/chrisallenlane/cheat</a></p>\n<h3 id=\"htop\"><a href=\"#htop\" class=\"headerlink\" title=\"htop\"></a>htop</h3><p>htop 是一个更加先进的交互式的实时监控工具。htop 与 top 命令非常相似，但是他有一些非常丰富的功能，如用户友好界面管理进程、快捷键、横向和纵向进程等更多的。htop 是一个第三方工具并不包括在 Linux 系统中，你需要使用包管理工具进行安装。</p>\n<h3 id=\"Tickeys\"><a href=\"#Tickeys\" class=\"headerlink\" title=\"Tickeys\"></a>Tickeys</h3><p>Tickeys是一款很强大的键盘音效软件。Tickeys 自带多种声音效果方案，有打字机、冒泡、机械键盘、剑气等。每天都听着键盘声音是不是很烦闷，现在有了这款神器你就可以瞬间帮助自己的键盘加上逼格特效。<a href=\"https://github.com/BillBillBillBill/Tickeys-linux/\" target=\"_blank\" rel=\"external\">https://github.com/BillBillBillBill/Tickeys-linux/</a></p>\n<h3 id=\"festival\"><a href=\"#festival\" class=\"headerlink\" title=\"festival\"></a>festival</h3><p>语音合成软件,安装使用参考:<a href=\"https://linuxtoy.org/archives/festival_on_ubuntu.html\" target=\"_blank\" rel=\"external\">https://linuxtoy.org/archives/festival_on_ubuntu.html</a></p>\n<h3 id=\"autossh\"><a href=\"#autossh\" class=\"headerlink\" title=\"autossh\"></a>autossh</h3><p>自动重连 ssh</p>\n<h3 id=\"SysPeek\"><a href=\"#SysPeek\" class=\"headerlink\" title=\"SysPeek\"></a>SysPeek</h3><p>系统指示器, 安装：</p>\n<p><code>sudo add-apt-repository ppa:nilarimogard/webupd8</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install syspeek</code></p>\n<h3 id=\"lnav\"><a href=\"#lnav\" class=\"headerlink\" title=\"lnav\"></a>lnav</h3><p>lnav 工具是在终端界面看日志的神器</p>\n<h3 id=\"proxychains\"><a href=\"#proxychains\" class=\"headerlink\" title=\"proxychains\"></a>proxychains</h3><p>命令行翻墙代理， 配置文件 /etc/proxychains.conf</p>\n<h3 id=\"Touchpad-Indicator-触摸板开关\"><a href=\"#Touchpad-Indicator-触摸板开关\" class=\"headerlink\" title=\"Touchpad Indicator (触摸板开关)\"></a>Touchpad Indicator (触摸板开关)</h3><p><code>sudo add-apt-repository ppa:atareao/atareao</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install touchpad-indicator</code></p>\n<h3 id=\"Keylock-Application-Indicator-（显示大写键状态）\"><a href=\"#Keylock-Application-Indicator-（显示大写键状态）\" class=\"headerlink\" title=\"Keylock Application Indicator （显示大写键状态）\"></a>Keylock Application Indicator （显示大写键状态）</h3><p><code>sudo add-apt-repository ppa:tsbarnes/indicator-keylock</code><br><code>sudo apt-get update</code><br><code>sudo apt-get install indicator-keylock</code></p>\n<h3 id=\"apparmor\"><a href=\"#apparmor\" class=\"headerlink\" title=\"apparmor\"></a>apparmor</h3><p>Linux 进程权限控制</p>\n<h3 id=\"Fabric\"><a href=\"#Fabric\" class=\"headerlink\" title=\"Fabric\"></a>Fabric</h3><p>Fabric 是一个用 Python 编写的命令行工具库，它可以帮助系统管理员高效地执行某些任务，比如通过 SSH 到多台机器上执行某些命令，远程布署应用等。</p>\n<h3 id=\"Dia\"><a href=\"#Dia\" class=\"headerlink\" title=\"Dia\"></a>Dia</h3><p>跨平台的流程图绘制程序, 基于GTK的图形（diagram）绘制程序，适用于Linux, Unix和Windows, 下载：<a href=\"https://sourceforge.net/projects/dia-installer/\" target=\"_blank\" rel=\"external\">https://sourceforge.net/projects/dia-installer/</a></p>\n<h3 id=\"Taskwarrior\"><a href=\"#Taskwarrior\" class=\"headerlink\" title=\"Taskwarrior\"></a>Taskwarrior</h3><p>TASKWARRIOR 是一个很棒的命令行 TODO 工具。Ubuntu安装：</p>\n<p><code>sudo apt-get install task</code><br>Mac 安装：</p>\n<p><code>brew install task</code></p>\n<h3 id=\"Python-Sphinx\"><a href=\"#Python-Sphinx\" class=\"headerlink\" title=\"Python Sphinx\"></a>Python Sphinx</h3><p>Sphinx 是一个非常棒的文档的工具，它采用 reStructuredText 标记语言编写文档，然后可以将文档导出成 html、pdf 等格式。中文参考文档。</p>\n<p>安装：</p>\n<p><code>pip install sphinx</code></p>\n<h3 id=\"ACK\"><a href=\"#ACK\" class=\"headerlink\" title=\"ACK\"></a>ACK</h3><p>ACK 比 grep 更好的搜索工具。</p>\n<h3 id=\"Electron\"><a href=\"#Electron\" class=\"headerlink\" title=\"Electron\"></a>Electron</h3><p>Electron 框架的前身是 Atom Shell，可以让你写使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用程序。它是基于io.js 和 Chromium 开源项目，并用于在 Atom 编辑器中。Electron 是开源的，由 GitHub 维护，有一个活跃的社区。最重要的是，Electron 应用服务构建和运行在 Mac，Windows 和 Linux。</p>\n<h3 id=\"Speedtest\"><a href=\"#Speedtest\" class=\"headerlink\" title=\"Speedtest\"></a>Speedtest</h3><p>带宽测试工具, 安装:</p>\n<p><code>pip install speedtest-cli</code><br>也可以直接访问网页版: Speedtest.net</p>\n<h3 id=\"paste\"><a href=\"#paste\" class=\"headerlink\" title=\"paste\"></a>paste</h3><p>将文件按行并列显示：</p>\n<p><code>paste test.txt test2.txt test3.txt</code></p>\n<h3 id=\"expand\"><a href=\"#expand\" class=\"headerlink\" title=\"expand\"></a>expand</h3><p>将文件的制表符（TAB）转换为空白字符（space），将结果显示到标准输出设备。-t 参数可以指定制表符的参数。示例：</p>\n<p><code>expand -t 4 test.txt &gt; test1.txt</code></p>\n<h3 id=\"抓包工具\"><a href=\"#抓包工具\" class=\"headerlink\" title=\"抓包工具\"></a>抓包工具</h3><p>charles<br>Fiddler<br>wireshark<br>mitmproxy</p>\n<h3 id=\"pwgen\"><a href=\"#pwgen\" class=\"headerlink\" title=\"pwgen\"></a>pwgen</h3><p>一个生成随机、无特殊含义但可以正常拼读的密码。安装：</p>\n<p><code>sudo apt-get install pwgen</code><br>生成14位不含大写字母的密码：</p>\n<p><code>pwgen -A 14</code></p>\n<p>参数：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">-c 或 --capitalize 生成的密码中至少包含一个大写字母</div><div class=\"line\">-A 或 --no-capitalize 生成的密码中不含大写字母</div><div class=\"line\">-n 或 --numerals 生成的密码中至少包含一个数字</div><div class=\"line\">-0 或 --no-numerals 生成的密码中不含数字</div><div class=\"line\">-y 或 --symbols 生成的密码中至少包含一个特殊字符</div><div class=\"line\">-s 或 --secure 生成一个完全随机的密码</div><div class=\"line\">-B 或 --ambiguous 生成的密码中不含易混淆字符</div><div class=\"line\">-h 或 --<span class=\"built_in\">help</span> 输出帮助信息</div><div class=\"line\">-H 或 --sha1=path/to/file[<span class=\"comment\">#seed] 使用指定文件的 sha1 哈希值作为随机生成器</span></div><div class=\"line\">-C 按列输出生成的密码</div><div class=\"line\">-1 不按列输出生成的密码</div><div class=\"line\">-v 或 --no-vowels 不使用任何元音，以免意外生成让人讨厌的单词</div></pre></td></tr></table></figure></p>\n<h3 id=\"Zeal\"><a href=\"#Zeal\" class=\"headerlink\" title=\"Zeal\"></a>Zeal</h3><p>Zeal 是一个简单的离线 API 文档浏览器，仿照 Dash（一个 OSX 应用） 写成，能在 Linux 和 Windows 上使用。<br>Linux 下安装和使用可以参考: <a href=\"http://xmodulo.com/browse-search-api-documentation-offline-linux.html\" target=\"_blank\" rel=\"external\">http://xmodulo.com/browse-search-api-documentation-offline-linux.html</a></p>\n<h3 id=\"ack\"><a href=\"#ack\" class=\"headerlink\" title=\"ack\"></a>ack</h3><p>Ack 是比 grep 更快的文本搜索工具</p>\n<h3 id=\"Ag\"><a href=\"#Ag\" class=\"headerlink\" title=\"Ag\"></a>Ag</h3><p>Ag 是比 grep、ack 更快的搜索工具</p>\n<h3 id=\"ccat\"><a href=\"#ccat\" class=\"headerlink\" title=\"ccat\"></a>ccat</h3><p>Ccat 是 cat 的着色版本，可以对输出文本进行语法高亮</p>\n<h3 id=\"Insomnia\"><a href=\"#Insomnia\" class=\"headerlink\" title=\"Insomnia\"></a>Insomnia</h3><p>Insomnia 跨平台的、免费的 REST 客户端</p>"},{"title":"ubuntu下使用Thunderbird连接Exchange邮件服务器","date":"2017-01-03T02:26:26.000Z","_content":"\nubuntu下使用Thunderbird连接Exchange邮件服务器\n====\n\n## 背景\n公司为了加强安全性，故邮件服务器改为了exchange，这样一来，需要修改下自己邮件客户端及配置；\nexchange的设置跟普通的126,163又有些区别，这里记录一下，也方便ubuntu的用户。\n\n## 使用插件\n<!--more-->\n插件下载地址：[exquilla](https://addons.mozilla.org/zh-CN/thunderbird/addon/exquilla-exchange-web-services/)\n\n插件安装和firefox浏览器一样，非常方便\n免费使用60天\n\n## 破解\n60天肯定是不够用的，从网上找了个破解脚本，给力！\n\n脚本下载：[下载](http://oi1wvrjc2.bkt.clouddn.com/generater_license.py)\n\n### 破解方法，引用文章\n> 可以看到，注册码被用逗号分成了四个部分：\n1. 第一部分是注册类型，EX0是免费给的试用类型，我不知道EX1、EX2是什么情况，但试了下，EX1是可以用的\n2. 第二部分是邮件，*@*是免费给的60天试用的，这里要填有效的Exchange邮箱，可以在选项里Valid Emails里看到\n3. 第三部分是license过期日期。\n4. 第四部分是校验码，分别是前三个部分再加上356B4B5C算出来的MD5值。\n\n>例如，注册类型EX1、Exchange邮箱i@ssfighter.com，到期日期2015-01-18，可以计算出MD5值为：\n\n>MD5(EX1,i@ssfighter.com,2015-01-18,356B4B5C)=\n5253dbb7d2b5a6e152974b2003025ba9\n\n>用计算出的MD5值作为注册码的最后一部分即可注册成功。\n\n参考文章：[破解方法](http://blog.ssfighter.com/2015/01/exquilla-31-0-crack/)\n\n## 设置\n### 面包屑\n> 工具 >> ExQuilla for Microsoft Exchange >> ExQuilla license options\n\n### 如图\n![设置](http://oi1wvrjc2.bkt.clouddn.com/2017-01-03%2011-19-20%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png)\n\n\n","source":"_posts/ubuntu下使用Thunderbird连接Exchange邮件服务器.md","raw":"---\ntitle: ubuntu下使用Thunderbird连接Exchange邮件服务器\ndate: 2017-01-03 10:26:26\ntags:\n- ubuntu\n- Thunderbird\ncategories:\n- linux\n---\n\nubuntu下使用Thunderbird连接Exchange邮件服务器\n====\n\n## 背景\n公司为了加强安全性，故邮件服务器改为了exchange，这样一来，需要修改下自己邮件客户端及配置；\nexchange的设置跟普通的126,163又有些区别，这里记录一下，也方便ubuntu的用户。\n\n## 使用插件\n<!--more-->\n插件下载地址：[exquilla](https://addons.mozilla.org/zh-CN/thunderbird/addon/exquilla-exchange-web-services/)\n\n插件安装和firefox浏览器一样，非常方便\n免费使用60天\n\n## 破解\n60天肯定是不够用的，从网上找了个破解脚本，给力！\n\n脚本下载：[下载](http://oi1wvrjc2.bkt.clouddn.com/generater_license.py)\n\n### 破解方法，引用文章\n> 可以看到，注册码被用逗号分成了四个部分：\n1. 第一部分是注册类型，EX0是免费给的试用类型，我不知道EX1、EX2是什么情况，但试了下，EX1是可以用的\n2. 第二部分是邮件，*@*是免费给的60天试用的，这里要填有效的Exchange邮箱，可以在选项里Valid Emails里看到\n3. 第三部分是license过期日期。\n4. 第四部分是校验码，分别是前三个部分再加上356B4B5C算出来的MD5值。\n\n>例如，注册类型EX1、Exchange邮箱i@ssfighter.com，到期日期2015-01-18，可以计算出MD5值为：\n\n>MD5(EX1,i@ssfighter.com,2015-01-18,356B4B5C)=\n5253dbb7d2b5a6e152974b2003025ba9\n\n>用计算出的MD5值作为注册码的最后一部分即可注册成功。\n\n参考文章：[破解方法](http://blog.ssfighter.com/2015/01/exquilla-31-0-crack/)\n\n## 设置\n### 面包屑\n> 工具 >> ExQuilla for Microsoft Exchange >> ExQuilla license options\n\n### 如图\n![设置](http://oi1wvrjc2.bkt.clouddn.com/2017-01-03%2011-19-20%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png)\n\n\n","slug":"ubuntu下使用Thunderbird连接Exchange邮件服务器","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqmy002f4rd39h4genpy","content":"<h1 id=\"ubuntu下使用Thunderbird连接Exchange邮件服务器\"><a href=\"#ubuntu下使用Thunderbird连接Exchange邮件服务器\" class=\"headerlink\" title=\"ubuntu下使用Thunderbird连接Exchange邮件服务器\"></a>ubuntu下使用Thunderbird连接Exchange邮件服务器</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>公司为了加强安全性，故邮件服务器改为了exchange，这样一来，需要修改下自己邮件客户端及配置；<br>exchange的设置跟普通的126,163又有些区别，这里记录一下，也方便ubuntu的用户。</p>\n<h2 id=\"使用插件\"><a href=\"#使用插件\" class=\"headerlink\" title=\"使用插件\"></a>使用插件</h2><a id=\"more\"></a>\n<p>插件下载地址：<a href=\"https://addons.mozilla.org/zh-CN/thunderbird/addon/exquilla-exchange-web-services/\" target=\"_blank\" rel=\"external\">exquilla</a></p>\n<p>插件安装和firefox浏览器一样，非常方便<br>免费使用60天</p>\n<h2 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h2><p>60天肯定是不够用的，从网上找了个破解脚本，给力！</p>\n<p>脚本下载：<a href=\"http://oi1wvrjc2.bkt.clouddn.com/generater_license.py\" target=\"_blank\" rel=\"external\">下载</a></p>\n<h3 id=\"破解方法，引用文章\"><a href=\"#破解方法，引用文章\" class=\"headerlink\" title=\"破解方法，引用文章\"></a>破解方法，引用文章</h3><blockquote>\n<p>可以看到，注册码被用逗号分成了四个部分：</p>\n<ol>\n<li>第一部分是注册类型，EX0是免费给的试用类型，我不知道EX1、EX2是什么情况，但试了下，EX1是可以用的</li>\n<li>第二部分是邮件，<em>@</em>是免费给的60天试用的，这里要填有效的Exchange邮箱，可以在选项里Valid Emails里看到</li>\n<li>第三部分是license过期日期。</li>\n<li>第四部分是校验码，分别是前三个部分再加上356B4B5C算出来的MD5值。</li>\n</ol>\n<p>例如，注册类型EX1、Exchange邮箱i@ssfighter.com，到期日期2015-01-18，可以计算出MD5值为：</p>\n<p>MD5(EX1,i@ssfighter.com,2015-01-18,356B4B5C)=<br>5253dbb7d2b5a6e152974b2003025ba9</p>\n<p>用计算出的MD5值作为注册码的最后一部分即可注册成功。</p>\n</blockquote>\n<p>参考文章：<a href=\"http://blog.ssfighter.com/2015/01/exquilla-31-0-crack/\" target=\"_blank\" rel=\"external\">破解方法</a></p>\n<h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><h3 id=\"面包屑\"><a href=\"#面包屑\" class=\"headerlink\" title=\"面包屑\"></a>面包屑</h3><blockquote>\n<p>工具 &gt;&gt; ExQuilla for Microsoft Exchange &gt;&gt; ExQuilla license options</p>\n</blockquote>\n<h3 id=\"如图\"><a href=\"#如图\" class=\"headerlink\" title=\"如图\"></a>如图</h3><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/2017-01-03%2011-19-20%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png\" alt=\"设置\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"ubuntu下使用Thunderbird连接Exchange邮件服务器\"><a href=\"#ubuntu下使用Thunderbird连接Exchange邮件服务器\" class=\"headerlink\" title=\"ubuntu下使用Thunderbird连接Exchange邮件服务器\"></a>ubuntu下使用Thunderbird连接Exchange邮件服务器</h1><h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>公司为了加强安全性，故邮件服务器改为了exchange，这样一来，需要修改下自己邮件客户端及配置；<br>exchange的设置跟普通的126,163又有些区别，这里记录一下，也方便ubuntu的用户。</p>\n<h2 id=\"使用插件\"><a href=\"#使用插件\" class=\"headerlink\" title=\"使用插件\"></a>使用插件</h2>","more":"<p>插件下载地址：<a href=\"https://addons.mozilla.org/zh-CN/thunderbird/addon/exquilla-exchange-web-services/\" target=\"_blank\" rel=\"external\">exquilla</a></p>\n<p>插件安装和firefox浏览器一样，非常方便<br>免费使用60天</p>\n<h2 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h2><p>60天肯定是不够用的，从网上找了个破解脚本，给力！</p>\n<p>脚本下载：<a href=\"http://oi1wvrjc2.bkt.clouddn.com/generater_license.py\" target=\"_blank\" rel=\"external\">下载</a></p>\n<h3 id=\"破解方法，引用文章\"><a href=\"#破解方法，引用文章\" class=\"headerlink\" title=\"破解方法，引用文章\"></a>破解方法，引用文章</h3><blockquote>\n<p>可以看到，注册码被用逗号分成了四个部分：</p>\n<ol>\n<li>第一部分是注册类型，EX0是免费给的试用类型，我不知道EX1、EX2是什么情况，但试了下，EX1是可以用的</li>\n<li>第二部分是邮件，<em>@</em>是免费给的60天试用的，这里要填有效的Exchange邮箱，可以在选项里Valid Emails里看到</li>\n<li>第三部分是license过期日期。</li>\n<li>第四部分是校验码，分别是前三个部分再加上356B4B5C算出来的MD5值。</li>\n</ol>\n<p>例如，注册类型EX1、Exchange邮箱i@ssfighter.com，到期日期2015-01-18，可以计算出MD5值为：</p>\n<p>MD5(EX1,i@ssfighter.com,2015-01-18,356B4B5C)=<br>5253dbb7d2b5a6e152974b2003025ba9</p>\n<p>用计算出的MD5值作为注册码的最后一部分即可注册成功。</p>\n</blockquote>\n<p>参考文章：<a href=\"http://blog.ssfighter.com/2015/01/exquilla-31-0-crack/\" target=\"_blank\" rel=\"external\">破解方法</a></p>\n<h2 id=\"设置\"><a href=\"#设置\" class=\"headerlink\" title=\"设置\"></a>设置</h2><h3 id=\"面包屑\"><a href=\"#面包屑\" class=\"headerlink\" title=\"面包屑\"></a>面包屑</h3><blockquote>\n<p>工具 &gt;&gt; ExQuilla for Microsoft Exchange &gt;&gt; ExQuilla license options</p>\n</blockquote>\n<h3 id=\"如图\"><a href=\"#如图\" class=\"headerlink\" title=\"如图\"></a>如图</h3><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/2017-01-03%2011-19-20%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png\" alt=\"设置\"></p>"},{"title":"ubuntu创建程序快捷方式","date":"2017-05-08T07:26:03.000Z","_content":"\n## 快捷方式的位置\nUbuntu快捷方式的位置有两个\n1. `/usr/share/applications`\n2. `～/.local/share/applications`\n\n## 后缀名\n所有的快捷方式的后缀名都以`.desktop`结束\n\n## 快捷方式内容\n以pycharm为例，内容如下：\n\n```bash\n[Desktop Entry]\nVersion=1.0 //版本号\nType=Application //  \nName=PyCharm2017 // 显示名称\nIcon=/home/yourname/programs/pycharm-2017.1.1/bin/pycharm2017.png // 图标图片路径\nExec=\"/home/yourname/programs/pycharm-2017.1.1/bin/pycharm.sh\" %f // 程序执行文件\nComment=Develop with pleasure!\nCategories=Development;IDE;\nTerminal=false //是否终端执行\nStartupWMClass=jetbrains-pycharm\n```\n\n## 快捷方式的权限\n权限如下：\n```bash\n-rw-------\n```\n\n## 运行\n将文件放入指定位置后，点击ubuntu左上角搜索输入名称，即可显示；\n如图：\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-8/19586603-file_1494231696632_14626.png)","source":"_posts/ubuntu创建程序快捷方式.md","raw":"---\ntitle: ubuntu创建程序快捷方式\ndate: 2017-05-08 15:26:03\ntags: \n- ubuntu\ncategories: \n- linux\n- ubuntu\npermalink: how-to-create-a-program-shotcut-in-ubuntu\n\n---\n\n## 快捷方式的位置\nUbuntu快捷方式的位置有两个\n1. `/usr/share/applications`\n2. `～/.local/share/applications`\n\n## 后缀名\n所有的快捷方式的后缀名都以`.desktop`结束\n\n## 快捷方式内容\n以pycharm为例，内容如下：\n\n```bash\n[Desktop Entry]\nVersion=1.0 //版本号\nType=Application //  \nName=PyCharm2017 // 显示名称\nIcon=/home/yourname/programs/pycharm-2017.1.1/bin/pycharm2017.png // 图标图片路径\nExec=\"/home/yourname/programs/pycharm-2017.1.1/bin/pycharm.sh\" %f // 程序执行文件\nComment=Develop with pleasure!\nCategories=Development;IDE;\nTerminal=false //是否终端执行\nStartupWMClass=jetbrains-pycharm\n```\n\n## 快捷方式的权限\n权限如下：\n```bash\n-rw-------\n```\n\n## 运行\n将文件放入指定位置后，点击ubuntu左上角搜索输入名称，即可显示；\n如图：\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-8/19586603-file_1494231696632_14626.png)","slug":"how-to-create-a-program-shotcut-in-ubuntu","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqn0002j4rd3uprqko70","content":"<h2 id=\"快捷方式的位置\"><a href=\"#快捷方式的位置\" class=\"headerlink\" title=\"快捷方式的位置\"></a>快捷方式的位置</h2><p>Ubuntu快捷方式的位置有两个</p>\n<ol>\n<li><code>/usr/share/applications</code></li>\n<li><code>～/.local/share/applications</code></li>\n</ol>\n<h2 id=\"后缀名\"><a href=\"#后缀名\" class=\"headerlink\" title=\"后缀名\"></a>后缀名</h2><p>所有的快捷方式的后缀名都以<code>.desktop</code>结束</p>\n<h2 id=\"快捷方式内容\"><a href=\"#快捷方式内容\" class=\"headerlink\" title=\"快捷方式内容\"></a>快捷方式内容</h2><p>以pycharm为例，内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">[Desktop Entry]</div><div class=\"line\">Version=1.0 //版本号</div><div class=\"line\">Type=Application //  </div><div class=\"line\">Name=PyCharm2017 // 显示名称</div><div class=\"line\">Icon=/home/yourname/programs/pycharm-2017.1.1/bin/pycharm2017.png // 图标图片路径</div><div class=\"line\">Exec=<span class=\"string\">\"/home/yourname/programs/pycharm-2017.1.1/bin/pycharm.sh\"</span> %f // 程序执行文件</div><div class=\"line\">Comment=Develop with pleasure!</div><div class=\"line\">Categories=Development;IDE;</div><div class=\"line\">Terminal=<span class=\"literal\">false</span> //是否终端执行</div><div class=\"line\">StartupWMClass=jetbrains-pycharm</div></pre></td></tr></table></figure>\n<h2 id=\"快捷方式的权限\"><a href=\"#快捷方式的权限\" class=\"headerlink\" title=\"快捷方式的权限\"></a>快捷方式的权限</h2><p>权限如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">-rw-------</div></pre></td></tr></table></figure></p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>将文件放入指定位置后，点击ubuntu左上角搜索输入名称，即可显示；<br>如图：<br><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-8/19586603-file_1494231696632_14626.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"快捷方式的位置\"><a href=\"#快捷方式的位置\" class=\"headerlink\" title=\"快捷方式的位置\"></a>快捷方式的位置</h2><p>Ubuntu快捷方式的位置有两个</p>\n<ol>\n<li><code>/usr/share/applications</code></li>\n<li><code>～/.local/share/applications</code></li>\n</ol>\n<h2 id=\"后缀名\"><a href=\"#后缀名\" class=\"headerlink\" title=\"后缀名\"></a>后缀名</h2><p>所有的快捷方式的后缀名都以<code>.desktop</code>结束</p>\n<h2 id=\"快捷方式内容\"><a href=\"#快捷方式内容\" class=\"headerlink\" title=\"快捷方式内容\"></a>快捷方式内容</h2><p>以pycharm为例，内容如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">[Desktop Entry]</div><div class=\"line\">Version=1.0 //版本号</div><div class=\"line\">Type=Application //  </div><div class=\"line\">Name=PyCharm2017 // 显示名称</div><div class=\"line\">Icon=/home/yourname/programs/pycharm-2017.1.1/bin/pycharm2017.png // 图标图片路径</div><div class=\"line\">Exec=<span class=\"string\">\"/home/yourname/programs/pycharm-2017.1.1/bin/pycharm.sh\"</span> %f // 程序执行文件</div><div class=\"line\">Comment=Develop with pleasure!</div><div class=\"line\">Categories=Development;IDE;</div><div class=\"line\">Terminal=<span class=\"literal\">false</span> //是否终端执行</div><div class=\"line\">StartupWMClass=jetbrains-pycharm</div></pre></td></tr></table></figure>\n<h2 id=\"快捷方式的权限\"><a href=\"#快捷方式的权限\" class=\"headerlink\" title=\"快捷方式的权限\"></a>快捷方式的权限</h2><p>权限如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">-rw-------</div></pre></td></tr></table></figure></p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>将文件放入指定位置后，点击ubuntu左上角搜索输入名称，即可显示；<br>如图：<br><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-8/19586603-file_1494231696632_14626.png\" alt=\"\"></p>\n"},{"title":"url的解析方式","date":"2017-02-20T01:23:58.000Z","_content":"\n## URL的解析方式，简单有效\n![](http://oi1wvrjc2.bkt.clouddn.com/17-9-26/66144228.jpg)\n### URL的组成\n#### 举例url：\n<!--more-->\n`https://www.domain.org/this-is-path?username=w&password=p`\n- `scheme` 如：https://\n- `domain` 如：www.domain.org\n- `path` 如：this-is-path\n- `params` 如：username=w&password=p `params` 数据成对出现\n\n### 解析URL\n#### 引用包urlparse\n```python\nimport urlparse\nurl = \"https://www.domain.org/this-is-path?username=w&password=p\"\npa = urlparse.urlparse(url)\nprint pa\n```\n将url解析成了对象，如下：\n`Out[28]: ParseResult(scheme='https', netloc='www.domain.org', path='/this-is-path', params='', query='username=w&password=p', fragment='')`\n\n#### 获取数据\n```ipython\nIn [29]: pa.scheme\nOut[29]: 'https'\n\nIn [30]: pa.netloc\nOut[30]: 'www.domain.org'\n\nIn [34]: pa.hostname\nOut[34]: 'www.domain.org'\n\nIn [37]: pa.path\nOut[37]: '/this-is-path'\n\nIn [38]: pa.query\nOut[38]: 'username=w&password=p'\n```\n\n#### 如何将参数格式化成dict类型？\n```ipython\nIn [40]: urlparse.parse_qs(pa.query)\nOut[40]: {'password': ['p'], 'username': ['w']}\n\nIn [41]: dict(urlparse.parse_qsl(pa.query))\nOut[41]: {'password': 'p', 'username': 'w'}\n\n```\n\n#### 带参数据GET请求\n```python\nimport requests\nurl = \"https://www.domain.org/this-is-path\"\nparams = {\n\"username\": \"w\",\n\"password\":\"p\",\n}\nres = requests.get(url=url, params=params)\n```\n\n#### 如果你有一段raw形式的参数要进行请求，可以使用parse_qs进行格式化后请求\n```python\nimport requests\nimport urlparse\nurl = \"https://www.domain.org/this-is-path\"\np = \"username=w&password=p\"\nparams = urlparse.parse_qs(p)\nres = requests.get(url=url, params=params)\n```","source":"_posts/url的解析方式.md","raw":"---\ntitle: url的解析方式\ndate: 2017-02-20 09:23:58\ntags:\n- python\n- url\ncategories:\n- python\npermalink: Analysis-of-the-url\n---\n\n## URL的解析方式，简单有效\n![](http://oi1wvrjc2.bkt.clouddn.com/17-9-26/66144228.jpg)\n### URL的组成\n#### 举例url：\n<!--more-->\n`https://www.domain.org/this-is-path?username=w&password=p`\n- `scheme` 如：https://\n- `domain` 如：www.domain.org\n- `path` 如：this-is-path\n- `params` 如：username=w&password=p `params` 数据成对出现\n\n### 解析URL\n#### 引用包urlparse\n```python\nimport urlparse\nurl = \"https://www.domain.org/this-is-path?username=w&password=p\"\npa = urlparse.urlparse(url)\nprint pa\n```\n将url解析成了对象，如下：\n`Out[28]: ParseResult(scheme='https', netloc='www.domain.org', path='/this-is-path', params='', query='username=w&password=p', fragment='')`\n\n#### 获取数据\n```ipython\nIn [29]: pa.scheme\nOut[29]: 'https'\n\nIn [30]: pa.netloc\nOut[30]: 'www.domain.org'\n\nIn [34]: pa.hostname\nOut[34]: 'www.domain.org'\n\nIn [37]: pa.path\nOut[37]: '/this-is-path'\n\nIn [38]: pa.query\nOut[38]: 'username=w&password=p'\n```\n\n#### 如何将参数格式化成dict类型？\n```ipython\nIn [40]: urlparse.parse_qs(pa.query)\nOut[40]: {'password': ['p'], 'username': ['w']}\n\nIn [41]: dict(urlparse.parse_qsl(pa.query))\nOut[41]: {'password': 'p', 'username': 'w'}\n\n```\n\n#### 带参数据GET请求\n```python\nimport requests\nurl = \"https://www.domain.org/this-is-path\"\nparams = {\n\"username\": \"w\",\n\"password\":\"p\",\n}\nres = requests.get(url=url, params=params)\n```\n\n#### 如果你有一段raw形式的参数要进行请求，可以使用parse_qs进行格式化后请求\n```python\nimport requests\nimport urlparse\nurl = \"https://www.domain.org/this-is-path\"\np = \"username=w&password=p\"\nparams = urlparse.parse_qs(p)\nres = requests.get(url=url, params=params)\n```","slug":"Analysis-of-the-url","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqn1002m4rd3j59hf2c1","content":"<h2 id=\"URL的解析方式，简单有效\"><a href=\"#URL的解析方式，简单有效\" class=\"headerlink\" title=\"URL的解析方式，简单有效\"></a>URL的解析方式，简单有效</h2><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-9-26/66144228.jpg\" alt=\"\"></p>\n<h3 id=\"URL的组成\"><a href=\"#URL的组成\" class=\"headerlink\" title=\"URL的组成\"></a>URL的组成</h3><h4 id=\"举例url：\"><a href=\"#举例url：\" class=\"headerlink\" title=\"举例url：\"></a>举例url：</h4><a id=\"more\"></a>\n<p><code>https://www.domain.org/this-is-path?username=w&amp;password=p</code></p>\n<ul>\n<li><code>scheme</code> 如：https://</li>\n<li><code>domain</code> 如：www.domain.org</li>\n<li><code>path</code> 如：this-is-path</li>\n<li><code>params</code> 如：username=w&amp;password=p <code>params</code> 数据成对出现</li>\n</ul>\n<h3 id=\"解析URL\"><a href=\"#解析URL\" class=\"headerlink\" title=\"解析URL\"></a>解析URL</h3><h4 id=\"引用包urlparse\"><a href=\"#引用包urlparse\" class=\"headerlink\" title=\"引用包urlparse\"></a>引用包urlparse</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urlparse</div><div class=\"line\">url = <span class=\"string\">\"https://www.domain.org/this-is-path?username=w&amp;password=p\"</span></div><div class=\"line\">pa = urlparse.urlparse(url)</div><div class=\"line\"><span class=\"keyword\">print</span> pa</div></pre></td></tr></table></figure>\n<p>将url解析成了对象，如下：<br><code>Out[28]: ParseResult(scheme=&#39;https&#39;, netloc=&#39;www.domain.org&#39;, path=&#39;/this-is-path&#39;, params=&#39;&#39;, query=&#39;username=w&amp;password=p&#39;, fragment=&#39;&#39;)</code></p>\n<h4 id=\"获取数据\"><a href=\"#获取数据\" class=\"headerlink\" title=\"获取数据\"></a>获取数据</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">In [29]: pa.scheme</div><div class=\"line\">Out[29]: &apos;https&apos;</div><div class=\"line\"></div><div class=\"line\">In [30]: pa.netloc</div><div class=\"line\">Out[30]: &apos;www.domain.org&apos;</div><div class=\"line\"></div><div class=\"line\">In [34]: pa.hostname</div><div class=\"line\">Out[34]: &apos;www.domain.org&apos;</div><div class=\"line\"></div><div class=\"line\">In [37]: pa.path</div><div class=\"line\">Out[37]: &apos;/this-is-path&apos;</div><div class=\"line\"></div><div class=\"line\">In [38]: pa.query</div><div class=\"line\">Out[38]: &apos;username=w&amp;password=p&apos;</div></pre></td></tr></table></figure>\n<h4 id=\"如何将参数格式化成dict类型？\"><a href=\"#如何将参数格式化成dict类型？\" class=\"headerlink\" title=\"如何将参数格式化成dict类型？\"></a>如何将参数格式化成dict类型？</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">In [40]: urlparse.parse_qs(pa.query)</div><div class=\"line\">Out[40]: &#123;&apos;password&apos;: [&apos;p&apos;], &apos;username&apos;: [&apos;w&apos;]&#125;</div><div class=\"line\"></div><div class=\"line\">In [41]: dict(urlparse.parse_qsl(pa.query))</div><div class=\"line\">Out[41]: &#123;&apos;password&apos;: &apos;p&apos;, &apos;username&apos;: &apos;w&apos;&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"带参数据GET请求\"><a href=\"#带参数据GET请求\" class=\"headerlink\" title=\"带参数据GET请求\"></a>带参数据GET请求</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\">url = <span class=\"string\">\"https://www.domain.org/this-is-path\"</span></div><div class=\"line\">params = &#123;</div><div class=\"line\"><span class=\"string\">\"username\"</span>: <span class=\"string\">\"w\"</span>,</div><div class=\"line\"><span class=\"string\">\"password\"</span>:<span class=\"string\">\"p\"</span>,</div><div class=\"line\">&#125;</div><div class=\"line\">res = requests.get(url=url, params=params)</div></pre></td></tr></table></figure>\n<h4 id=\"如果你有一段raw形式的参数要进行请求，可以使用parse-qs进行格式化后请求\"><a href=\"#如果你有一段raw形式的参数要进行请求，可以使用parse-qs进行格式化后请求\" class=\"headerlink\" title=\"如果你有一段raw形式的参数要进行请求，可以使用parse_qs进行格式化后请求\"></a>如果你有一段raw形式的参数要进行请求，可以使用parse_qs进行格式化后请求</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">import</span> urlparse</div><div class=\"line\">url = <span class=\"string\">\"https://www.domain.org/this-is-path\"</span></div><div class=\"line\">p = <span class=\"string\">\"username=w&amp;password=p\"</span></div><div class=\"line\">params = urlparse.parse_qs(p)</div><div class=\"line\">res = requests.get(url=url, params=params)</div></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h2 id=\"URL的解析方式，简单有效\"><a href=\"#URL的解析方式，简单有效\" class=\"headerlink\" title=\"URL的解析方式，简单有效\"></a>URL的解析方式，简单有效</h2><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-9-26/66144228.jpg\" alt=\"\"></p>\n<h3 id=\"URL的组成\"><a href=\"#URL的组成\" class=\"headerlink\" title=\"URL的组成\"></a>URL的组成</h3><h4 id=\"举例url：\"><a href=\"#举例url：\" class=\"headerlink\" title=\"举例url：\"></a>举例url：</h4>","more":"<p><code>https://www.domain.org/this-is-path?username=w&amp;password=p</code></p>\n<ul>\n<li><code>scheme</code> 如：https://</li>\n<li><code>domain</code> 如：www.domain.org</li>\n<li><code>path</code> 如：this-is-path</li>\n<li><code>params</code> 如：username=w&amp;password=p <code>params</code> 数据成对出现</li>\n</ul>\n<h3 id=\"解析URL\"><a href=\"#解析URL\" class=\"headerlink\" title=\"解析URL\"></a>解析URL</h3><h4 id=\"引用包urlparse\"><a href=\"#引用包urlparse\" class=\"headerlink\" title=\"引用包urlparse\"></a>引用包urlparse</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> urlparse</div><div class=\"line\">url = <span class=\"string\">\"https://www.domain.org/this-is-path?username=w&amp;password=p\"</span></div><div class=\"line\">pa = urlparse.urlparse(url)</div><div class=\"line\"><span class=\"keyword\">print</span> pa</div></pre></td></tr></table></figure>\n<p>将url解析成了对象，如下：<br><code>Out[28]: ParseResult(scheme=&#39;https&#39;, netloc=&#39;www.domain.org&#39;, path=&#39;/this-is-path&#39;, params=&#39;&#39;, query=&#39;username=w&amp;password=p&#39;, fragment=&#39;&#39;)</code></p>\n<h4 id=\"获取数据\"><a href=\"#获取数据\" class=\"headerlink\" title=\"获取数据\"></a>获取数据</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">In [29]: pa.scheme</div><div class=\"line\">Out[29]: &apos;https&apos;</div><div class=\"line\"></div><div class=\"line\">In [30]: pa.netloc</div><div class=\"line\">Out[30]: &apos;www.domain.org&apos;</div><div class=\"line\"></div><div class=\"line\">In [34]: pa.hostname</div><div class=\"line\">Out[34]: &apos;www.domain.org&apos;</div><div class=\"line\"></div><div class=\"line\">In [37]: pa.path</div><div class=\"line\">Out[37]: &apos;/this-is-path&apos;</div><div class=\"line\"></div><div class=\"line\">In [38]: pa.query</div><div class=\"line\">Out[38]: &apos;username=w&amp;password=p&apos;</div></pre></td></tr></table></figure>\n<h4 id=\"如何将参数格式化成dict类型？\"><a href=\"#如何将参数格式化成dict类型？\" class=\"headerlink\" title=\"如何将参数格式化成dict类型？\"></a>如何将参数格式化成dict类型？</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">In [40]: urlparse.parse_qs(pa.query)</div><div class=\"line\">Out[40]: &#123;&apos;password&apos;: [&apos;p&apos;], &apos;username&apos;: [&apos;w&apos;]&#125;</div><div class=\"line\"></div><div class=\"line\">In [41]: dict(urlparse.parse_qsl(pa.query))</div><div class=\"line\">Out[41]: &#123;&apos;password&apos;: &apos;p&apos;, &apos;username&apos;: &apos;w&apos;&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"带参数据GET请求\"><a href=\"#带参数据GET请求\" class=\"headerlink\" title=\"带参数据GET请求\"></a>带参数据GET请求</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\">url = <span class=\"string\">\"https://www.domain.org/this-is-path\"</span></div><div class=\"line\">params = &#123;</div><div class=\"line\"><span class=\"string\">\"username\"</span>: <span class=\"string\">\"w\"</span>,</div><div class=\"line\"><span class=\"string\">\"password\"</span>:<span class=\"string\">\"p\"</span>,</div><div class=\"line\">&#125;</div><div class=\"line\">res = requests.get(url=url, params=params)</div></pre></td></tr></table></figure>\n<h4 id=\"如果你有一段raw形式的参数要进行请求，可以使用parse-qs进行格式化后请求\"><a href=\"#如果你有一段raw形式的参数要进行请求，可以使用parse-qs进行格式化后请求\" class=\"headerlink\" title=\"如果你有一段raw形式的参数要进行请求，可以使用parse_qs进行格式化后请求\"></a>如果你有一段raw形式的参数要进行请求，可以使用parse_qs进行格式化后请求</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">import</span> urlparse</div><div class=\"line\">url = <span class=\"string\">\"https://www.domain.org/this-is-path\"</span></div><div class=\"line\">p = <span class=\"string\">\"username=w&amp;password=p\"</span></div><div class=\"line\">params = urlparse.parse_qs(p)</div><div class=\"line\">res = requests.get(url=url, params=params)</div></pre></td></tr></table></figure>"},{"title":"使用urlparse修改url","date":"2017-11-06T01:39:20.000Z","_content":"\n使用urlparse修改url中的各各部分\n=====\n\n## 举例来说明\n\n![](http://oi1wvrjc2.bkt.clouddn.com/17-9-26/66144228.jpg)\n\n`url=\"https://stackoverflow.com/questions/21628852/changing-hostname-in-a-url\"`\n\n```python\n# 引入urlparse包\nIn [2]: import urlparse \n\n# 实例化url链接，变为urlparse对象\nIn [3]: u = urlparse.urlparse(url)\n\n# 查看u中所包含的\nIn [4]: u\nOut[4]: ParseResult(scheme='https', netloc='stackoverflow.com', path='/questions/21628852/changing-hostname-in-a-url', params='', query='', fragment='')\n\n# 将scheme进行替换，并赋值给u_change_scheme\nIn [5]: u_change_scheme = u._replace(scheme=\"ftp\")\n\n# 查看u_change_scheme对象\nIn [6]: u_change_scheme\nOut[6]: ParseResult(scheme='ftp', netloc='stackoverflow.com', path='/questions/21628852/changing-hostname-in-a-url', params='', query='', fragment='')\n\n# geturl查看，已经变为想更改的scheme\nIn [7]: u_change_scheme.geturl()\nOut[7]: 'ftp://stackoverflow.com/questions/21628852/changing-hostname-in-a-url'\n\n# 可一次更改多个值\nIn [8]: u_change_scheme_and_netloc = u._replace(scheme=\"http\", netloc=\"candypapi.com\")\n\n# 查看geturl\nIn [9]: u_change_scheme_and_netloc.geturl()\nOut[9]: 'http://candypapi.com/questions/21628852/changing-hostname-in-a-url'\n\n```\n\n> 参考：[changing-hostname-in-a-url](https://stackoverflow.com/questions/21628852/changing-hostname-in-a-url)\n","source":"_posts/使用urlparse修改url.md","raw":"---\ntitle: 使用urlparse修改url\ndate: 2017-11-06 09:39:20\ntags: \n- python\n- urlparse\ncategories:\n- python\npermalink: Use-urlparse-to-change-the-url\n---\n\n使用urlparse修改url中的各各部分\n=====\n\n## 举例来说明\n\n![](http://oi1wvrjc2.bkt.clouddn.com/17-9-26/66144228.jpg)\n\n`url=\"https://stackoverflow.com/questions/21628852/changing-hostname-in-a-url\"`\n\n```python\n# 引入urlparse包\nIn [2]: import urlparse \n\n# 实例化url链接，变为urlparse对象\nIn [3]: u = urlparse.urlparse(url)\n\n# 查看u中所包含的\nIn [4]: u\nOut[4]: ParseResult(scheme='https', netloc='stackoverflow.com', path='/questions/21628852/changing-hostname-in-a-url', params='', query='', fragment='')\n\n# 将scheme进行替换，并赋值给u_change_scheme\nIn [5]: u_change_scheme = u._replace(scheme=\"ftp\")\n\n# 查看u_change_scheme对象\nIn [6]: u_change_scheme\nOut[6]: ParseResult(scheme='ftp', netloc='stackoverflow.com', path='/questions/21628852/changing-hostname-in-a-url', params='', query='', fragment='')\n\n# geturl查看，已经变为想更改的scheme\nIn [7]: u_change_scheme.geturl()\nOut[7]: 'ftp://stackoverflow.com/questions/21628852/changing-hostname-in-a-url'\n\n# 可一次更改多个值\nIn [8]: u_change_scheme_and_netloc = u._replace(scheme=\"http\", netloc=\"candypapi.com\")\n\n# 查看geturl\nIn [9]: u_change_scheme_and_netloc.geturl()\nOut[9]: 'http://candypapi.com/questions/21628852/changing-hostname-in-a-url'\n\n```\n\n> 参考：[changing-hostname-in-a-url](https://stackoverflow.com/questions/21628852/changing-hostname-in-a-url)\n","slug":"Use-urlparse-to-change-the-url","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqn3002p4rd3qxosl85x","content":"<h1 id=\"使用urlparse修改url中的各各部分\"><a href=\"#使用urlparse修改url中的各各部分\" class=\"headerlink\" title=\"使用urlparse修改url中的各各部分\"></a>使用urlparse修改url中的各各部分</h1><h2 id=\"举例来说明\"><a href=\"#举例来说明\" class=\"headerlink\" title=\"举例来说明\"></a>举例来说明</h2><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-9-26/66144228.jpg\" alt=\"\"></p>\n<p><code>url=&quot;https://stackoverflow.com/questions/21628852/changing-hostname-in-a-url&quot;</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 引入urlparse包</span></div><div class=\"line\">In [<span class=\"number\">2</span>]: <span class=\"keyword\">import</span> urlparse </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 实例化url链接，变为urlparse对象</span></div><div class=\"line\">In [<span class=\"number\">3</span>]: u = urlparse.urlparse(url)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 查看u中所包含的</span></div><div class=\"line\">In [<span class=\"number\">4</span>]: u</div><div class=\"line\">Out[<span class=\"number\">4</span>]: ParseResult(scheme=<span class=\"string\">'https'</span>, netloc=<span class=\"string\">'stackoverflow.com'</span>, path=<span class=\"string\">'/questions/21628852/changing-hostname-in-a-url'</span>, params=<span class=\"string\">''</span>, query=<span class=\"string\">''</span>, fragment=<span class=\"string\">''</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 将scheme进行替换，并赋值给u_change_scheme</span></div><div class=\"line\">In [<span class=\"number\">5</span>]: u_change_scheme = u._replace(scheme=<span class=\"string\">\"ftp\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 查看u_change_scheme对象</span></div><div class=\"line\">In [<span class=\"number\">6</span>]: u_change_scheme</div><div class=\"line\">Out[<span class=\"number\">6</span>]: ParseResult(scheme=<span class=\"string\">'ftp'</span>, netloc=<span class=\"string\">'stackoverflow.com'</span>, path=<span class=\"string\">'/questions/21628852/changing-hostname-in-a-url'</span>, params=<span class=\"string\">''</span>, query=<span class=\"string\">''</span>, fragment=<span class=\"string\">''</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># geturl查看，已经变为想更改的scheme</span></div><div class=\"line\">In [<span class=\"number\">7</span>]: u_change_scheme.geturl()</div><div class=\"line\">Out[<span class=\"number\">7</span>]: <span class=\"string\">'ftp://stackoverflow.com/questions/21628852/changing-hostname-in-a-url'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 可一次更改多个值</span></div><div class=\"line\">In [<span class=\"number\">8</span>]: u_change_scheme_and_netloc = u._replace(scheme=<span class=\"string\">\"http\"</span>, netloc=<span class=\"string\">\"candypapi.com\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 查看geturl</span></div><div class=\"line\">In [<span class=\"number\">9</span>]: u_change_scheme_and_netloc.geturl()</div><div class=\"line\">Out[<span class=\"number\">9</span>]: <span class=\"string\">'http://candypapi.com/questions/21628852/changing-hostname-in-a-url'</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>参考：<a href=\"https://stackoverflow.com/questions/21628852/changing-hostname-in-a-url\" target=\"_blank\" rel=\"external\">changing-hostname-in-a-url</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"使用urlparse修改url中的各各部分\"><a href=\"#使用urlparse修改url中的各各部分\" class=\"headerlink\" title=\"使用urlparse修改url中的各各部分\"></a>使用urlparse修改url中的各各部分</h1><h2 id=\"举例来说明\"><a href=\"#举例来说明\" class=\"headerlink\" title=\"举例来说明\"></a>举例来说明</h2><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-9-26/66144228.jpg\" alt=\"\"></p>\n<p><code>url=&quot;https://stackoverflow.com/questions/21628852/changing-hostname-in-a-url&quot;</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 引入urlparse包</span></div><div class=\"line\">In [<span class=\"number\">2</span>]: <span class=\"keyword\">import</span> urlparse </div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 实例化url链接，变为urlparse对象</span></div><div class=\"line\">In [<span class=\"number\">3</span>]: u = urlparse.urlparse(url)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 查看u中所包含的</span></div><div class=\"line\">In [<span class=\"number\">4</span>]: u</div><div class=\"line\">Out[<span class=\"number\">4</span>]: ParseResult(scheme=<span class=\"string\">'https'</span>, netloc=<span class=\"string\">'stackoverflow.com'</span>, path=<span class=\"string\">'/questions/21628852/changing-hostname-in-a-url'</span>, params=<span class=\"string\">''</span>, query=<span class=\"string\">''</span>, fragment=<span class=\"string\">''</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 将scheme进行替换，并赋值给u_change_scheme</span></div><div class=\"line\">In [<span class=\"number\">5</span>]: u_change_scheme = u._replace(scheme=<span class=\"string\">\"ftp\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 查看u_change_scheme对象</span></div><div class=\"line\">In [<span class=\"number\">6</span>]: u_change_scheme</div><div class=\"line\">Out[<span class=\"number\">6</span>]: ParseResult(scheme=<span class=\"string\">'ftp'</span>, netloc=<span class=\"string\">'stackoverflow.com'</span>, path=<span class=\"string\">'/questions/21628852/changing-hostname-in-a-url'</span>, params=<span class=\"string\">''</span>, query=<span class=\"string\">''</span>, fragment=<span class=\"string\">''</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># geturl查看，已经变为想更改的scheme</span></div><div class=\"line\">In [<span class=\"number\">7</span>]: u_change_scheme.geturl()</div><div class=\"line\">Out[<span class=\"number\">7</span>]: <span class=\"string\">'ftp://stackoverflow.com/questions/21628852/changing-hostname-in-a-url'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 可一次更改多个值</span></div><div class=\"line\">In [<span class=\"number\">8</span>]: u_change_scheme_and_netloc = u._replace(scheme=<span class=\"string\">\"http\"</span>, netloc=<span class=\"string\">\"candypapi.com\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># 查看geturl</span></div><div class=\"line\">In [<span class=\"number\">9</span>]: u_change_scheme_and_netloc.geturl()</div><div class=\"line\">Out[<span class=\"number\">9</span>]: <span class=\"string\">'http://candypapi.com/questions/21628852/changing-hostname-in-a-url'</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>参考：<a href=\"https://stackoverflow.com/questions/21628852/changing-hostname-in-a-url\" target=\"_blank\" rel=\"external\">changing-hostname-in-a-url</a></p>\n</blockquote>\n"},{"title":"图片测试","date":"2017-05-02T03:05:40.000Z","_content":"\n# this is the photo test page\n\n![one](http://oi1wvrjc2.bkt.clouddn.com/17-2-8/44364820-file_1486535637317_11f27.png)\n![two](http://oi1wvrjc2.bkt.clouddn.com/17-5-2/62310626-file_1493692370185_166d9.jpg)\n![three](http://oi1wvrjc2.bkt.clouddn.com/2017-01-03%2011-19-20%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png)\n","source":"_posts/图片测试.md","raw":"---\ntitle: 图片测试\ndate: 2017-05-02 11:05:40\ntags:\npermalink: photo-test\n---\n\n# this is the photo test page\n\n![one](http://oi1wvrjc2.bkt.clouddn.com/17-2-8/44364820-file_1486535637317_11f27.png)\n![two](http://oi1wvrjc2.bkt.clouddn.com/17-5-2/62310626-file_1493692370185_166d9.jpg)\n![three](http://oi1wvrjc2.bkt.clouddn.com/2017-01-03%2011-19-20%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png)\n","slug":"photo-test","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqn5002t4rd32uljrzqb","content":"<h1 id=\"this-is-the-photo-test-page\"><a href=\"#this-is-the-photo-test-page\" class=\"headerlink\" title=\"this is the photo test page\"></a>this is the photo test page</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-2-8/44364820-file_1486535637317_11f27.png\" alt=\"one\"><br><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-2/62310626-file_1493692370185_166d9.jpg\" alt=\"two\"><br><img src=\"http://oi1wvrjc2.bkt.clouddn.com/2017-01-03%2011-19-20%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png\" alt=\"three\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"this-is-the-photo-test-page\"><a href=\"#this-is-the-photo-test-page\" class=\"headerlink\" title=\"this is the photo test page\"></a>this is the photo test page</h1><p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-2-8/44364820-file_1486535637317_11f27.png\" alt=\"one\"><br><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-2/62310626-file_1493692370185_166d9.jpg\" alt=\"two\"><br><img src=\"http://oi1wvrjc2.bkt.clouddn.com/2017-01-03%2011-19-20%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE1.png\" alt=\"three\"></p>\n"},{"title":"在POST请求中，如何获取select的值","date":"2017-02-08T02:05:59.000Z","_content":"\n## 从页面POST请求中，如何获取select中option的值\n\n### GET方法中获取\n通过GET方法传参，在request.GET中，可以获取到相对应的参数的值，\n但POST方法中只能获取到input框中传的内容\n如果真是这样的话，那就太恶心了，好在有stackoverflow\n\n<!--more-->\n### stackoverflow中的解决办法\n[解决方案](http://stackoverflow.com/questions/39200802/django-post-get-options-from-select)\n\n`request.POST.getlist(\"name\")[0]`\n\n在POST方法中居然还有个getlist，当时我debug时也没有看到有此方法，使用了一下，\n果然可正常获取。\n\n如图：\n\n![request.POST.getlist](http://oi1wvrjc2.bkt.clouddn.com/django_requsts_post_getlist.png)\n\n","source":"_posts/在POST请求中，如何获取select的值.md","raw":"---\ntitle: 在POST请求中，如何获取select的值\ndate: 2017-02-08 10:05:59\ntags:\n- django\n---\n\n## 从页面POST请求中，如何获取select中option的值\n\n### GET方法中获取\n通过GET方法传参，在request.GET中，可以获取到相对应的参数的值，\n但POST方法中只能获取到input框中传的内容\n如果真是这样的话，那就太恶心了，好在有stackoverflow\n\n<!--more-->\n### stackoverflow中的解决办法\n[解决方案](http://stackoverflow.com/questions/39200802/django-post-get-options-from-select)\n\n`request.POST.getlist(\"name\")[0]`\n\n在POST方法中居然还有个getlist，当时我debug时也没有看到有此方法，使用了一下，\n果然可正常获取。\n\n如图：\n\n![request.POST.getlist](http://oi1wvrjc2.bkt.clouddn.com/django_requsts_post_getlist.png)\n\n","slug":"在POST请求中，如何获取select的值","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqn6002v4rd309k7lwtc","content":"<h2 id=\"从页面POST请求中，如何获取select中option的值\"><a href=\"#从页面POST请求中，如何获取select中option的值\" class=\"headerlink\" title=\"从页面POST请求中，如何获取select中option的值\"></a>从页面POST请求中，如何获取select中option的值</h2><h3 id=\"GET方法中获取\"><a href=\"#GET方法中获取\" class=\"headerlink\" title=\"GET方法中获取\"></a>GET方法中获取</h3><p>通过GET方法传参，在request.GET中，可以获取到相对应的参数的值，<br>但POST方法中只能获取到input框中传的内容<br>如果真是这样的话，那就太恶心了，好在有stackoverflow</p>\n<a id=\"more\"></a>\n<h3 id=\"stackoverflow中的解决办法\"><a href=\"#stackoverflow中的解决办法\" class=\"headerlink\" title=\"stackoverflow中的解决办法\"></a>stackoverflow中的解决办法</h3><p><a href=\"http://stackoverflow.com/questions/39200802/django-post-get-options-from-select\" target=\"_blank\" rel=\"external\">解决方案</a></p>\n<p><code>request.POST.getlist(&quot;name&quot;)[0]</code></p>\n<p>在POST方法中居然还有个getlist，当时我debug时也没有看到有此方法，使用了一下，<br>果然可正常获取。</p>\n<p>如图：</p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/django_requsts_post_getlist.png\" alt=\"request.POST.getlist\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"从页面POST请求中，如何获取select中option的值\"><a href=\"#从页面POST请求中，如何获取select中option的值\" class=\"headerlink\" title=\"从页面POST请求中，如何获取select中option的值\"></a>从页面POST请求中，如何获取select中option的值</h2><h3 id=\"GET方法中获取\"><a href=\"#GET方法中获取\" class=\"headerlink\" title=\"GET方法中获取\"></a>GET方法中获取</h3><p>通过GET方法传参，在request.GET中，可以获取到相对应的参数的值，<br>但POST方法中只能获取到input框中传的内容<br>如果真是这样的话，那就太恶心了，好在有stackoverflow</p>","more":"<h3 id=\"stackoverflow中的解决办法\"><a href=\"#stackoverflow中的解决办法\" class=\"headerlink\" title=\"stackoverflow中的解决办法\"></a>stackoverflow中的解决办法</h3><p><a href=\"http://stackoverflow.com/questions/39200802/django-post-get-options-from-select\" target=\"_blank\" rel=\"external\">解决方案</a></p>\n<p><code>request.POST.getlist(&quot;name&quot;)[0]</code></p>\n<p>在POST方法中居然还有个getlist，当时我debug时也没有看到有此方法，使用了一下，<br>果然可正常获取。</p>\n<p>如图：</p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/django_requsts_post_getlist.png\" alt=\"request.POST.getlist\"></p>"},{"title":"基于python环境的各类环境搭建","date":"2016-12-12T08:01:13.000Z","_content":"基于python环境的各类环境搭建\n=====\n\n## ---服务类---\n\n|序号 |  功能|作用    |状态|\n|:---|:-----|:---|:---|\n|1|django跑起来|站点|完成|\n|2|gunicorn跑起来|内部分发服务|完成|\n|3|nginx跑起来|静态外部服务器|完成|\n|4|supervisor跑起来|任务监控|完成|\n|5|celery跑起来|定时任务|未完成|\n|6|redis跑起来|nosql快速缓存|未完成|\n|-|-|-|-|\n\n|1|jenkins走起|testcase定时任务及结果|完成|\n\n<!--more-->\n\n## ---页面类---\n\n|序号|功能|作用|状态|\n|:---|----|----|---|\n|1|前台页面做起来|把后台功能及数据展示做到前台页面上|部分完成|\n|2|前台样式用起来|前台样式使用通用bootstrap样式包|未完成|\n|3|---|---|---|\n\n### 1. django跑起来\n\n引用：\n\n官方文档\n\n\n\n#### 用到的功能：\n\n模板分页：\n\nhttps://mozillazg.com/2013/01/django-pagination-by-use-paginator.html\n\nhttp://python.usyiyi.cn/django/topics/pagination.html\n\n\n\n\n\n### 2. gunicorn跑起来\n\n引用：\n\nhttp://foofish.net/blog/18/django-deploy\n\nhttp://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/\n\n\n\n#### gunicorn超时时间设置\n\n引用：\n\nhttp://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem\n\n脚本文件bin/gunicorn_start.sh\n\n```python\n\nNUM_WORKERS=3\nTIMEOUT=120\n\nexec gunicorn ${DJANGO_WSGI_MODULE}:application \\\n--name $NAME \\\n--workers $NUM_WORKERS \\\n--timeout $TIMEOUT \\\n--log-level=debug \\\n--bind=127.0.0.1:9000 \\\n--pid=$PIDFILE\n```\n\n### 3. nginx跑起来\n\n引用：\n\nhttp://blog.csdn.net/qq_24861509/article/details/45727983\n\nhttp://www.111cn.net/sys/linux/79751.htm\n\n\n\n### 4. supervisor跑起来\n\n- 安装\n\n`sudo apt-get install supervisor`\n\n- 启动\n\n```shell\n\nservice supervisor start/restart/stop\n\n/etc/init.d/supervisor start/restart/stop\n\n```\n\n- 配置文件位置\n\n`/etc/supervisor/supervisord.conf`\n\n```\n\n; supervisor config file\n\n\n\n[unix_http_server]\n\n#file=/var/run/supervisor.sock   ; (the path to the socket file)\n\nfile=/tmp/supervisor.sock\t;\n\nchmod=0700                       ; sockef file mode (default 0700)\n\n\n\n[supervisord]\n\nlogfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)\n\npidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)\n\nchildlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)\n\n\n\n; the below section must remain in the config file for RPC\n\n; (supervisorctl/web interface) to work, additional interfaces may be\n\n; added by defining them in separate rpcinterface: sections\n\n[rpcinterface:supervisor]\n\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n\n\n[supervisorctl]\n\n#serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket\n\nserverurl=unix:///tmp/supervisor.sock ;\n\n\n\n; The [include] section can just contain the \"files\" setting.  This\n\n; setting can list multiple files (separated by whitespace or\n\n; newlines).  It can also contain wildcards.  The filenames are\n\n; interpreted as relative to this file.  Included files *cannot*\n\n; include files themselves.\n\n\n\n[include]\n\nfiles = /etc/supervisor/conf.d/*.conf\n\n```\n\n\n\n- 增加任务\n\n`/etc/supervisor/conf.d/autohome_celery.conf`\n\n```config\n\n[program:autohome_celery]\n\ndirectory = /home/hanz/workspace/PycharmProjects/autohome_data_site\n\ncommand = /home/hanz/workspace/my-venv2.7/bin/python manage.py celery worker -c 6 -l debug\n\nautostart=true\n\nautorestart=true\n\nstartsecs=3\n\nuser = hanz                                                          ;\n\nstdout_logfile = /home/hanz/workspace/PycharmProjects/autohome_data_site/logs/autohome_celery.log\n\nredirect_stderr = true\n\n```\n\n- 添加web显示页面\n\n```config\n\n[inet_http_server]         ; inet (TCP) server disabled by default\n\nport=9001        ; (ip_address:port specifier, *:port for all iface)\n\nusername=admin             ; (default is no username (open server))\n\npassword=123               ; (default is no password (open server))\n\n```\n\n引用：\n\nhttp://www.cnblogs.com/gsblog/p/3730293.html\n\nhttp://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html\n\nhttp://www.cnblogs.com/maseng/p/4670473.html\n\nhttp://liyangliang.me/posts/2015/06/using-supervisor/\n\n\n\n### 5. celery跑起来\n\n- 独立celery+python脚本\n\n\n\n- django-celery替代celery，在django项目中的使用方法\n\n\n\n- 监控界面：flower\n\n1. 安装：\n\n`pip install flower`\n\n2. 使用方法：\n\n运行服务打开http://localhost:5555：\n\n`flower --port=5555`\n\n或者从celery运行：\n\n`celery flower --address=127.0.0.1 --port=5555`\n\nBroker URL 和其他配置选项能够通过一个标准的celery选项：\n\n`celery flower --broker=amqp://guest:guest@localhost:5672//`\n\n在setting中添加：\n\n```bash\ndjcelery.setup_loader()\nCELERY_TIMEZONE = 'Asia/Shanghai'\nBROKER_URL = 'redis://127.0.0.1:6379/8'\nCELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/9'\nCELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'\nCELERY_IMPORTS = (\"apps.app1.tasks\", \"autohome.views\")\n```\n\n想要使用任务 ，一定要imports对应的py文件，修改后需要重启celery服务\n\n引用：\n\nhttp://flower-docs-cn.readthedocs.io/zh/latest/install.html\n\n-\n\n引用：\n> http://www.celeryproject.org/\n> http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000\n> http://www.jianshu.com/p/1840035cb510\n> http://www.dongwm.com/archives/how-to-use-celery/\n> http://liuzxc.github.io/blog/celery/\nhttp://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/\nhttp://blog.csdn.net/vintage_1/article/details/47664297\n\n\ndjango celery\n\n> http://blog.csdn.net/vintage_1/article/details/47664297\n> http://maslino.website/post/celery-documentation-django.html\n\n\n\n### 6. jenkins走起\n\n- jenkins 邮件配置\n\n引用：\n\n> http://www.cnblogs.com/amosli/p/3549918.html\n> http://www.cnblogs.com/GGHHLL/p/jenkins.html\n\n","source":"_posts/基于python环境的各类环境搭建.md","raw":"---\ntitle: 基于python环境的各类环境搭建\ndate: 2016-12-12 16:01:13\ntags:\n- python\n- gunicorn\n- django\n- supervisor\n- celery\ncategories:\n- python\n---\n基于python环境的各类环境搭建\n=====\n\n## ---服务类---\n\n|序号 |  功能|作用    |状态|\n|:---|:-----|:---|:---|\n|1|django跑起来|站点|完成|\n|2|gunicorn跑起来|内部分发服务|完成|\n|3|nginx跑起来|静态外部服务器|完成|\n|4|supervisor跑起来|任务监控|完成|\n|5|celery跑起来|定时任务|未完成|\n|6|redis跑起来|nosql快速缓存|未完成|\n|-|-|-|-|\n\n|1|jenkins走起|testcase定时任务及结果|完成|\n\n<!--more-->\n\n## ---页面类---\n\n|序号|功能|作用|状态|\n|:---|----|----|---|\n|1|前台页面做起来|把后台功能及数据展示做到前台页面上|部分完成|\n|2|前台样式用起来|前台样式使用通用bootstrap样式包|未完成|\n|3|---|---|---|\n\n### 1. django跑起来\n\n引用：\n\n官方文档\n\n\n\n#### 用到的功能：\n\n模板分页：\n\nhttps://mozillazg.com/2013/01/django-pagination-by-use-paginator.html\n\nhttp://python.usyiyi.cn/django/topics/pagination.html\n\n\n\n\n\n### 2. gunicorn跑起来\n\n引用：\n\nhttp://foofish.net/blog/18/django-deploy\n\nhttp://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/\n\n\n\n#### gunicorn超时时间设置\n\n引用：\n\nhttp://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem\n\n脚本文件bin/gunicorn_start.sh\n\n```python\n\nNUM_WORKERS=3\nTIMEOUT=120\n\nexec gunicorn ${DJANGO_WSGI_MODULE}:application \\\n--name $NAME \\\n--workers $NUM_WORKERS \\\n--timeout $TIMEOUT \\\n--log-level=debug \\\n--bind=127.0.0.1:9000 \\\n--pid=$PIDFILE\n```\n\n### 3. nginx跑起来\n\n引用：\n\nhttp://blog.csdn.net/qq_24861509/article/details/45727983\n\nhttp://www.111cn.net/sys/linux/79751.htm\n\n\n\n### 4. supervisor跑起来\n\n- 安装\n\n`sudo apt-get install supervisor`\n\n- 启动\n\n```shell\n\nservice supervisor start/restart/stop\n\n/etc/init.d/supervisor start/restart/stop\n\n```\n\n- 配置文件位置\n\n`/etc/supervisor/supervisord.conf`\n\n```\n\n; supervisor config file\n\n\n\n[unix_http_server]\n\n#file=/var/run/supervisor.sock   ; (the path to the socket file)\n\nfile=/tmp/supervisor.sock\t;\n\nchmod=0700                       ; sockef file mode (default 0700)\n\n\n\n[supervisord]\n\nlogfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)\n\npidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)\n\nchildlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)\n\n\n\n; the below section must remain in the config file for RPC\n\n; (supervisorctl/web interface) to work, additional interfaces may be\n\n; added by defining them in separate rpcinterface: sections\n\n[rpcinterface:supervisor]\n\nsupervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface\n\n\n\n[supervisorctl]\n\n#serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket\n\nserverurl=unix:///tmp/supervisor.sock ;\n\n\n\n; The [include] section can just contain the \"files\" setting.  This\n\n; setting can list multiple files (separated by whitespace or\n\n; newlines).  It can also contain wildcards.  The filenames are\n\n; interpreted as relative to this file.  Included files *cannot*\n\n; include files themselves.\n\n\n\n[include]\n\nfiles = /etc/supervisor/conf.d/*.conf\n\n```\n\n\n\n- 增加任务\n\n`/etc/supervisor/conf.d/autohome_celery.conf`\n\n```config\n\n[program:autohome_celery]\n\ndirectory = /home/hanz/workspace/PycharmProjects/autohome_data_site\n\ncommand = /home/hanz/workspace/my-venv2.7/bin/python manage.py celery worker -c 6 -l debug\n\nautostart=true\n\nautorestart=true\n\nstartsecs=3\n\nuser = hanz                                                          ;\n\nstdout_logfile = /home/hanz/workspace/PycharmProjects/autohome_data_site/logs/autohome_celery.log\n\nredirect_stderr = true\n\n```\n\n- 添加web显示页面\n\n```config\n\n[inet_http_server]         ; inet (TCP) server disabled by default\n\nport=9001        ; (ip_address:port specifier, *:port for all iface)\n\nusername=admin             ; (default is no username (open server))\n\npassword=123               ; (default is no password (open server))\n\n```\n\n引用：\n\nhttp://www.cnblogs.com/gsblog/p/3730293.html\n\nhttp://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html\n\nhttp://www.cnblogs.com/maseng/p/4670473.html\n\nhttp://liyangliang.me/posts/2015/06/using-supervisor/\n\n\n\n### 5. celery跑起来\n\n- 独立celery+python脚本\n\n\n\n- django-celery替代celery，在django项目中的使用方法\n\n\n\n- 监控界面：flower\n\n1. 安装：\n\n`pip install flower`\n\n2. 使用方法：\n\n运行服务打开http://localhost:5555：\n\n`flower --port=5555`\n\n或者从celery运行：\n\n`celery flower --address=127.0.0.1 --port=5555`\n\nBroker URL 和其他配置选项能够通过一个标准的celery选项：\n\n`celery flower --broker=amqp://guest:guest@localhost:5672//`\n\n在setting中添加：\n\n```bash\ndjcelery.setup_loader()\nCELERY_TIMEZONE = 'Asia/Shanghai'\nBROKER_URL = 'redis://127.0.0.1:6379/8'\nCELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/9'\nCELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'\nCELERY_IMPORTS = (\"apps.app1.tasks\", \"autohome.views\")\n```\n\n想要使用任务 ，一定要imports对应的py文件，修改后需要重启celery服务\n\n引用：\n\nhttp://flower-docs-cn.readthedocs.io/zh/latest/install.html\n\n-\n\n引用：\n> http://www.celeryproject.org/\n> http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000\n> http://www.jianshu.com/p/1840035cb510\n> http://www.dongwm.com/archives/how-to-use-celery/\n> http://liuzxc.github.io/blog/celery/\nhttp://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/\nhttp://blog.csdn.net/vintage_1/article/details/47664297\n\n\ndjango celery\n\n> http://blog.csdn.net/vintage_1/article/details/47664297\n> http://maslino.website/post/celery-documentation-django.html\n\n\n\n### 6. jenkins走起\n\n- jenkins 邮件配置\n\n引用：\n\n> http://www.cnblogs.com/amosli/p/3549918.html\n> http://www.cnblogs.com/GGHHLL/p/jenkins.html\n\n","slug":"基于python环境的各类环境搭建","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqn7002z4rd3no88ijri","content":"<h1 id=\"基于python环境的各类环境搭建\"><a href=\"#基于python环境的各类环境搭建\" class=\"headerlink\" title=\"基于python环境的各类环境搭建\"></a>基于python环境的各类环境搭建</h1><h2 id=\"—服务类—\"><a href=\"#—服务类—\" class=\"headerlink\" title=\"—服务类—\"></a>—服务类—</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:left\">功能</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">django跑起来</td>\n<td style=\"text-align:left\">站点</td>\n<td style=\"text-align:left\">完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">gunicorn跑起来</td>\n<td style=\"text-align:left\">内部分发服务</td>\n<td style=\"text-align:left\">完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">nginx跑起来</td>\n<td style=\"text-align:left\">静态外部服务器</td>\n<td style=\"text-align:left\">完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">supervisor跑起来</td>\n<td style=\"text-align:left\">任务监控</td>\n<td style=\"text-align:left\">完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">celery跑起来</td>\n<td style=\"text-align:left\">定时任务</td>\n<td style=\"text-align:left\">未完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">redis跑起来</td>\n<td style=\"text-align:left\">nosql快速缓存</td>\n<td style=\"text-align:left\">未完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n</tr>\n</tbody>\n</table>\n<p>|1|jenkins走起|testcase定时任务及结果|完成|</p>\n<a id=\"more\"></a>\n<h2 id=\"—页面类—\"><a href=\"#—页面类—\" class=\"headerlink\" title=\"—页面类—\"></a>—页面类—</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th>功能</th>\n<th>作用</th>\n<th>状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td>前台页面做起来</td>\n<td>把后台功能及数据展示做到前台页面上</td>\n<td>部分完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td>前台样式用起来</td>\n<td>前台样式使用通用bootstrap样式包</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1-django跑起来\"><a href=\"#1-django跑起来\" class=\"headerlink\" title=\"1. django跑起来\"></a>1. django跑起来</h3><p>引用：</p>\n<p>官方文档</p>\n<h4 id=\"用到的功能：\"><a href=\"#用到的功能：\" class=\"headerlink\" title=\"用到的功能：\"></a>用到的功能：</h4><p>模板分页：</p>\n<p><a href=\"https://mozillazg.com/2013/01/django-pagination-by-use-paginator.html\" target=\"_blank\" rel=\"external\">https://mozillazg.com/2013/01/django-pagination-by-use-paginator.html</a></p>\n<p><a href=\"http://python.usyiyi.cn/django/topics/pagination.html\" target=\"_blank\" rel=\"external\">http://python.usyiyi.cn/django/topics/pagination.html</a></p>\n<h3 id=\"2-gunicorn跑起来\"><a href=\"#2-gunicorn跑起来\" class=\"headerlink\" title=\"2. gunicorn跑起来\"></a>2. gunicorn跑起来</h3><p>引用：</p>\n<p><a href=\"http://foofish.net/blog/18/django-deploy\" target=\"_blank\" rel=\"external\">http://foofish.net/blog/18/django-deploy</a></p>\n<p><a href=\"http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/\" target=\"_blank\" rel=\"external\">http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/</a></p>\n<h4 id=\"gunicorn超时时间设置\"><a href=\"#gunicorn超时时间设置\" class=\"headerlink\" title=\"gunicorn超时时间设置\"></a>gunicorn超时时间设置</h4><p>引用：</p>\n<p><a href=\"http://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem</a></p>\n<p>脚本文件bin/gunicorn_start.sh</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">NUM_WORKERS=<span class=\"number\">3</span></div><div class=\"line\">TIMEOUT=<span class=\"number\">120</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">exec</span> gunicorn $&#123;DJANGO_WSGI_MODULE&#125;:application \\</div><div class=\"line\">--name $NAME \\</div><div class=\"line\">--workers $NUM_WORKERS \\</div><div class=\"line\">--timeout $TIMEOUT \\</div><div class=\"line\">--log-level=debug \\</div><div class=\"line\">--bind=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">9000</span> \\</div><div class=\"line\">--pid=$PIDFILE</div></pre></td></tr></table></figure>\n<h3 id=\"3-nginx跑起来\"><a href=\"#3-nginx跑起来\" class=\"headerlink\" title=\"3. nginx跑起来\"></a>3. nginx跑起来</h3><p>引用：</p>\n<p><a href=\"http://blog.csdn.net/qq_24861509/article/details/45727983\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/qq_24861509/article/details/45727983</a></p>\n<p><a href=\"http://www.111cn.net/sys/linux/79751.htm\" target=\"_blank\" rel=\"external\">http://www.111cn.net/sys/linux/79751.htm</a></p>\n<h3 id=\"4-supervisor跑起来\"><a href=\"#4-supervisor跑起来\" class=\"headerlink\" title=\"4. supervisor跑起来\"></a>4. supervisor跑起来</h3><ul>\n<li>安装</li>\n</ul>\n<p><code>sudo apt-get install supervisor</code></p>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">service supervisor start/restart/stop</div><div class=\"line\"></div><div class=\"line\">/etc/init.d/supervisor start/restart/stop</div></pre></td></tr></table></figure>\n<ul>\n<li>配置文件位置</li>\n</ul>\n<p><code>/etc/supervisor/supervisord.conf</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">; supervisor config file</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">[unix_http_server]</div><div class=\"line\"></div><div class=\"line\">#file=/var/run/supervisor.sock   ; (the path to the socket file)</div><div class=\"line\"></div><div class=\"line\">file=/tmp/supervisor.sock\t;</div><div class=\"line\"></div><div class=\"line\">chmod=0700                       ; sockef file mode (default 0700)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">[supervisord]</div><div class=\"line\"></div><div class=\"line\">logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)</div><div class=\"line\"></div><div class=\"line\">pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</div><div class=\"line\"></div><div class=\"line\">childlogdir=/var/log/supervisor            ; (&apos;AUTO&apos; child log dir, default $TEMP)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">; the below section must remain in the config file for RPC</div><div class=\"line\"></div><div class=\"line\">; (supervisorctl/web interface) to work, additional interfaces may be</div><div class=\"line\"></div><div class=\"line\">; added by defining them in separate rpcinterface: sections</div><div class=\"line\"></div><div class=\"line\">[rpcinterface:supervisor]</div><div class=\"line\"></div><div class=\"line\">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">[supervisorctl]</div><div class=\"line\"></div><div class=\"line\">#serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket</div><div class=\"line\"></div><div class=\"line\">serverurl=unix:///tmp/supervisor.sock ;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">; The [include] section can just contain the &quot;files&quot; setting.  This</div><div class=\"line\"></div><div class=\"line\">; setting can list multiple files (separated by whitespace or</div><div class=\"line\"></div><div class=\"line\">; newlines).  It can also contain wildcards.  The filenames are</div><div class=\"line\"></div><div class=\"line\">; interpreted as relative to this file.  Included files *cannot*</div><div class=\"line\"></div><div class=\"line\">; include files themselves.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">[include]</div><div class=\"line\"></div><div class=\"line\">files = /etc/supervisor/conf.d/*.conf</div></pre></td></tr></table></figure>\n<ul>\n<li>增加任务</li>\n</ul>\n<p><code>/etc/supervisor/conf.d/autohome_celery.conf</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">[program:autohome_celery]</div><div class=\"line\"></div><div class=\"line\">directory = /home/hanz/workspace/PycharmProjects/autohome_data_site</div><div class=\"line\"></div><div class=\"line\">command = /home/hanz/workspace/my-venv2.7/bin/python manage.py celery worker -c 6 -l debug</div><div class=\"line\"></div><div class=\"line\">autostart=true</div><div class=\"line\"></div><div class=\"line\">autorestart=true</div><div class=\"line\"></div><div class=\"line\">startsecs=3</div><div class=\"line\"></div><div class=\"line\">user = hanz                                                          ;</div><div class=\"line\"></div><div class=\"line\">stdout_logfile = /home/hanz/workspace/PycharmProjects/autohome_data_site/logs/autohome_celery.log</div><div class=\"line\"></div><div class=\"line\">redirect_stderr = true</div></pre></td></tr></table></figure>\n<ul>\n<li>添加web显示页面</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">[inet_http_server]         ; inet (TCP) server disabled by default</div><div class=\"line\"></div><div class=\"line\">port=9001        ; (ip_address:port specifier, *:port for all iface)</div><div class=\"line\"></div><div class=\"line\">username=admin             ; (default is no username (open server))</div><div class=\"line\"></div><div class=\"line\">password=123               ; (default is no password (open server))</div></pre></td></tr></table></figure>\n<p>引用：</p>\n<p><a href=\"http://www.cnblogs.com/gsblog/p/3730293.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/gsblog/p/3730293.html</a></p>\n<p><a href=\"http://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html</a></p>\n<p><a href=\"http://www.cnblogs.com/maseng/p/4670473.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/maseng/p/4670473.html</a></p>\n<p><a href=\"http://liyangliang.me/posts/2015/06/using-supervisor/\" target=\"_blank\" rel=\"external\">http://liyangliang.me/posts/2015/06/using-supervisor/</a></p>\n<h3 id=\"5-celery跑起来\"><a href=\"#5-celery跑起来\" class=\"headerlink\" title=\"5. celery跑起来\"></a>5. celery跑起来</h3><ul>\n<li>独立celery+python脚本</li>\n</ul>\n<ul>\n<li>django-celery替代celery，在django项目中的使用方法</li>\n</ul>\n<ul>\n<li>监控界面：flower</li>\n</ul>\n<ol>\n<li>安装：</li>\n</ol>\n<p><code>pip install flower</code></p>\n<ol>\n<li>使用方法：</li>\n</ol>\n<p>运行服务打开<a href=\"http://localhost:5555：\" target=\"_blank\" rel=\"external\">http://localhost:5555：</a></p>\n<p><code>flower --port=5555</code></p>\n<p>或者从celery运行：</p>\n<p><code>celery flower --address=127.0.0.1 --port=5555</code></p>\n<p>Broker URL 和其他配置选项能够通过一个标准的celery选项：</p>\n<p><code>celery flower --broker=amqp://guest:guest@localhost:5672//</code></p>\n<p>在setting中添加：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">djcelery.setup_loader()</div><div class=\"line\">CELERY_TIMEZONE = <span class=\"string\">'Asia/Shanghai'</span></div><div class=\"line\">BROKER_URL = <span class=\"string\">'redis://127.0.0.1:6379/8'</span></div><div class=\"line\">CELERY_RESULT_BACKEND = <span class=\"string\">'redis://127.0.0.1:6379/9'</span></div><div class=\"line\">CELERYBEAT_SCHEDULER = <span class=\"string\">'djcelery.schedulers.DatabaseScheduler'</span></div><div class=\"line\">CELERY_IMPORTS = (<span class=\"string\">\"apps.app1.tasks\"</span>, <span class=\"string\">\"autohome.views\"</span>)</div></pre></td></tr></table></figure>\n<p>想要使用任务 ，一定要imports对应的py文件，修改后需要重启celery服务</p>\n<p>引用：</p>\n<p><a href=\"http://flower-docs-cn.readthedocs.io/zh/latest/install.html\" target=\"_blank\" rel=\"external\">http://flower-docs-cn.readthedocs.io/zh/latest/install.html</a></p>\n<p>-</p>\n<p>引用：</p>\n<blockquote>\n<p><a href=\"http://www.celeryproject.org/\" target=\"_blank\" rel=\"external\">http://www.celeryproject.org/</a><br><a href=\"http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000\" target=\"_blank\" rel=\"external\">http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000</a><br><a href=\"http://www.jianshu.com/p/1840035cb510\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/1840035cb510</a><br><a href=\"http://www.dongwm.com/archives/how-to-use-celery/\" target=\"_blank\" rel=\"external\">http://www.dongwm.com/archives/how-to-use-celery/</a><br><a href=\"http://liuzxc.github.io/blog/celery/\" target=\"_blank\" rel=\"external\">http://liuzxc.github.io/blog/celery/</a><br><a href=\"http://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/\" target=\"_blank\" rel=\"external\">http://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/</a><br><a href=\"http://blog.csdn.net/vintage_1/article/details/47664297\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/vintage_1/article/details/47664297</a></p>\n</blockquote>\n<p>django celery</p>\n<blockquote>\n<p><a href=\"http://blog.csdn.net/vintage_1/article/details/47664297\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/vintage_1/article/details/47664297</a><br><a href=\"http://maslino.website/post/celery-documentation-django.html\" target=\"_blank\" rel=\"external\">http://maslino.website/post/celery-documentation-django.html</a></p>\n</blockquote>\n<h3 id=\"6-jenkins走起\"><a href=\"#6-jenkins走起\" class=\"headerlink\" title=\"6. jenkins走起\"></a>6. jenkins走起</h3><ul>\n<li>jenkins 邮件配置</li>\n</ul>\n<p>引用：</p>\n<blockquote>\n<p><a href=\"http://www.cnblogs.com/amosli/p/3549918.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/amosli/p/3549918.html</a><br><a href=\"http://www.cnblogs.com/GGHHLL/p/jenkins.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/GGHHLL/p/jenkins.html</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"基于python环境的各类环境搭建\"><a href=\"#基于python环境的各类环境搭建\" class=\"headerlink\" title=\"基于python环境的各类环境搭建\"></a>基于python环境的各类环境搭建</h1><h2 id=\"—服务类—\"><a href=\"#—服务类—\" class=\"headerlink\" title=\"—服务类—\"></a>—服务类—</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th style=\"text-align:left\">功能</th>\n<th style=\"text-align:left\">作用</th>\n<th style=\"text-align:left\">状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">django跑起来</td>\n<td style=\"text-align:left\">站点</td>\n<td style=\"text-align:left\">完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">gunicorn跑起来</td>\n<td style=\"text-align:left\">内部分发服务</td>\n<td style=\"text-align:left\">完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">nginx跑起来</td>\n<td style=\"text-align:left\">静态外部服务器</td>\n<td style=\"text-align:left\">完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">supervisor跑起来</td>\n<td style=\"text-align:left\">任务监控</td>\n<td style=\"text-align:left\">完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">celery跑起来</td>\n<td style=\"text-align:left\">定时任务</td>\n<td style=\"text-align:left\">未完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">redis跑起来</td>\n<td style=\"text-align:left\">nosql快速缓存</td>\n<td style=\"text-align:left\">未完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">-</td>\n</tr>\n</tbody>\n</table>\n<p>|1|jenkins走起|testcase定时任务及结果|完成|</p>","more":"<h2 id=\"—页面类—\"><a href=\"#—页面类—\" class=\"headerlink\" title=\"—页面类—\"></a>—页面类—</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">序号</th>\n<th>功能</th>\n<th>作用</th>\n<th>状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">1</td>\n<td>前台页面做起来</td>\n<td>把后台功能及数据展示做到前台页面上</td>\n<td>部分完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2</td>\n<td>前台样式用起来</td>\n<td>前台样式使用通用bootstrap样式包</td>\n<td>未完成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">3</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1-django跑起来\"><a href=\"#1-django跑起来\" class=\"headerlink\" title=\"1. django跑起来\"></a>1. django跑起来</h3><p>引用：</p>\n<p>官方文档</p>\n<h4 id=\"用到的功能：\"><a href=\"#用到的功能：\" class=\"headerlink\" title=\"用到的功能：\"></a>用到的功能：</h4><p>模板分页：</p>\n<p><a href=\"https://mozillazg.com/2013/01/django-pagination-by-use-paginator.html\" target=\"_blank\" rel=\"external\">https://mozillazg.com/2013/01/django-pagination-by-use-paginator.html</a></p>\n<p><a href=\"http://python.usyiyi.cn/django/topics/pagination.html\" target=\"_blank\" rel=\"external\">http://python.usyiyi.cn/django/topics/pagination.html</a></p>\n<h3 id=\"2-gunicorn跑起来\"><a href=\"#2-gunicorn跑起来\" class=\"headerlink\" title=\"2. gunicorn跑起来\"></a>2. gunicorn跑起来</h3><p>引用：</p>\n<p><a href=\"http://foofish.net/blog/18/django-deploy\" target=\"_blank\" rel=\"external\">http://foofish.net/blog/18/django-deploy</a></p>\n<p><a href=\"http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/\" target=\"_blank\" rel=\"external\">http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/</a></p>\n<h4 id=\"gunicorn超时时间设置\"><a href=\"#gunicorn超时时间设置\" class=\"headerlink\" title=\"gunicorn超时时间设置\"></a>gunicorn超时时间设置</h4><p>引用：</p>\n<p><a href=\"http://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/6816215/gunicorn-nginx-timeout-problem</a></p>\n<p>脚本文件bin/gunicorn_start.sh</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">NUM_WORKERS=<span class=\"number\">3</span></div><div class=\"line\">TIMEOUT=<span class=\"number\">120</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">exec</span> gunicorn $&#123;DJANGO_WSGI_MODULE&#125;:application \\</div><div class=\"line\">--name $NAME \\</div><div class=\"line\">--workers $NUM_WORKERS \\</div><div class=\"line\">--timeout $TIMEOUT \\</div><div class=\"line\">--log-level=debug \\</div><div class=\"line\">--bind=<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>:<span class=\"number\">9000</span> \\</div><div class=\"line\">--pid=$PIDFILE</div></pre></td></tr></table></figure>\n<h3 id=\"3-nginx跑起来\"><a href=\"#3-nginx跑起来\" class=\"headerlink\" title=\"3. nginx跑起来\"></a>3. nginx跑起来</h3><p>引用：</p>\n<p><a href=\"http://blog.csdn.net/qq_24861509/article/details/45727983\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/qq_24861509/article/details/45727983</a></p>\n<p><a href=\"http://www.111cn.net/sys/linux/79751.htm\" target=\"_blank\" rel=\"external\">http://www.111cn.net/sys/linux/79751.htm</a></p>\n<h3 id=\"4-supervisor跑起来\"><a href=\"#4-supervisor跑起来\" class=\"headerlink\" title=\"4. supervisor跑起来\"></a>4. supervisor跑起来</h3><ul>\n<li>安装</li>\n</ul>\n<p><code>sudo apt-get install supervisor</code></p>\n<ul>\n<li>启动</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">service supervisor start/restart/stop</div><div class=\"line\"></div><div class=\"line\">/etc/init.d/supervisor start/restart/stop</div></pre></td></tr></table></figure>\n<ul>\n<li>配置文件位置</li>\n</ul>\n<p><code>/etc/supervisor/supervisord.conf</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">; supervisor config file</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">[unix_http_server]</div><div class=\"line\"></div><div class=\"line\">#file=/var/run/supervisor.sock   ; (the path to the socket file)</div><div class=\"line\"></div><div class=\"line\">file=/tmp/supervisor.sock\t;</div><div class=\"line\"></div><div class=\"line\">chmod=0700                       ; sockef file mode (default 0700)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">[supervisord]</div><div class=\"line\"></div><div class=\"line\">logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)</div><div class=\"line\"></div><div class=\"line\">pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</div><div class=\"line\"></div><div class=\"line\">childlogdir=/var/log/supervisor            ; (&apos;AUTO&apos; child log dir, default $TEMP)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">; the below section must remain in the config file for RPC</div><div class=\"line\"></div><div class=\"line\">; (supervisorctl/web interface) to work, additional interfaces may be</div><div class=\"line\"></div><div class=\"line\">; added by defining them in separate rpcinterface: sections</div><div class=\"line\"></div><div class=\"line\">[rpcinterface:supervisor]</div><div class=\"line\"></div><div class=\"line\">supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">[supervisorctl]</div><div class=\"line\"></div><div class=\"line\">#serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket</div><div class=\"line\"></div><div class=\"line\">serverurl=unix:///tmp/supervisor.sock ;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">; The [include] section can just contain the &quot;files&quot; setting.  This</div><div class=\"line\"></div><div class=\"line\">; setting can list multiple files (separated by whitespace or</div><div class=\"line\"></div><div class=\"line\">; newlines).  It can also contain wildcards.  The filenames are</div><div class=\"line\"></div><div class=\"line\">; interpreted as relative to this file.  Included files *cannot*</div><div class=\"line\"></div><div class=\"line\">; include files themselves.</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">[include]</div><div class=\"line\"></div><div class=\"line\">files = /etc/supervisor/conf.d/*.conf</div></pre></td></tr></table></figure>\n<ul>\n<li>增加任务</li>\n</ul>\n<p><code>/etc/supervisor/conf.d/autohome_celery.conf</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">[program:autohome_celery]</div><div class=\"line\"></div><div class=\"line\">directory = /home/hanz/workspace/PycharmProjects/autohome_data_site</div><div class=\"line\"></div><div class=\"line\">command = /home/hanz/workspace/my-venv2.7/bin/python manage.py celery worker -c 6 -l debug</div><div class=\"line\"></div><div class=\"line\">autostart=true</div><div class=\"line\"></div><div class=\"line\">autorestart=true</div><div class=\"line\"></div><div class=\"line\">startsecs=3</div><div class=\"line\"></div><div class=\"line\">user = hanz                                                          ;</div><div class=\"line\"></div><div class=\"line\">stdout_logfile = /home/hanz/workspace/PycharmProjects/autohome_data_site/logs/autohome_celery.log</div><div class=\"line\"></div><div class=\"line\">redirect_stderr = true</div></pre></td></tr></table></figure>\n<ul>\n<li>添加web显示页面</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">[inet_http_server]         ; inet (TCP) server disabled by default</div><div class=\"line\"></div><div class=\"line\">port=9001        ; (ip_address:port specifier, *:port for all iface)</div><div class=\"line\"></div><div class=\"line\">username=admin             ; (default is no username (open server))</div><div class=\"line\"></div><div class=\"line\">password=123               ; (default is no password (open server))</div></pre></td></tr></table></figure>\n<p>引用：</p>\n<p><a href=\"http://www.cnblogs.com/gsblog/p/3730293.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/gsblog/p/3730293.html</a></p>\n<p><a href=\"http://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/yjf512/archive/2012/03/05/2380496.html</a></p>\n<p><a href=\"http://www.cnblogs.com/maseng/p/4670473.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/maseng/p/4670473.html</a></p>\n<p><a href=\"http://liyangliang.me/posts/2015/06/using-supervisor/\" target=\"_blank\" rel=\"external\">http://liyangliang.me/posts/2015/06/using-supervisor/</a></p>\n<h3 id=\"5-celery跑起来\"><a href=\"#5-celery跑起来\" class=\"headerlink\" title=\"5. celery跑起来\"></a>5. celery跑起来</h3><ul>\n<li>独立celery+python脚本</li>\n</ul>\n<ul>\n<li>django-celery替代celery，在django项目中的使用方法</li>\n</ul>\n<ul>\n<li>监控界面：flower</li>\n</ul>\n<ol>\n<li>安装：</li>\n</ol>\n<p><code>pip install flower</code></p>\n<ol>\n<li>使用方法：</li>\n</ol>\n<p>运行服务打开<a href=\"http://localhost:5555：\" target=\"_blank\" rel=\"external\">http://localhost:5555：</a></p>\n<p><code>flower --port=5555</code></p>\n<p>或者从celery运行：</p>\n<p><code>celery flower --address=127.0.0.1 --port=5555</code></p>\n<p>Broker URL 和其他配置选项能够通过一个标准的celery选项：</p>\n<p><code>celery flower --broker=amqp://guest:guest@localhost:5672//</code></p>\n<p>在setting中添加：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">djcelery.setup_loader()</div><div class=\"line\">CELERY_TIMEZONE = <span class=\"string\">'Asia/Shanghai'</span></div><div class=\"line\">BROKER_URL = <span class=\"string\">'redis://127.0.0.1:6379/8'</span></div><div class=\"line\">CELERY_RESULT_BACKEND = <span class=\"string\">'redis://127.0.0.1:6379/9'</span></div><div class=\"line\">CELERYBEAT_SCHEDULER = <span class=\"string\">'djcelery.schedulers.DatabaseScheduler'</span></div><div class=\"line\">CELERY_IMPORTS = (<span class=\"string\">\"apps.app1.tasks\"</span>, <span class=\"string\">\"autohome.views\"</span>)</div></pre></td></tr></table></figure>\n<p>想要使用任务 ，一定要imports对应的py文件，修改后需要重启celery服务</p>\n<p>引用：</p>\n<p><a href=\"http://flower-docs-cn.readthedocs.io/zh/latest/install.html\" target=\"_blank\" rel=\"external\">http://flower-docs-cn.readthedocs.io/zh/latest/install.html</a></p>\n<p>-</p>\n<p>引用：</p>\n<blockquote>\n<p><a href=\"http://www.celeryproject.org/\" target=\"_blank\" rel=\"external\">http://www.celeryproject.org/</a><br><a href=\"http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000\" target=\"_blank\" rel=\"external\">http://www.liaoxuefeng.com/article/00137760323922531a8582c08814fb09e9930cede45e3cc000</a><br><a href=\"http://www.jianshu.com/p/1840035cb510\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/1840035cb510</a><br><a href=\"http://www.dongwm.com/archives/how-to-use-celery/\" target=\"_blank\" rel=\"external\">http://www.dongwm.com/archives/how-to-use-celery/</a><br><a href=\"http://liuzxc.github.io/blog/celery/\" target=\"_blank\" rel=\"external\">http://liuzxc.github.io/blog/celery/</a><br><a href=\"http://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/\" target=\"_blank\" rel=\"external\">http://opslinux.com/2015/09/22/celery%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%AE%9E%E8%B7%B5/</a><br><a href=\"http://blog.csdn.net/vintage_1/article/details/47664297\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/vintage_1/article/details/47664297</a></p>\n</blockquote>\n<p>django celery</p>\n<blockquote>\n<p><a href=\"http://blog.csdn.net/vintage_1/article/details/47664297\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/vintage_1/article/details/47664297</a><br><a href=\"http://maslino.website/post/celery-documentation-django.html\" target=\"_blank\" rel=\"external\">http://maslino.website/post/celery-documentation-django.html</a></p>\n</blockquote>\n<h3 id=\"6-jenkins走起\"><a href=\"#6-jenkins走起\" class=\"headerlink\" title=\"6. jenkins走起\"></a>6. jenkins走起</h3><ul>\n<li>jenkins 邮件配置</li>\n</ul>\n<p>引用：</p>\n<blockquote>\n<p><a href=\"http://www.cnblogs.com/amosli/p/3549918.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/amosli/p/3549918.html</a><br><a href=\"http://www.cnblogs.com/GGHHLL/p/jenkins.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/GGHHLL/p/jenkins.html</a></p>\n</blockquote>"},{"title":"如何将一个已经存在的目录转换为GIT项目并托管到github或coding仓库","date":"2017-05-02T09:07:35.000Z","thumbnail":"http://oi1wvrjc2.bkt.clouddn.com/17-5-2/93220999-file_1493717085156_d3c4.png","_content":"\n# 如何将一个已存在的目录转换为一个 GIT 项目并托管到 GITHUB/CODING 仓库\n\n## 背景：\n将一个本地维护的项目，转换成git项目，并托管在github上。\n\n## 步骤：\n\n### 初始化本地项目目录\n```bash\ngit init\n```\n此时会在目录中创建一个`.git`的隐藏目录\n\n### 将所有的文件放入新的仓库中\n```bash\ngit add .\n```\n如果你的本地已经有`.gitignore`目录，则按照此文件的规则进行排除文件；\n单独添加文件，则把`.`替换为文件名。\n\n### 将添加的文件提交到仓库\n```bash\ngit commit -m \"commit init\"\n```\n\n### 获取远程仓库地址\n登陆[github](https://github.com)或者[coding.net](https://coding.net)，获取远程仓库；\n\n此时尽量先不要初始化README和LICENSE文件，防止文件冲突\n\n获取`https://github.com/your-proj-name.git`类似的地址；\n\n### 回到本地目录，将本地创建关联到远程仓库\n```bash\ngit remote add origin https://github.com/your-proj-name.git\n```\n\n运行以下命令查看结果：\n```bash\ngit remote -v\n```\n\n### 提交代码到远程创建 push\n```bash\ngit push origin master\n```\n\n此时进入远程页面查看代码是否成功push即可。\n","source":"_posts/如何将一个已经存在的目录转换为GIT项目并托管到github或coding仓库.md","raw":"---\ntitle: 如何将一个已经存在的目录转换为GIT项目并托管到github或coding仓库\ndate: 2017-05-02 17:07:35\ntags: \n- git\ncategories:\n- linux\npermalink: how-to-add-exist-project-to-github-or-coding\nthumbnail: http://oi1wvrjc2.bkt.clouddn.com/17-5-2/93220999-file_1493717085156_d3c4.png\n---\n\n# 如何将一个已存在的目录转换为一个 GIT 项目并托管到 GITHUB/CODING 仓库\n\n## 背景：\n将一个本地维护的项目，转换成git项目，并托管在github上。\n\n## 步骤：\n\n### 初始化本地项目目录\n```bash\ngit init\n```\n此时会在目录中创建一个`.git`的隐藏目录\n\n### 将所有的文件放入新的仓库中\n```bash\ngit add .\n```\n如果你的本地已经有`.gitignore`目录，则按照此文件的规则进行排除文件；\n单独添加文件，则把`.`替换为文件名。\n\n### 将添加的文件提交到仓库\n```bash\ngit commit -m \"commit init\"\n```\n\n### 获取远程仓库地址\n登陆[github](https://github.com)或者[coding.net](https://coding.net)，获取远程仓库；\n\n此时尽量先不要初始化README和LICENSE文件，防止文件冲突\n\n获取`https://github.com/your-proj-name.git`类似的地址；\n\n### 回到本地目录，将本地创建关联到远程仓库\n```bash\ngit remote add origin https://github.com/your-proj-name.git\n```\n\n运行以下命令查看结果：\n```bash\ngit remote -v\n```\n\n### 提交代码到远程创建 push\n```bash\ngit push origin master\n```\n\n此时进入远程页面查看代码是否成功push即可。\n","slug":"how-to-add-exist-project-to-github-or-coding","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqn800324rd37ev36u93","content":"<h1 id=\"如何将一个已存在的目录转换为一个-GIT-项目并托管到-GITHUB-CODING-仓库\"><a href=\"#如何将一个已存在的目录转换为一个-GIT-项目并托管到-GITHUB-CODING-仓库\" class=\"headerlink\" title=\"如何将一个已存在的目录转换为一个 GIT 项目并托管到 GITHUB/CODING 仓库\"></a>如何将一个已存在的目录转换为一个 GIT 项目并托管到 GITHUB/CODING 仓库</h1><h2 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h2><p>将一个本地维护的项目，转换成git项目，并托管在github上。</p>\n<h2 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h2><h3 id=\"初始化本地项目目录\"><a href=\"#初始化本地项目目录\" class=\"headerlink\" title=\"初始化本地项目目录\"></a>初始化本地项目目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div></pre></td></tr></table></figure>\n<p>此时会在目录中创建一个<code>.git</code>的隐藏目录</p>\n<h3 id=\"将所有的文件放入新的仓库中\"><a href=\"#将所有的文件放入新的仓库中\" class=\"headerlink\" title=\"将所有的文件放入新的仓库中\"></a>将所有的文件放入新的仓库中</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div></pre></td></tr></table></figure>\n<p>如果你的本地已经有<code>.gitignore</code>目录，则按照此文件的规则进行排除文件；<br>单独添加文件，则把<code>.</code>替换为文件名。</p>\n<h3 id=\"将添加的文件提交到仓库\"><a href=\"#将添加的文件提交到仓库\" class=\"headerlink\" title=\"将添加的文件提交到仓库\"></a>将添加的文件提交到仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m <span class=\"string\">\"commit init\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"获取远程仓库地址\"><a href=\"#获取远程仓库地址\" class=\"headerlink\" title=\"获取远程仓库地址\"></a>获取远程仓库地址</h3><p>登陆<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">github</a>或者<a href=\"https://coding.net\" target=\"_blank\" rel=\"external\">coding.net</a>，获取远程仓库；</p>\n<p>此时尽量先不要初始化README和LICENSE文件，防止文件冲突</p>\n<p>获取<code>https://github.com/your-proj-name.git</code>类似的地址；</p>\n<h3 id=\"回到本地目录，将本地创建关联到远程仓库\"><a href=\"#回到本地目录，将本地创建关联到远程仓库\" class=\"headerlink\" title=\"回到本地目录，将本地创建关联到远程仓库\"></a>回到本地目录，将本地创建关联到远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin https://github.com/your-proj-name.git</div></pre></td></tr></table></figure>\n<p>运行以下命令查看结果：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure></p>\n<h3 id=\"提交代码到远程创建-push\"><a href=\"#提交代码到远程创建-push\" class=\"headerlink\" title=\"提交代码到远程创建 push\"></a>提交代码到远程创建 push</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure>\n<p>此时进入远程页面查看代码是否成功push即可。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"如何将一个已存在的目录转换为一个-GIT-项目并托管到-GITHUB-CODING-仓库\"><a href=\"#如何将一个已存在的目录转换为一个-GIT-项目并托管到-GITHUB-CODING-仓库\" class=\"headerlink\" title=\"如何将一个已存在的目录转换为一个 GIT 项目并托管到 GITHUB/CODING 仓库\"></a>如何将一个已存在的目录转换为一个 GIT 项目并托管到 GITHUB/CODING 仓库</h1><h2 id=\"背景：\"><a href=\"#背景：\" class=\"headerlink\" title=\"背景：\"></a>背景：</h2><p>将一个本地维护的项目，转换成git项目，并托管在github上。</p>\n<h2 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h2><h3 id=\"初始化本地项目目录\"><a href=\"#初始化本地项目目录\" class=\"headerlink\" title=\"初始化本地项目目录\"></a>初始化本地项目目录</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git init</div></pre></td></tr></table></figure>\n<p>此时会在目录中创建一个<code>.git</code>的隐藏目录</p>\n<h3 id=\"将所有的文件放入新的仓库中\"><a href=\"#将所有的文件放入新的仓库中\" class=\"headerlink\" title=\"将所有的文件放入新的仓库中\"></a>将所有的文件放入新的仓库中</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add .</div></pre></td></tr></table></figure>\n<p>如果你的本地已经有<code>.gitignore</code>目录，则按照此文件的规则进行排除文件；<br>单独添加文件，则把<code>.</code>替换为文件名。</p>\n<h3 id=\"将添加的文件提交到仓库\"><a href=\"#将添加的文件提交到仓库\" class=\"headerlink\" title=\"将添加的文件提交到仓库\"></a>将添加的文件提交到仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git commit -m <span class=\"string\">\"commit init\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"获取远程仓库地址\"><a href=\"#获取远程仓库地址\" class=\"headerlink\" title=\"获取远程仓库地址\"></a>获取远程仓库地址</h3><p>登陆<a href=\"https://github.com\" target=\"_blank\" rel=\"external\">github</a>或者<a href=\"https://coding.net\" target=\"_blank\" rel=\"external\">coding.net</a>，获取远程仓库；</p>\n<p>此时尽量先不要初始化README和LICENSE文件，防止文件冲突</p>\n<p>获取<code>https://github.com/your-proj-name.git</code>类似的地址；</p>\n<h3 id=\"回到本地目录，将本地创建关联到远程仓库\"><a href=\"#回到本地目录，将本地创建关联到远程仓库\" class=\"headerlink\" title=\"回到本地目录，将本地创建关联到远程仓库\"></a>回到本地目录，将本地创建关联到远程仓库</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin https://github.com/your-proj-name.git</div></pre></td></tr></table></figure>\n<p>运行以下命令查看结果：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div></pre></td></tr></table></figure></p>\n<h3 id=\"提交代码到远程创建-push\"><a href=\"#提交代码到远程创建-push\" class=\"headerlink\" title=\"提交代码到远程创建 push\"></a>提交代码到远程创建 push</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin master</div></pre></td></tr></table></figure>\n<p>此时进入远程页面查看代码是否成功push即可。</p>\n"},{"title":"居住证办理","date":"2016-12-10T17:26:18.000Z","_content":"# 居住证办理（原暂住证）\n[办理居住证传送门](https://bjjzzpt.com/)\n\n今天周六，一大早就起来去预约的网点办理居住证，毕竟是去衙门口办事儿，不早点估计办不完。\n<!--more-->\n## 准备的材料\n\n> 对于材料的准备，前期准备还是挺充分的，网上也有相关的提示。\n> 虽说有了申请网站，而且各种\n> 提示相对于之前来说也很全面，但距离商业类的服务站点，还是差了不少。\n\n以网上预约办理居住证，条件选的是5年社保，说说需要准备哪些：\n\n### 身份证\n没什么可说的，身份证必备，能证明真身的利器。\n\n### 半年内的社保个人权益记录\n去北京市社会保障服务平台申请，[传送门](http://www.bjrbj.gov.cn/csibiz/home/)\n\n登陆后在左树部分，选择个人权益记录 -> 参保人缴费信息定制，从当前能选的最大月份往前推6个月即可。\n时间选好点击提交请求，即可。\n\n一般情况下，当天提交第二天才能出结果。\n\n结果出来后打印这张单子。\n\n### 房租租赁合同（如果有房本，直接拿着房本）\n在有效期内的房屋租赁合同即可，清楚标明甲方乙方和租赁结束日期的。\n\n> 我办理的时候，还准备了其他的东西，比如照片、公司的劳动合同，保密协议什么的，全都拿着\n> 结果是根本也用不上。\n\n## 寻找办理点\n网约居住证受理网点，不是辖区派出所，一般都是社区的来京人员服务站，如果你不熟悉，还是不太好找的。\n好在鼻子底下有张嘴，百度到附近，然后问下大爷大妈基本很快就能找到了。\n\n\n## 办理过程\n值得一提的是整个的办理过程，如果你拿着以上的文件，办理过程非常顺畅。\n\n### 扫描文件\n会逐个的把你的身份证、权益记录、租房合同都用扫描仪扫描下来，不保留你任何的纸质文件。\n\n### 回执单\n扫描完成后，会给你一张回执单，如果你网约的时候选的是EMS邮寄，则待15天左右即可；\n如果是自取，需要到区域派出所领取。\n> 我就是选的EMS送，多方便啊，省得再请假了，人性化。\n\n## 后记\n北京取消暂住证换居住证，东西我觉得还是那个东西，只不过是换了个叫法而已。\n如果想在北京买房买车，摇号，小孩上幼儿园，那么还是办一个吧，比较方便；\n即便是你有工作居住证，也要办一个（据说是政策规定的）\n\n","source":"_posts/居住证办理.md","raw":"---\ntitle: 居住证办理\ndate: 2016-12-11 01:26:18\ntags:\n- 北京工作居住证\ncategories:\n- life\n---\n# 居住证办理（原暂住证）\n[办理居住证传送门](https://bjjzzpt.com/)\n\n今天周六，一大早就起来去预约的网点办理居住证，毕竟是去衙门口办事儿，不早点估计办不完。\n<!--more-->\n## 准备的材料\n\n> 对于材料的准备，前期准备还是挺充分的，网上也有相关的提示。\n> 虽说有了申请网站，而且各种\n> 提示相对于之前来说也很全面，但距离商业类的服务站点，还是差了不少。\n\n以网上预约办理居住证，条件选的是5年社保，说说需要准备哪些：\n\n### 身份证\n没什么可说的，身份证必备，能证明真身的利器。\n\n### 半年内的社保个人权益记录\n去北京市社会保障服务平台申请，[传送门](http://www.bjrbj.gov.cn/csibiz/home/)\n\n登陆后在左树部分，选择个人权益记录 -> 参保人缴费信息定制，从当前能选的最大月份往前推6个月即可。\n时间选好点击提交请求，即可。\n\n一般情况下，当天提交第二天才能出结果。\n\n结果出来后打印这张单子。\n\n### 房租租赁合同（如果有房本，直接拿着房本）\n在有效期内的房屋租赁合同即可，清楚标明甲方乙方和租赁结束日期的。\n\n> 我办理的时候，还准备了其他的东西，比如照片、公司的劳动合同，保密协议什么的，全都拿着\n> 结果是根本也用不上。\n\n## 寻找办理点\n网约居住证受理网点，不是辖区派出所，一般都是社区的来京人员服务站，如果你不熟悉，还是不太好找的。\n好在鼻子底下有张嘴，百度到附近，然后问下大爷大妈基本很快就能找到了。\n\n\n## 办理过程\n值得一提的是整个的办理过程，如果你拿着以上的文件，办理过程非常顺畅。\n\n### 扫描文件\n会逐个的把你的身份证、权益记录、租房合同都用扫描仪扫描下来，不保留你任何的纸质文件。\n\n### 回执单\n扫描完成后，会给你一张回执单，如果你网约的时候选的是EMS邮寄，则待15天左右即可；\n如果是自取，需要到区域派出所领取。\n> 我就是选的EMS送，多方便啊，省得再请假了，人性化。\n\n## 后记\n北京取消暂住证换居住证，东西我觉得还是那个东西，只不过是换了个叫法而已。\n如果想在北京买房买车，摇号，小孩上幼儿园，那么还是办一个吧，比较方便；\n即便是你有工作居住证，也要办一个（据说是政策规定的）\n\n","slug":"居住证办理","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqna00354rd3x1qa0421","content":"<h1 id=\"居住证办理（原暂住证）\"><a href=\"#居住证办理（原暂住证）\" class=\"headerlink\" title=\"居住证办理（原暂住证）\"></a>居住证办理（原暂住证）</h1><p><a href=\"https://bjjzzpt.com/\" target=\"_blank\" rel=\"external\">办理居住证传送门</a></p>\n<p>今天周六，一大早就起来去预约的网点办理居住证，毕竟是去衙门口办事儿，不早点估计办不完。<br><a id=\"more\"></a></p>\n<h2 id=\"准备的材料\"><a href=\"#准备的材料\" class=\"headerlink\" title=\"准备的材料\"></a>准备的材料</h2><blockquote>\n<p>对于材料的准备，前期准备还是挺充分的，网上也有相关的提示。<br>虽说有了申请网站，而且各种<br>提示相对于之前来说也很全面，但距离商业类的服务站点，还是差了不少。</p>\n</blockquote>\n<p>以网上预约办理居住证，条件选的是5年社保，说说需要准备哪些：</p>\n<h3 id=\"身份证\"><a href=\"#身份证\" class=\"headerlink\" title=\"身份证\"></a>身份证</h3><p>没什么可说的，身份证必备，能证明真身的利器。</p>\n<h3 id=\"半年内的社保个人权益记录\"><a href=\"#半年内的社保个人权益记录\" class=\"headerlink\" title=\"半年内的社保个人权益记录\"></a>半年内的社保个人权益记录</h3><p>去北京市社会保障服务平台申请，<a href=\"http://www.bjrbj.gov.cn/csibiz/home/\" target=\"_blank\" rel=\"external\">传送门</a></p>\n<p>登陆后在左树部分，选择个人权益记录 -&gt; 参保人缴费信息定制，从当前能选的最大月份往前推6个月即可。<br>时间选好点击提交请求，即可。</p>\n<p>一般情况下，当天提交第二天才能出结果。</p>\n<p>结果出来后打印这张单子。</p>\n<h3 id=\"房租租赁合同（如果有房本，直接拿着房本）\"><a href=\"#房租租赁合同（如果有房本，直接拿着房本）\" class=\"headerlink\" title=\"房租租赁合同（如果有房本，直接拿着房本）\"></a>房租租赁合同（如果有房本，直接拿着房本）</h3><p>在有效期内的房屋租赁合同即可，清楚标明甲方乙方和租赁结束日期的。</p>\n<blockquote>\n<p>我办理的时候，还准备了其他的东西，比如照片、公司的劳动合同，保密协议什么的，全都拿着<br>结果是根本也用不上。</p>\n</blockquote>\n<h2 id=\"寻找办理点\"><a href=\"#寻找办理点\" class=\"headerlink\" title=\"寻找办理点\"></a>寻找办理点</h2><p>网约居住证受理网点，不是辖区派出所，一般都是社区的来京人员服务站，如果你不熟悉，还是不太好找的。<br>好在鼻子底下有张嘴，百度到附近，然后问下大爷大妈基本很快就能找到了。</p>\n<h2 id=\"办理过程\"><a href=\"#办理过程\" class=\"headerlink\" title=\"办理过程\"></a>办理过程</h2><p>值得一提的是整个的办理过程，如果你拿着以上的文件，办理过程非常顺畅。</p>\n<h3 id=\"扫描文件\"><a href=\"#扫描文件\" class=\"headerlink\" title=\"扫描文件\"></a>扫描文件</h3><p>会逐个的把你的身份证、权益记录、租房合同都用扫描仪扫描下来，不保留你任何的纸质文件。</p>\n<h3 id=\"回执单\"><a href=\"#回执单\" class=\"headerlink\" title=\"回执单\"></a>回执单</h3><p>扫描完成后，会给你一张回执单，如果你网约的时候选的是EMS邮寄，则待15天左右即可；<br>如果是自取，需要到区域派出所领取。</p>\n<blockquote>\n<p>我就是选的EMS送，多方便啊，省得再请假了，人性化。</p>\n</blockquote>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>北京取消暂住证换居住证，东西我觉得还是那个东西，只不过是换了个叫法而已。<br>如果想在北京买房买车，摇号，小孩上幼儿园，那么还是办一个吧，比较方便；<br>即便是你有工作居住证，也要办一个（据说是政策规定的）</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"居住证办理（原暂住证）\"><a href=\"#居住证办理（原暂住证）\" class=\"headerlink\" title=\"居住证办理（原暂住证）\"></a>居住证办理（原暂住证）</h1><p><a href=\"https://bjjzzpt.com/\" target=\"_blank\" rel=\"external\">办理居住证传送门</a></p>\n<p>今天周六，一大早就起来去预约的网点办理居住证，毕竟是去衙门口办事儿，不早点估计办不完。<br>","more":"</p>\n<h2 id=\"准备的材料\"><a href=\"#准备的材料\" class=\"headerlink\" title=\"准备的材料\"></a>准备的材料</h2><blockquote>\n<p>对于材料的准备，前期准备还是挺充分的，网上也有相关的提示。<br>虽说有了申请网站，而且各种<br>提示相对于之前来说也很全面，但距离商业类的服务站点，还是差了不少。</p>\n</blockquote>\n<p>以网上预约办理居住证，条件选的是5年社保，说说需要准备哪些：</p>\n<h3 id=\"身份证\"><a href=\"#身份证\" class=\"headerlink\" title=\"身份证\"></a>身份证</h3><p>没什么可说的，身份证必备，能证明真身的利器。</p>\n<h3 id=\"半年内的社保个人权益记录\"><a href=\"#半年内的社保个人权益记录\" class=\"headerlink\" title=\"半年内的社保个人权益记录\"></a>半年内的社保个人权益记录</h3><p>去北京市社会保障服务平台申请，<a href=\"http://www.bjrbj.gov.cn/csibiz/home/\" target=\"_blank\" rel=\"external\">传送门</a></p>\n<p>登陆后在左树部分，选择个人权益记录 -&gt; 参保人缴费信息定制，从当前能选的最大月份往前推6个月即可。<br>时间选好点击提交请求，即可。</p>\n<p>一般情况下，当天提交第二天才能出结果。</p>\n<p>结果出来后打印这张单子。</p>\n<h3 id=\"房租租赁合同（如果有房本，直接拿着房本）\"><a href=\"#房租租赁合同（如果有房本，直接拿着房本）\" class=\"headerlink\" title=\"房租租赁合同（如果有房本，直接拿着房本）\"></a>房租租赁合同（如果有房本，直接拿着房本）</h3><p>在有效期内的房屋租赁合同即可，清楚标明甲方乙方和租赁结束日期的。</p>\n<blockquote>\n<p>我办理的时候，还准备了其他的东西，比如照片、公司的劳动合同，保密协议什么的，全都拿着<br>结果是根本也用不上。</p>\n</blockquote>\n<h2 id=\"寻找办理点\"><a href=\"#寻找办理点\" class=\"headerlink\" title=\"寻找办理点\"></a>寻找办理点</h2><p>网约居住证受理网点，不是辖区派出所，一般都是社区的来京人员服务站，如果你不熟悉，还是不太好找的。<br>好在鼻子底下有张嘴，百度到附近，然后问下大爷大妈基本很快就能找到了。</p>\n<h2 id=\"办理过程\"><a href=\"#办理过程\" class=\"headerlink\" title=\"办理过程\"></a>办理过程</h2><p>值得一提的是整个的办理过程，如果你拿着以上的文件，办理过程非常顺畅。</p>\n<h3 id=\"扫描文件\"><a href=\"#扫描文件\" class=\"headerlink\" title=\"扫描文件\"></a>扫描文件</h3><p>会逐个的把你的身份证、权益记录、租房合同都用扫描仪扫描下来，不保留你任何的纸质文件。</p>\n<h3 id=\"回执单\"><a href=\"#回执单\" class=\"headerlink\" title=\"回执单\"></a>回执单</h3><p>扫描完成后，会给你一张回执单，如果你网约的时候选的是EMS邮寄，则待15天左右即可；<br>如果是自取，需要到区域派出所领取。</p>\n<blockquote>\n<p>我就是选的EMS送，多方便啊，省得再请假了，人性化。</p>\n</blockquote>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>北京取消暂住证换居住证，东西我觉得还是那个东西，只不过是换了个叫法而已。<br>如果想在北京买房买车，摇号，小孩上幼儿园，那么还是办一个吧，比较方便；<br>即便是你有工作居住证，也要办一个（据说是政策规定的）</p>"},{"title":"批量删除redis keys","date":"2016-12-28T10:49:19.000Z","_content":"![redis](http://oi1wvrjc2.bkt.clouddn.com/17-5-12/1777863-file_1494579468916_12846.png)\n\nredis基本用法\n====\n## 连接redis库\n```redis\nredis-cli -h 127.0.0.1 -p 6070 -a password\n```\n\n## 选定数据库\n\n默认数据库为0\n```redis\nselect 0\n```\n<!--more-->\n## 查询\n### 单条查询\n```redis\nkeys \"key\"\n```\n\n### 多条查询\n使用通配符*\n```redis\nkeys \"key*\"\n```\n## 删除\n### 单独删除key\n```shell\ndel keys\n```\n\n### 批量删除keys\n利用linux中的xargs参数\n```shell\nredis-cli keys \"mobile*\" | xargs redis-cli del\n//如果redis-cli没有设置成系统变量，需要指定redis-cli的完整路径\n//如：/opt/redis/redis-cli keys \"*\" | xargs /opt/redis/redis-cli del\n```\n\n如果更改了redis端口，则需要指定端口-p\n```shell\nredis-cli -h 127.0.0.1 -p 6070 keys \"mobile*\" | xargs redis-cli -h 127.0.0.1 -p 6070 del\n```\n\n如果要指定redis库，则使用-n\n```shell\n//下面的命令指定数据序号为0，即默认数据库\nredis-cli -h 127.0.0.1 -p 6070 keys \"mobile*\" -n 0 | xargs redis-cli -h 127.0.0.1 -p 6070 -n 0 del\n```\n### 全部删除\n```shell\n//删除当前数据库中的所有Key\nflushdb\n\n//删除所有数据库中的key\nflushall\n```\n\n","source":"_posts/批量删除redis-keys.md","raw":"---\ntitle: 批量删除redis keys\ndate: 2016-12-28 18:49:19\ntags:\n- redis\ncategories:\n- redis\n---\n![redis](http://oi1wvrjc2.bkt.clouddn.com/17-5-12/1777863-file_1494579468916_12846.png)\n\nredis基本用法\n====\n## 连接redis库\n```redis\nredis-cli -h 127.0.0.1 -p 6070 -a password\n```\n\n## 选定数据库\n\n默认数据库为0\n```redis\nselect 0\n```\n<!--more-->\n## 查询\n### 单条查询\n```redis\nkeys \"key\"\n```\n\n### 多条查询\n使用通配符*\n```redis\nkeys \"key*\"\n```\n## 删除\n### 单独删除key\n```shell\ndel keys\n```\n\n### 批量删除keys\n利用linux中的xargs参数\n```shell\nredis-cli keys \"mobile*\" | xargs redis-cli del\n//如果redis-cli没有设置成系统变量，需要指定redis-cli的完整路径\n//如：/opt/redis/redis-cli keys \"*\" | xargs /opt/redis/redis-cli del\n```\n\n如果更改了redis端口，则需要指定端口-p\n```shell\nredis-cli -h 127.0.0.1 -p 6070 keys \"mobile*\" | xargs redis-cli -h 127.0.0.1 -p 6070 del\n```\n\n如果要指定redis库，则使用-n\n```shell\n//下面的命令指定数据序号为0，即默认数据库\nredis-cli -h 127.0.0.1 -p 6070 keys \"mobile*\" -n 0 | xargs redis-cli -h 127.0.0.1 -p 6070 -n 0 del\n```\n### 全部删除\n```shell\n//删除当前数据库中的所有Key\nflushdb\n\n//删除所有数据库中的key\nflushall\n```\n\n","slug":"批量删除redis-keys","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqnb00394rd3kllky872","content":"<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-12/1777863-file_1494579468916_12846.png\" alt=\"redis\"></p>\n<h1 id=\"redis基本用法\"><a href=\"#redis基本用法\" class=\"headerlink\" title=\"redis基本用法\"></a>redis基本用法</h1><h2 id=\"连接redis库\"><a href=\"#连接redis库\" class=\"headerlink\" title=\"连接redis库\"></a>连接redis库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 6070 -a password</div></pre></td></tr></table></figure>\n<h2 id=\"选定数据库\"><a href=\"#选定数据库\" class=\"headerlink\" title=\"选定数据库\"></a>选定数据库</h2><p>默认数据库为0<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select 0</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h2 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h2><h3 id=\"单条查询\"><a href=\"#单条查询\" class=\"headerlink\" title=\"单条查询\"></a>单条查询</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keys &quot;key&quot;</div></pre></td></tr></table></figure>\n<h3 id=\"多条查询\"><a href=\"#多条查询\" class=\"headerlink\" title=\"多条查询\"></a>多条查询</h3><p>使用通配符*<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keys &quot;key*&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h2><h3 id=\"单独删除key\"><a href=\"#单独删除key\" class=\"headerlink\" title=\"单独删除key\"></a>单独删除key</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">del keys</div></pre></td></tr></table></figure>\n<h3 id=\"批量删除keys\"><a href=\"#批量删除keys\" class=\"headerlink\" title=\"批量删除keys\"></a>批量删除keys</h3><p>利用linux中的xargs参数<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli keys \"mobile*\" | xargs redis-cli del</div><div class=\"line\">//如果redis-cli没有设置成系统变量，需要指定redis-cli的完整路径</div><div class=\"line\">//如：/opt/redis/redis-cli keys \"*\" | xargs /opt/redis/redis-cli del</div></pre></td></tr></table></figure></p>\n<p>如果更改了redis端口，则需要指定端口-p<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 6070 keys \"mobile*\" | xargs redis-cli -h 127.0.0.1 -p 6070 del</div></pre></td></tr></table></figure></p>\n<p>如果要指定redis库，则使用-n<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//下面的命令指定数据序号为0，即默认数据库</div><div class=\"line\">redis-cli -h 127.0.0.1 -p 6070 keys \"mobile*\" -n 0 | xargs redis-cli -h 127.0.0.1 -p 6070 -n 0 del</div></pre></td></tr></table></figure></p>\n<h3 id=\"全部删除\"><a href=\"#全部删除\" class=\"headerlink\" title=\"全部删除\"></a>全部删除</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">//删除当前数据库中的所有Key</div><div class=\"line\">flushdb</div><div class=\"line\"></div><div class=\"line\">//删除所有数据库中的key</div><div class=\"line\">flushall</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-12/1777863-file_1494579468916_12846.png\" alt=\"redis\"></p>\n<h1 id=\"redis基本用法\"><a href=\"#redis基本用法\" class=\"headerlink\" title=\"redis基本用法\"></a>redis基本用法</h1><h2 id=\"连接redis库\"><a href=\"#连接redis库\" class=\"headerlink\" title=\"连接redis库\"></a>连接redis库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 6070 -a password</div></pre></td></tr></table></figure>\n<h2 id=\"选定数据库\"><a href=\"#选定数据库\" class=\"headerlink\" title=\"选定数据库\"></a>选定数据库</h2><p>默认数据库为0<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">select 0</div></pre></td></tr></table></figure></p>","more":"<h2 id=\"查询\"><a href=\"#查询\" class=\"headerlink\" title=\"查询\"></a>查询</h2><h3 id=\"单条查询\"><a href=\"#单条查询\" class=\"headerlink\" title=\"单条查询\"></a>单条查询</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keys &quot;key&quot;</div></pre></td></tr></table></figure>\n<h3 id=\"多条查询\"><a href=\"#多条查询\" class=\"headerlink\" title=\"多条查询\"></a>多条查询</h3><p>使用通配符*<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keys &quot;key*&quot;</div></pre></td></tr></table></figure></p>\n<h2 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h2><h3 id=\"单独删除key\"><a href=\"#单独删除key\" class=\"headerlink\" title=\"单独删除key\"></a>单独删除key</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">del keys</div></pre></td></tr></table></figure>\n<h3 id=\"批量删除keys\"><a href=\"#批量删除keys\" class=\"headerlink\" title=\"批量删除keys\"></a>批量删除keys</h3><p>利用linux中的xargs参数<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli keys \"mobile*\" | xargs redis-cli del</div><div class=\"line\">//如果redis-cli没有设置成系统变量，需要指定redis-cli的完整路径</div><div class=\"line\">//如：/opt/redis/redis-cli keys \"*\" | xargs /opt/redis/redis-cli del</div></pre></td></tr></table></figure></p>\n<p>如果更改了redis端口，则需要指定端口-p<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis-cli -h 127.0.0.1 -p 6070 keys \"mobile*\" | xargs redis-cli -h 127.0.0.1 -p 6070 del</div></pre></td></tr></table></figure></p>\n<p>如果要指定redis库，则使用-n<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//下面的命令指定数据序号为0，即默认数据库</div><div class=\"line\">redis-cli -h 127.0.0.1 -p 6070 keys \"mobile*\" -n 0 | xargs redis-cli -h 127.0.0.1 -p 6070 -n 0 del</div></pre></td></tr></table></figure></p>\n<h3 id=\"全部删除\"><a href=\"#全部删除\" class=\"headerlink\" title=\"全部删除\"></a>全部删除</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">//删除当前数据库中的所有Key</div><div class=\"line\">flushdb</div><div class=\"line\"></div><div class=\"line\">//删除所有数据库中的key</div><div class=\"line\">flushall</div></pre></td></tr></table></figure>"},{"title":"接口自动化，用例分析","date":"2016-12-20T08:09:08.000Z","_content":"\n用例分析\n====\n<!--more-->\n## 基础用例\n\n### request params\n\n#### 可选项\n针对入参中的参数，对可选参数与必选参数进行组合请求，关注结果；\n\n#### 健壮性\n传入参数值包含大量非正常数据，包括特殊字符，无意义串\n\n#### 安全性\n待补充\n\n### response data\n\n#### timespend\n请求接口的用时，可做为参考\n\n#### 对比(diff)\n对返回结果中，选取一级key值和二级key值，与正确返回值中的对应项进行对比；\n确保无随意的增删字段产生\n\n#### 检查项\n根据业务中的统一规则，对返回数据中的必要项目进行检查：\n包括：\n\n|功能|结果|\n|----|----|\n|status_code|200|\n|所有key|小写|\n|一级key|标准4个|\n|returncode|0|\n|结果中的url链接|2××、3××|\n\n\n\n\n## 业务用例(灰盒测试代码)\n\n### 业务情景的基础用例覆盖\n针对产品需求，对业务逻辑写测试代码，其中有判断条件，基于一定数据环境；\n\n### 多数据覆盖\n因无法修改源接口返回数据源（另外，修改起来代价太大，各业务方都有数据），所以\n尽可能的对线上数据进行遍历操作\n\n#### 自动生成用例代码\n针对入参为城市、省份、品牌、车型、车系等可控数据，进行大范围\\全范围遍历\n\n通过对__init__的覆写，来继承已完成的测试类；\n\n#### 自动化生成报告代码\n使用HtmlTestRunner.py生成报告\n\n但因为如果用上面生成大范围用例，就可能出现大量的测试类，这时候需要将上千个测试类组装\n到一起进行生成报告\n\n\n\n\n## 页面组装\n希望把以上的功能集成至前端页面中，通过点击按钮的方式自动操作\n\n### 组织结构设计\n将执行脚本、生成用例脚本、生成报告脚本做目录区分\n\n对每一次测试执行结果都进行保存\n\n### celery应用\n因为生成报告时间长、无需立即查看报告状态这些特点，可将生成报告做成异步\n\n## 线上巡查\n\n","source":"_posts/接口自动化，用例分析.md","raw":"---\ntitle: 接口自动化，用例分析\ndate: 2016-12-20 16:09:08\ntags:\n- 自动化\n- 用例\ncategories:\n- 自动化\n---\n\n用例分析\n====\n<!--more-->\n## 基础用例\n\n### request params\n\n#### 可选项\n针对入参中的参数，对可选参数与必选参数进行组合请求，关注结果；\n\n#### 健壮性\n传入参数值包含大量非正常数据，包括特殊字符，无意义串\n\n#### 安全性\n待补充\n\n### response data\n\n#### timespend\n请求接口的用时，可做为参考\n\n#### 对比(diff)\n对返回结果中，选取一级key值和二级key值，与正确返回值中的对应项进行对比；\n确保无随意的增删字段产生\n\n#### 检查项\n根据业务中的统一规则，对返回数据中的必要项目进行检查：\n包括：\n\n|功能|结果|\n|----|----|\n|status_code|200|\n|所有key|小写|\n|一级key|标准4个|\n|returncode|0|\n|结果中的url链接|2××、3××|\n\n\n\n\n## 业务用例(灰盒测试代码)\n\n### 业务情景的基础用例覆盖\n针对产品需求，对业务逻辑写测试代码，其中有判断条件，基于一定数据环境；\n\n### 多数据覆盖\n因无法修改源接口返回数据源（另外，修改起来代价太大，各业务方都有数据），所以\n尽可能的对线上数据进行遍历操作\n\n#### 自动生成用例代码\n针对入参为城市、省份、品牌、车型、车系等可控数据，进行大范围\\全范围遍历\n\n通过对__init__的覆写，来继承已完成的测试类；\n\n#### 自动化生成报告代码\n使用HtmlTestRunner.py生成报告\n\n但因为如果用上面生成大范围用例，就可能出现大量的测试类，这时候需要将上千个测试类组装\n到一起进行生成报告\n\n\n\n\n## 页面组装\n希望把以上的功能集成至前端页面中，通过点击按钮的方式自动操作\n\n### 组织结构设计\n将执行脚本、生成用例脚本、生成报告脚本做目录区分\n\n对每一次测试执行结果都进行保存\n\n### celery应用\n因为生成报告时间长、无需立即查看报告状态这些特点，可将生成报告做成异步\n\n## 线上巡查\n\n","slug":"接口自动化，用例分析","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqnc003d4rd3g3yz9c9g","content":"<h1 id=\"用例分析\"><a href=\"#用例分析\" class=\"headerlink\" title=\"用例分析\"></a>用例分析</h1><a id=\"more\"></a>\n<h2 id=\"基础用例\"><a href=\"#基础用例\" class=\"headerlink\" title=\"基础用例\"></a>基础用例</h2><h3 id=\"request-params\"><a href=\"#request-params\" class=\"headerlink\" title=\"request params\"></a>request params</h3><h4 id=\"可选项\"><a href=\"#可选项\" class=\"headerlink\" title=\"可选项\"></a>可选项</h4><p>针对入参中的参数，对可选参数与必选参数进行组合请求，关注结果；</p>\n<h4 id=\"健壮性\"><a href=\"#健壮性\" class=\"headerlink\" title=\"健壮性\"></a>健壮性</h4><p>传入参数值包含大量非正常数据，包括特殊字符，无意义串</p>\n<h4 id=\"安全性\"><a href=\"#安全性\" class=\"headerlink\" title=\"安全性\"></a>安全性</h4><p>待补充</p>\n<h3 id=\"response-data\"><a href=\"#response-data\" class=\"headerlink\" title=\"response data\"></a>response data</h3><h4 id=\"timespend\"><a href=\"#timespend\" class=\"headerlink\" title=\"timespend\"></a>timespend</h4><p>请求接口的用时，可做为参考</p>\n<h4 id=\"对比-diff\"><a href=\"#对比-diff\" class=\"headerlink\" title=\"对比(diff)\"></a>对比(diff)</h4><p>对返回结果中，选取一级key值和二级key值，与正确返回值中的对应项进行对比；<br>确保无随意的增删字段产生</p>\n<h4 id=\"检查项\"><a href=\"#检查项\" class=\"headerlink\" title=\"检查项\"></a>检查项</h4><p>根据业务中的统一规则，对返回数据中的必要项目进行检查：<br>包括：</p>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>status_code</td>\n<td>200</td>\n</tr>\n<tr>\n<td>所有key</td>\n<td>小写</td>\n</tr>\n<tr>\n<td>一级key</td>\n<td>标准4个</td>\n</tr>\n<tr>\n<td>returncode</td>\n<td>0</td>\n</tr>\n<tr>\n<td>结果中的url链接</td>\n<td>2××、3××</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"业务用例-灰盒测试代码\"><a href=\"#业务用例-灰盒测试代码\" class=\"headerlink\" title=\"业务用例(灰盒测试代码)\"></a>业务用例(灰盒测试代码)</h2><h3 id=\"业务情景的基础用例覆盖\"><a href=\"#业务情景的基础用例覆盖\" class=\"headerlink\" title=\"业务情景的基础用例覆盖\"></a>业务情景的基础用例覆盖</h3><p>针对产品需求，对业务逻辑写测试代码，其中有判断条件，基于一定数据环境；</p>\n<h3 id=\"多数据覆盖\"><a href=\"#多数据覆盖\" class=\"headerlink\" title=\"多数据覆盖\"></a>多数据覆盖</h3><p>因无法修改源接口返回数据源（另外，修改起来代价太大，各业务方都有数据），所以<br>尽可能的对线上数据进行遍历操作</p>\n<h4 id=\"自动生成用例代码\"><a href=\"#自动生成用例代码\" class=\"headerlink\" title=\"自动生成用例代码\"></a>自动生成用例代码</h4><p>针对入参为城市、省份、品牌、车型、车系等可控数据，进行大范围\\全范围遍历</p>\n<p>通过对<strong>init</strong>的覆写，来继承已完成的测试类；</p>\n<h4 id=\"自动化生成报告代码\"><a href=\"#自动化生成报告代码\" class=\"headerlink\" title=\"自动化生成报告代码\"></a>自动化生成报告代码</h4><p>使用HtmlTestRunner.py生成报告</p>\n<p>但因为如果用上面生成大范围用例，就可能出现大量的测试类，这时候需要将上千个测试类组装<br>到一起进行生成报告</p>\n<h2 id=\"页面组装\"><a href=\"#页面组装\" class=\"headerlink\" title=\"页面组装\"></a>页面组装</h2><p>希望把以上的功能集成至前端页面中，通过点击按钮的方式自动操作</p>\n<h3 id=\"组织结构设计\"><a href=\"#组织结构设计\" class=\"headerlink\" title=\"组织结构设计\"></a>组织结构设计</h3><p>将执行脚本、生成用例脚本、生成报告脚本做目录区分</p>\n<p>对每一次测试执行结果都进行保存</p>\n<h3 id=\"celery应用\"><a href=\"#celery应用\" class=\"headerlink\" title=\"celery应用\"></a>celery应用</h3><p>因为生成报告时间长、无需立即查看报告状态这些特点，可将生成报告做成异步</p>\n<h2 id=\"线上巡查\"><a href=\"#线上巡查\" class=\"headerlink\" title=\"线上巡查\"></a>线上巡查</h2>","site":{"data":{}},"excerpt":"<h1 id=\"用例分析\"><a href=\"#用例分析\" class=\"headerlink\" title=\"用例分析\"></a>用例分析</h1>","more":"<h2 id=\"基础用例\"><a href=\"#基础用例\" class=\"headerlink\" title=\"基础用例\"></a>基础用例</h2><h3 id=\"request-params\"><a href=\"#request-params\" class=\"headerlink\" title=\"request params\"></a>request params</h3><h4 id=\"可选项\"><a href=\"#可选项\" class=\"headerlink\" title=\"可选项\"></a>可选项</h4><p>针对入参中的参数，对可选参数与必选参数进行组合请求，关注结果；</p>\n<h4 id=\"健壮性\"><a href=\"#健壮性\" class=\"headerlink\" title=\"健壮性\"></a>健壮性</h4><p>传入参数值包含大量非正常数据，包括特殊字符，无意义串</p>\n<h4 id=\"安全性\"><a href=\"#安全性\" class=\"headerlink\" title=\"安全性\"></a>安全性</h4><p>待补充</p>\n<h3 id=\"response-data\"><a href=\"#response-data\" class=\"headerlink\" title=\"response data\"></a>response data</h3><h4 id=\"timespend\"><a href=\"#timespend\" class=\"headerlink\" title=\"timespend\"></a>timespend</h4><p>请求接口的用时，可做为参考</p>\n<h4 id=\"对比-diff\"><a href=\"#对比-diff\" class=\"headerlink\" title=\"对比(diff)\"></a>对比(diff)</h4><p>对返回结果中，选取一级key值和二级key值，与正确返回值中的对应项进行对比；<br>确保无随意的增删字段产生</p>\n<h4 id=\"检查项\"><a href=\"#检查项\" class=\"headerlink\" title=\"检查项\"></a>检查项</h4><p>根据业务中的统一规则，对返回数据中的必要项目进行检查：<br>包括：</p>\n<table>\n<thead>\n<tr>\n<th>功能</th>\n<th>结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>status_code</td>\n<td>200</td>\n</tr>\n<tr>\n<td>所有key</td>\n<td>小写</td>\n</tr>\n<tr>\n<td>一级key</td>\n<td>标准4个</td>\n</tr>\n<tr>\n<td>returncode</td>\n<td>0</td>\n</tr>\n<tr>\n<td>结果中的url链接</td>\n<td>2××、3××</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"业务用例-灰盒测试代码\"><a href=\"#业务用例-灰盒测试代码\" class=\"headerlink\" title=\"业务用例(灰盒测试代码)\"></a>业务用例(灰盒测试代码)</h2><h3 id=\"业务情景的基础用例覆盖\"><a href=\"#业务情景的基础用例覆盖\" class=\"headerlink\" title=\"业务情景的基础用例覆盖\"></a>业务情景的基础用例覆盖</h3><p>针对产品需求，对业务逻辑写测试代码，其中有判断条件，基于一定数据环境；</p>\n<h3 id=\"多数据覆盖\"><a href=\"#多数据覆盖\" class=\"headerlink\" title=\"多数据覆盖\"></a>多数据覆盖</h3><p>因无法修改源接口返回数据源（另外，修改起来代价太大，各业务方都有数据），所以<br>尽可能的对线上数据进行遍历操作</p>\n<h4 id=\"自动生成用例代码\"><a href=\"#自动生成用例代码\" class=\"headerlink\" title=\"自动生成用例代码\"></a>自动生成用例代码</h4><p>针对入参为城市、省份、品牌、车型、车系等可控数据，进行大范围\\全范围遍历</p>\n<p>通过对<strong>init</strong>的覆写，来继承已完成的测试类；</p>\n<h4 id=\"自动化生成报告代码\"><a href=\"#自动化生成报告代码\" class=\"headerlink\" title=\"自动化生成报告代码\"></a>自动化生成报告代码</h4><p>使用HtmlTestRunner.py生成报告</p>\n<p>但因为如果用上面生成大范围用例，就可能出现大量的测试类，这时候需要将上千个测试类组装<br>到一起进行生成报告</p>\n<h2 id=\"页面组装\"><a href=\"#页面组装\" class=\"headerlink\" title=\"页面组装\"></a>页面组装</h2><p>希望把以上的功能集成至前端页面中，通过点击按钮的方式自动操作</p>\n<h3 id=\"组织结构设计\"><a href=\"#组织结构设计\" class=\"headerlink\" title=\"组织结构设计\"></a>组织结构设计</h3><p>将执行脚本、生成用例脚本、生成报告脚本做目录区分</p>\n<p>对每一次测试执行结果都进行保存</p>\n<h3 id=\"celery应用\"><a href=\"#celery应用\" class=\"headerlink\" title=\"celery应用\"></a>celery应用</h3><p>因为生成报告时间长、无需立即查看报告状态这些特点，可将生成报告做成异步</p>\n<h2 id=\"线上巡查\"><a href=\"#线上巡查\" class=\"headerlink\" title=\"线上巡查\"></a>线上巡查</h2>"},{"title":"搭建自己的shadowsocks服务器","date":"2017-05-08T07:59:14.000Z","_content":"\n## 链接地址\n[点我进入搬瓦工](https://bandwagonhost.com/aff.php?aff=6060)\n\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-8/97521733-file_1494232058235_cd04.jpg)","source":"_posts/搭建自己的shadowsocks服务器.md","raw":"---\ntitle: 搭建自己的shadowsocks服务器\ndate: 2017-05-08 15:59:14\ntags: \n- shadowsocks\n- vpn\n- vps\ncategories: \n- linux\n- vps\npermalink: \n\n---\n\n## 链接地址\n[点我进入搬瓦工](https://bandwagonhost.com/aff.php?aff=6060)\n\n![](http://oi1wvrjc2.bkt.clouddn.com/17-5-8/97521733-file_1494232058235_cd04.jpg)","slug":"搭建自己的shadowsocks服务器","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqnf003h4rd3vnvebw5e","content":"<h2 id=\"链接地址\"><a href=\"#链接地址\" class=\"headerlink\" title=\"链接地址\"></a>链接地址</h2><p><a href=\"https://bandwagonhost.com/aff.php?aff=6060\" target=\"_blank\" rel=\"external\">点我进入搬瓦工</a></p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-8/97521733-file_1494232058235_cd04.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"链接地址\"><a href=\"#链接地址\" class=\"headerlink\" title=\"链接地址\"></a>链接地址</h2><p><a href=\"https://bandwagonhost.com/aff.php?aff=6060\" target=\"_blank\" rel=\"external\">点我进入搬瓦工</a></p>\n<p><img src=\"http://oi1wvrjc2.bkt.clouddn.com/17-5-8/97521733-file_1494232058235_cd04.jpg\" alt=\"\"></p>\n"},{"title":"查看shadowsocks服务器的用户连接数","date":"2017-05-12T08:24:21.000Z","_content":"![图片来自网络](http://i4.buimg.com/588926/d4cece95e36ac2ae.png)\n> 转自 [逗比根据地](https://doub.io/ss-jc33/)\n\n### notice\n本方法仅适用于 Debian/Ubuntu 系统(部分代码支持CentOS)，ShadowsocksR 服务端和Shadowsocks Python 服务端！\n\n首先，我们是使用netstat命令来查询当前服务器（VPS）的连接数据。\n\n> 以下方法适用于 ShadowsocksR(Python) 的服务端，因为ShadowsocksR服务端由 Python 编写，并且默认开启ipv6，所以很容易过滤出一些信息。\n\n### 显示出由Python建立完成的TCP链接列表或连接数\n```bash\n# 显示所有进出链接\nnetstat -anp |grep 'ESTABLISHED' |grep 'python'\n# 仅显示链接服务器的用户连接\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6'\n# 仅显示链接服务器的用户连接数量\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |wc -l\n# 仅显示链接服务器的用户连接并写入到文件\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6'>>/root/log.txt\n \n# 如果你是多用户版(多个端口)的服务端，那么你可以用这个命令\n# 显示当前链接服务器的用户的SS端口\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |awk '{print $4}' |sort -u\n# CentOS系统用这个\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp' | grep '::ffff:' |awk '{print $4}' |sort -u\n# 显示当前链接服务器的用户的SS端口数量\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |awk '{print $4}' |sort -u |wc -l\n# CentOS系统用这个\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp' | grep '::ffff:' |awk '{print $4}' |sort -u |wc -l\n \n# 显示当前所有链接SS的用户IP\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |awk '{print $5}' |awk -F \":\" '{print $1}' |sort -u\n# 显示当前所有链接SS的用户IP数量\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |awk '{print $5}' |awk -F \":\" '{print $1}' |sort -u |wc -l\n```\n第一条 命令是 把所有的进出链接都列出来，Shadowsocks客户端在链接服务器后 本地的IP和端口 是 “进” 的，服务器在接收到Shadowsocks客户端的数据后会去访问指定的网站或IP，而这是 “出”的。这一条命令就是把这 一进一出 的信息都列出来，可以知道 客户端用户连接的是哪个 SS端口，还有客户 自身的IP和端口。\n\n第二条 命令是 仅显示链接服务器的用户的链接，也就是上面一段话中说的 “进”，这个命令不会吧服务器在访问的网站或IP给列出来，纯粹用来看 Shadowsocks用户的链接信息。\n\n第三条 命令是 仅显示链接服务器的用户连接数量，有时候链接 当前服务器的 Shadowsocks用户很多，你只想知道有几个人链接，那就用这一条命令（这个链接数量不是准确的，具体看下面的注意说明）。\n\n第四条 命令是 仅显示链接服务器的用户连接并写入到文件，有时候在ssh上面查看大量文本不是一个好主意，所以保存到某个目录，然后自己去用sftp下载下来看信息是个不错的选择。\n\n第五条 命令是 显示当前链接服务器的用户的SS端口，这个命令会去除重复的，最后显示的只有 正在链接SS服务器的用户的SS端口。\n\n第六条 命令是 显示当前链接服务器的用户的SS端口数量，这个就是显示 数量。\n\n第七条 命令是 显示当前所有链接SS的用户IP，这个命令会去除重复的，最后显示的只有 正在链接SS服务器的用户的IP。\n\n第八条 命令是 显示当前所有链接SS的用户IP数量，这个就是显示 数量。\n\n> 注意：你经常会看到 用户IP一样但后面的端口不一样(1.1.1.1:2333、1.1.1.1:6666)，那是因为他的SS客户端开了好几条TCP链接，所以一般情况下还是一个人在使用，但是也不排除路由器局域网情况下多个人同时使用，这时候也是这样显示的。\n\n-----\n\n如果你想单独查看一个SS端口的链接数，那你可以看看下面几条命令。\n\n```bash\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep VPS_IP:SS_Port\n# 示例 netstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep 233.233.233.233:10000\n \nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep VPS_IP:SS_Port |wc -l\n# 示例 netstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep 233.233.233.233:10000 |wc -l\n```\n\n第一条是 列出 当前SS端口连接的链接数。比如：服务器IP是 233.233.233.233 ，然后你想要知道链接数的端口是 10000 ，那命令就是第二行的示例。\n\n第二条是 显示 当前SS端口连接的链接数，这个只是显示有几个链接数。示例如上。\n","source":"_posts/查看shadowsocks服务器的用户连接数.md","raw":"---\ntitle: 查看shadowsocks服务器的用户连接数\ndate: 2017-05-12 16:24:21\ntags: \n- shadowsocks\n- vpn\n- vps\ncategories:\n- linux\n- vps\npermalink: show-connect-user-count-on-shadowsocks-server\n---\n![图片来自网络](http://i4.buimg.com/588926/d4cece95e36ac2ae.png)\n> 转自 [逗比根据地](https://doub.io/ss-jc33/)\n\n### notice\n本方法仅适用于 Debian/Ubuntu 系统(部分代码支持CentOS)，ShadowsocksR 服务端和Shadowsocks Python 服务端！\n\n首先，我们是使用netstat命令来查询当前服务器（VPS）的连接数据。\n\n> 以下方法适用于 ShadowsocksR(Python) 的服务端，因为ShadowsocksR服务端由 Python 编写，并且默认开启ipv6，所以很容易过滤出一些信息。\n\n### 显示出由Python建立完成的TCP链接列表或连接数\n```bash\n# 显示所有进出链接\nnetstat -anp |grep 'ESTABLISHED' |grep 'python'\n# 仅显示链接服务器的用户连接\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6'\n# 仅显示链接服务器的用户连接数量\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |wc -l\n# 仅显示链接服务器的用户连接并写入到文件\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6'>>/root/log.txt\n \n# 如果你是多用户版(多个端口)的服务端，那么你可以用这个命令\n# 显示当前链接服务器的用户的SS端口\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |awk '{print $4}' |sort -u\n# CentOS系统用这个\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp' | grep '::ffff:' |awk '{print $4}' |sort -u\n# 显示当前链接服务器的用户的SS端口数量\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |awk '{print $4}' |sort -u |wc -l\n# CentOS系统用这个\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp' | grep '::ffff:' |awk '{print $4}' |sort -u |wc -l\n \n# 显示当前所有链接SS的用户IP\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |awk '{print $5}' |awk -F \":\" '{print $1}' |sort -u\n# 显示当前所有链接SS的用户IP数量\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |awk '{print $5}' |awk -F \":\" '{print $1}' |sort -u |wc -l\n```\n第一条 命令是 把所有的进出链接都列出来，Shadowsocks客户端在链接服务器后 本地的IP和端口 是 “进” 的，服务器在接收到Shadowsocks客户端的数据后会去访问指定的网站或IP，而这是 “出”的。这一条命令就是把这 一进一出 的信息都列出来，可以知道 客户端用户连接的是哪个 SS端口，还有客户 自身的IP和端口。\n\n第二条 命令是 仅显示链接服务器的用户的链接，也就是上面一段话中说的 “进”，这个命令不会吧服务器在访问的网站或IP给列出来，纯粹用来看 Shadowsocks用户的链接信息。\n\n第三条 命令是 仅显示链接服务器的用户连接数量，有时候链接 当前服务器的 Shadowsocks用户很多，你只想知道有几个人链接，那就用这一条命令（这个链接数量不是准确的，具体看下面的注意说明）。\n\n第四条 命令是 仅显示链接服务器的用户连接并写入到文件，有时候在ssh上面查看大量文本不是一个好主意，所以保存到某个目录，然后自己去用sftp下载下来看信息是个不错的选择。\n\n第五条 命令是 显示当前链接服务器的用户的SS端口，这个命令会去除重复的，最后显示的只有 正在链接SS服务器的用户的SS端口。\n\n第六条 命令是 显示当前链接服务器的用户的SS端口数量，这个就是显示 数量。\n\n第七条 命令是 显示当前所有链接SS的用户IP，这个命令会去除重复的，最后显示的只有 正在链接SS服务器的用户的IP。\n\n第八条 命令是 显示当前所有链接SS的用户IP数量，这个就是显示 数量。\n\n> 注意：你经常会看到 用户IP一样但后面的端口不一样(1.1.1.1:2333、1.1.1.1:6666)，那是因为他的SS客户端开了好几条TCP链接，所以一般情况下还是一个人在使用，但是也不排除路由器局域网情况下多个人同时使用，这时候也是这样显示的。\n\n-----\n\n如果你想单独查看一个SS端口的链接数，那你可以看看下面几条命令。\n\n```bash\nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep VPS_IP:SS_Port\n# 示例 netstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep 233.233.233.233:10000\n \nnetstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep VPS_IP:SS_Port |wc -l\n# 示例 netstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep 233.233.233.233:10000 |wc -l\n```\n\n第一条是 列出 当前SS端口连接的链接数。比如：服务器IP是 233.233.233.233 ，然后你想要知道链接数的端口是 10000 ，那命令就是第二行的示例。\n\n第二条是 显示 当前SS端口连接的链接数，这个只是显示有几个链接数。示例如上。\n","slug":"show-connect-user-count-on-shadowsocks-server","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqng003k4rd36hdi5lg7","content":"<p><img src=\"http://i4.buimg.com/588926/d4cece95e36ac2ae.png\" alt=\"图片来自网络\"></p>\n<blockquote>\n<p>转自 <a href=\"https://doub.io/ss-jc33/\" target=\"_blank\" rel=\"external\">逗比根据地</a></p>\n</blockquote>\n<h3 id=\"notice\"><a href=\"#notice\" class=\"headerlink\" title=\"notice\"></a>notice</h3><p>本方法仅适用于 Debian/Ubuntu 系统(部分代码支持CentOS)，ShadowsocksR 服务端和Shadowsocks Python 服务端！</p>\n<p>首先，我们是使用netstat命令来查询当前服务器（VPS）的连接数据。</p>\n<blockquote>\n<p>以下方法适用于 ShadowsocksR(Python) 的服务端，因为ShadowsocksR服务端由 Python 编写，并且默认开启ipv6，所以很容易过滤出一些信息。</p>\n</blockquote>\n<h3 id=\"显示出由Python建立完成的TCP链接列表或连接数\"><a href=\"#显示出由Python建立完成的TCP链接列表或连接数\" class=\"headerlink\" title=\"显示出由Python建立完成的TCP链接列表或连接数\"></a>显示出由Python建立完成的TCP链接列表或连接数</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 显示所有进出链接</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span></div><div class=\"line\"><span class=\"comment\"># 仅显示链接服务器的用户连接</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span></div><div class=\"line\"><span class=\"comment\"># 仅显示链接服务器的用户连接数量</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |wc -l</div><div class=\"line\"><span class=\"comment\"># 仅显示链接服务器的用户连接并写入到文件</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span>&gt;&gt;/root/log.txt</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># 如果你是多用户版(多个端口)的服务端，那么你可以用这个命令</span></div><div class=\"line\"><span class=\"comment\"># 显示当前链接服务器的用户的SS端口</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |awk <span class=\"string\">'&#123;print $4&#125;'</span> |sort -u</div><div class=\"line\"><span class=\"comment\"># CentOS系统用这个</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp'</span> | grep <span class=\"string\">'::ffff:'</span> |awk <span class=\"string\">'&#123;print $4&#125;'</span> |sort -u</div><div class=\"line\"><span class=\"comment\"># 显示当前链接服务器的用户的SS端口数量</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |awk <span class=\"string\">'&#123;print $4&#125;'</span> |sort -u |wc -l</div><div class=\"line\"><span class=\"comment\"># CentOS系统用这个</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp'</span> | grep <span class=\"string\">'::ffff:'</span> |awk <span class=\"string\">'&#123;print $4&#125;'</span> |sort -u |wc -l</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># 显示当前所有链接SS的用户IP</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |awk <span class=\"string\">'&#123;print $5&#125;'</span> |awk -F <span class=\"string\">\":\"</span> <span class=\"string\">'&#123;print $1&#125;'</span> |sort -u</div><div class=\"line\"><span class=\"comment\"># 显示当前所有链接SS的用户IP数量</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |awk <span class=\"string\">'&#123;print $5&#125;'</span> |awk -F <span class=\"string\">\":\"</span> <span class=\"string\">'&#123;print $1&#125;'</span> |sort -u |wc -l</div></pre></td></tr></table></figure>\n<p>第一条 命令是 把所有的进出链接都列出来，Shadowsocks客户端在链接服务器后 本地的IP和端口 是 “进” 的，服务器在接收到Shadowsocks客户端的数据后会去访问指定的网站或IP，而这是 “出”的。这一条命令就是把这 一进一出 的信息都列出来，可以知道 客户端用户连接的是哪个 SS端口，还有客户 自身的IP和端口。</p>\n<p>第二条 命令是 仅显示链接服务器的用户的链接，也就是上面一段话中说的 “进”，这个命令不会吧服务器在访问的网站或IP给列出来，纯粹用来看 Shadowsocks用户的链接信息。</p>\n<p>第三条 命令是 仅显示链接服务器的用户连接数量，有时候链接 当前服务器的 Shadowsocks用户很多，你只想知道有几个人链接，那就用这一条命令（这个链接数量不是准确的，具体看下面的注意说明）。</p>\n<p>第四条 命令是 仅显示链接服务器的用户连接并写入到文件，有时候在ssh上面查看大量文本不是一个好主意，所以保存到某个目录，然后自己去用sftp下载下来看信息是个不错的选择。</p>\n<p>第五条 命令是 显示当前链接服务器的用户的SS端口，这个命令会去除重复的，最后显示的只有 正在链接SS服务器的用户的SS端口。</p>\n<p>第六条 命令是 显示当前链接服务器的用户的SS端口数量，这个就是显示 数量。</p>\n<p>第七条 命令是 显示当前所有链接SS的用户IP，这个命令会去除重复的，最后显示的只有 正在链接SS服务器的用户的IP。</p>\n<p>第八条 命令是 显示当前所有链接SS的用户IP数量，这个就是显示 数量。</p>\n<blockquote>\n<p>注意：你经常会看到 用户IP一样但后面的端口不一样(1.1.1.1:2333、1.1.1.1:6666)，那是因为他的SS客户端开了好几条TCP链接，所以一般情况下还是一个人在使用，但是也不排除路由器局域网情况下多个人同时使用，这时候也是这样显示的。</p>\n</blockquote>\n<hr>\n<p>如果你想单独查看一个SS端口的链接数，那你可以看看下面几条命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |grep VPS_IP:SS_Port</div><div class=\"line\"><span class=\"comment\"># 示例 netstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep 233.233.233.233:10000</span></div><div class=\"line\"> </div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |grep VPS_IP:SS_Port |wc -l</div><div class=\"line\"><span class=\"comment\"># 示例 netstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep 233.233.233.233:10000 |wc -l</span></div></pre></td></tr></table></figure>\n<p>第一条是 列出 当前SS端口连接的链接数。比如：服务器IP是 233.233.233.233 ，然后你想要知道链接数的端口是 10000 ，那命令就是第二行的示例。</p>\n<p>第二条是 显示 当前SS端口连接的链接数，这个只是显示有几个链接数。示例如上。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://i4.buimg.com/588926/d4cece95e36ac2ae.png\" alt=\"图片来自网络\"></p>\n<blockquote>\n<p>转自 <a href=\"https://doub.io/ss-jc33/\" target=\"_blank\" rel=\"external\">逗比根据地</a></p>\n</blockquote>\n<h3 id=\"notice\"><a href=\"#notice\" class=\"headerlink\" title=\"notice\"></a>notice</h3><p>本方法仅适用于 Debian/Ubuntu 系统(部分代码支持CentOS)，ShadowsocksR 服务端和Shadowsocks Python 服务端！</p>\n<p>首先，我们是使用netstat命令来查询当前服务器（VPS）的连接数据。</p>\n<blockquote>\n<p>以下方法适用于 ShadowsocksR(Python) 的服务端，因为ShadowsocksR服务端由 Python 编写，并且默认开启ipv6，所以很容易过滤出一些信息。</p>\n</blockquote>\n<h3 id=\"显示出由Python建立完成的TCP链接列表或连接数\"><a href=\"#显示出由Python建立完成的TCP链接列表或连接数\" class=\"headerlink\" title=\"显示出由Python建立完成的TCP链接列表或连接数\"></a>显示出由Python建立完成的TCP链接列表或连接数</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 显示所有进出链接</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span></div><div class=\"line\"><span class=\"comment\"># 仅显示链接服务器的用户连接</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span></div><div class=\"line\"><span class=\"comment\"># 仅显示链接服务器的用户连接数量</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |wc -l</div><div class=\"line\"><span class=\"comment\"># 仅显示链接服务器的用户连接并写入到文件</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span>&gt;&gt;/root/log.txt</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># 如果你是多用户版(多个端口)的服务端，那么你可以用这个命令</span></div><div class=\"line\"><span class=\"comment\"># 显示当前链接服务器的用户的SS端口</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |awk <span class=\"string\">'&#123;print $4&#125;'</span> |sort -u</div><div class=\"line\"><span class=\"comment\"># CentOS系统用这个</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp'</span> | grep <span class=\"string\">'::ffff:'</span> |awk <span class=\"string\">'&#123;print $4&#125;'</span> |sort -u</div><div class=\"line\"><span class=\"comment\"># 显示当前链接服务器的用户的SS端口数量</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |awk <span class=\"string\">'&#123;print $4&#125;'</span> |sort -u |wc -l</div><div class=\"line\"><span class=\"comment\"># CentOS系统用这个</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp'</span> | grep <span class=\"string\">'::ffff:'</span> |awk <span class=\"string\">'&#123;print $4&#125;'</span> |sort -u |wc -l</div><div class=\"line\"> </div><div class=\"line\"><span class=\"comment\"># 显示当前所有链接SS的用户IP</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |awk <span class=\"string\">'&#123;print $5&#125;'</span> |awk -F <span class=\"string\">\":\"</span> <span class=\"string\">'&#123;print $1&#125;'</span> |sort -u</div><div class=\"line\"><span class=\"comment\"># 显示当前所有链接SS的用户IP数量</span></div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |awk <span class=\"string\">'&#123;print $5&#125;'</span> |awk -F <span class=\"string\">\":\"</span> <span class=\"string\">'&#123;print $1&#125;'</span> |sort -u |wc -l</div></pre></td></tr></table></figure>\n<p>第一条 命令是 把所有的进出链接都列出来，Shadowsocks客户端在链接服务器后 本地的IP和端口 是 “进” 的，服务器在接收到Shadowsocks客户端的数据后会去访问指定的网站或IP，而这是 “出”的。这一条命令就是把这 一进一出 的信息都列出来，可以知道 客户端用户连接的是哪个 SS端口，还有客户 自身的IP和端口。</p>\n<p>第二条 命令是 仅显示链接服务器的用户的链接，也就是上面一段话中说的 “进”，这个命令不会吧服务器在访问的网站或IP给列出来，纯粹用来看 Shadowsocks用户的链接信息。</p>\n<p>第三条 命令是 仅显示链接服务器的用户连接数量，有时候链接 当前服务器的 Shadowsocks用户很多，你只想知道有几个人链接，那就用这一条命令（这个链接数量不是准确的，具体看下面的注意说明）。</p>\n<p>第四条 命令是 仅显示链接服务器的用户连接并写入到文件，有时候在ssh上面查看大量文本不是一个好主意，所以保存到某个目录，然后自己去用sftp下载下来看信息是个不错的选择。</p>\n<p>第五条 命令是 显示当前链接服务器的用户的SS端口，这个命令会去除重复的，最后显示的只有 正在链接SS服务器的用户的SS端口。</p>\n<p>第六条 命令是 显示当前链接服务器的用户的SS端口数量，这个就是显示 数量。</p>\n<p>第七条 命令是 显示当前所有链接SS的用户IP，这个命令会去除重复的，最后显示的只有 正在链接SS服务器的用户的IP。</p>\n<p>第八条 命令是 显示当前所有链接SS的用户IP数量，这个就是显示 数量。</p>\n<blockquote>\n<p>注意：你经常会看到 用户IP一样但后面的端口不一样(1.1.1.1:2333、1.1.1.1:6666)，那是因为他的SS客户端开了好几条TCP链接，所以一般情况下还是一个人在使用，但是也不排除路由器局域网情况下多个人同时使用，这时候也是这样显示的。</p>\n</blockquote>\n<hr>\n<p>如果你想单独查看一个SS端口的链接数，那你可以看看下面几条命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |grep VPS_IP:SS_Port</div><div class=\"line\"><span class=\"comment\"># 示例 netstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep 233.233.233.233:10000</span></div><div class=\"line\"> </div><div class=\"line\">netstat -anp |grep <span class=\"string\">'ESTABLISHED'</span> |grep <span class=\"string\">'python'</span> |grep <span class=\"string\">'tcp6'</span> |grep VPS_IP:SS_Port |wc -l</div><div class=\"line\"><span class=\"comment\"># 示例 netstat -anp |grep 'ESTABLISHED' |grep 'python' |grep 'tcp6' |grep 233.233.233.233:10000 |wc -l</span></div></pre></td></tr></table></figure>\n<p>第一条是 列出 当前SS端口连接的链接数。比如：服务器IP是 233.233.233.233 ，然后你想要知道链接数的端口是 10000 ，那命令就是第二行的示例。</p>\n<p>第二条是 显示 当前SS端口连接的链接数，这个只是显示有几个链接数。示例如上。</p>\n"},{"title":"简单递归","date":"2016-12-14T02:57:29.000Z","_content":"一些简单功能的递归实现\n====\n## 递归的实现原理\n<!--more-->\n## 计算列表长度，不限深度\n如：有列表如下\n```python\n[[(1,2,3), (4,5,6)],[(7,8,9), (10,11,12)]]\n```\n实现方式：\n```python\ndef get_length(data):\n    length = 0\n    for i in data:\n        if type(i) == list:\n            length += get_length(i)\n        else:\n            length += 1\n    return length\n```\n\n## 通过递归找出json中value值为链接\n","source":"_posts/简单递归.md","raw":"---\ntitle: 简单递归\ndate: 2016-12-14 10:57:29\ntags:\n- 递归\n- python\ncategories:\n- python\n---\n一些简单功能的递归实现\n====\n## 递归的实现原理\n<!--more-->\n## 计算列表长度，不限深度\n如：有列表如下\n```python\n[[(1,2,3), (4,5,6)],[(7,8,9), (10,11,12)]]\n```\n实现方式：\n```python\ndef get_length(data):\n    length = 0\n    for i in data:\n        if type(i) == list:\n            length += get_length(i)\n        else:\n            length += 1\n    return length\n```\n\n## 通过递归找出json中value值为链接\n","slug":"简单递归","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqni003o4rd341q30net","content":"<h1 id=\"一些简单功能的递归实现\"><a href=\"#一些简单功能的递归实现\" class=\"headerlink\" title=\"一些简单功能的递归实现\"></a>一些简单功能的递归实现</h1><h2 id=\"递归的实现原理\"><a href=\"#递归的实现原理\" class=\"headerlink\" title=\"递归的实现原理\"></a>递归的实现原理</h2><a id=\"more\"></a>\n<h2 id=\"计算列表长度，不限深度\"><a href=\"#计算列表长度，不限深度\" class=\"headerlink\" title=\"计算列表长度，不限深度\"></a>计算列表长度，不限深度</h2><p>如：有列表如下<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[[(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>), (<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>)],[(<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>), (<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>)]]</div></pre></td></tr></table></figure></p>\n<p>实现方式：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_length</span><span class=\"params\">(data)</span>:</span></div><div class=\"line\">    length = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</div><div class=\"line\">        <span class=\"keyword\">if</span> type(i) == list:</div><div class=\"line\">            length += get_length(i)</div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            length += <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">return</span> length</div></pre></td></tr></table></figure></p>\n<h2 id=\"通过递归找出json中value值为链接\"><a href=\"#通过递归找出json中value值为链接\" class=\"headerlink\" title=\"通过递归找出json中value值为链接\"></a>通过递归找出json中value值为链接</h2>","site":{"data":{}},"excerpt":"<h1 id=\"一些简单功能的递归实现\"><a href=\"#一些简单功能的递归实现\" class=\"headerlink\" title=\"一些简单功能的递归实现\"></a>一些简单功能的递归实现</h1><h2 id=\"递归的实现原理\"><a href=\"#递归的实现原理\" class=\"headerlink\" title=\"递归的实现原理\"></a>递归的实现原理</h2>","more":"<h2 id=\"计算列表长度，不限深度\"><a href=\"#计算列表长度，不限深度\" class=\"headerlink\" title=\"计算列表长度，不限深度\"></a>计算列表长度，不限深度</h2><p>如：有列表如下<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[[(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>), (<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>)],[(<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>), (<span class=\"number\">10</span>,<span class=\"number\">11</span>,<span class=\"number\">12</span>)]]</div></pre></td></tr></table></figure></p>\n<p>实现方式：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_length</span><span class=\"params\">(data)</span>:</span></div><div class=\"line\">    length = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> data:</div><div class=\"line\">        <span class=\"keyword\">if</span> type(i) == list:</div><div class=\"line\">            length += get_length(i)</div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            length += <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">return</span> length</div></pre></td></tr></table></figure></p>\n<h2 id=\"通过递归找出json中value值为链接\"><a href=\"#通过递归找出json中value值为链接\" class=\"headerlink\" title=\"通过递归找出json中value值为链接\"></a>通过递归找出json中value值为链接</h2>"},{"title":"英语中虚拟语气的用法及解析","date":"2016-12-16T03:06:01.000Z","_content":"整理自教学笔记和网络\n<!--more-->\n\n## 虚拟语气\n\n### 定义\n虚拟语气用来表示假想，而不表示客观存在的事实，所说的是一个条件，不一定是事实，或与事实相反。\n\n虚拟语气通过谓语动词的特殊形式来表示。\n\n英语中的语气分为陈述语气、祈使语气、`虚拟语气`三类。\n\n虚拟语气表示说话者所说的话并非事实，或难以实现的，甚至表达相反的概念。\n\n另外表示主观愿望或表达某种强烈的感情时，也用虚拟语气。\n\n### if引导的虚拟语气\n\n#### 条件句中的虚拟语气\n从句中提出一种与客观现实不相符或根本不可能存在的条件，主句会产生的一种不可能获得的结果。\n\n条件句中的虚拟语气根据不同的时间有三种不同的形式。\n\n##### 将来时的条件句中的虚拟语气，如：\n```english\nIf he should go to Qing Hua University he would make full use of his time.\n如果他要上清华大学的话，他就会充分利用他的时间了。\n\nIf he were to come here he would tell us about it.\n如果他要来的话，他会通知我们一声。\n```\n\n##### 现在时的条件句中的虚拟语气，如：\n```english\nIf he were free he would help us.\n要是他有空的话，它会帮助我们的。\n\nIf he studied at this school he would know you well.\n如果他在这所学校学习的话，它会对你很熟悉。\n```\n\n##### 过去时的条件句中的虚拟语气，如：\n```english\nIf I had seen the film I would have told you about it.\n我如果看过这场电影，我会把电影内容告诉你了。\n\nIf I had got there earlier I would have met Mr. Li.\n如果我早点到那儿，我就会会到了李先生。\n```\n\n#### 条件句中的虚拟语气需要注意的问题\n\n##### was 和 were\n当从句的主语为第三人称单数时，谓语动词若是系动词be时，可用 was 代替 were;\n但在倒装虚拟结构及 if I were you 、 as it were 中，只能用 were。\n如：\n```english\nWere I ten years younger I would study abroad.\n要是我还年轻十岁的话，我会去国外学习。\n\nIf I were you I would try my best to grasp the chance.\n要是我是你的话，我要尽力抓住这次机会。\n```\n\n##### 非同时发生\n有时，虚拟条件句中，主、从句的动作若不是同时发生时，须区别对待。\n\n###### 与正在发生的事实不符\n从句的动作与过去事实相反，而主句的动作与现在或现在正在发生的事实不符。如：\n```english\nIf I had worked hard at school I would be an engineer too.\n如果我在学校学习刻苦的话，我现在也会使工程师了\n\nIf they had informed us we would not come here now.\n如果他们通知过我们的话，我们现在就不会来这里了。\n```\n\n###### 与过去事实不符\n从句的动作与现在事实相反，而主句的动作与过去事实不符。如：\n```english\nIf he were free today we would have sent him to Beijing.\n如果他今天有空的话，我们会已经派他去北京了。\n\nIf he knew her he would have greeted her.\n要是他认识她的话，他肯定会去问候她了。\n```\n\n###### 与正在发生的事实相反\n从句的动作与过去发生的情况相反，而主句的动作与现在正在发生的情况相反。如：\n```english\nIf it had not been raining too much the crops would be growing much better.\n如果天不下太多的雨的话，庄家会长得更好。\n\nIf he had been working hard he would be working in the office now.\n要是他工作一直努力的话，他现在已进了办公室了。\n```\n\n##### 含有特定谓语时，if可省略\n当虚拟条件句的谓语动词含有 were should had 时，if 可省略，而将 were should had等词置于句首。如：\n```english\nShould he agree to go there we would send him there.\n要是他答应去的话，我们就派他去。\n\nWere she here she would agree with us.\n如果她在这儿的话，她会同意我们的。\n\nHad he learnt about computers we would have hired him to work here.\n如果她懂一些电脑知识的话，我们会已经聘用他来这里工作了\n```\n\n##### 需由上下文判断语境\n有时，句子没有直接给出假设情况的条件，而须通过上下文或其他方式来判断。如：\n```english\nI would have come to see you but I was too busy.\n我本该来看你了，然而我太忙了。\n\nBut for his help we would be working now.\n要不是他的帮助，我们还会在工作呢。\n\nWithout your instruction I would not have made such great progress.\n要是没有你的指导，我不会取得如此大的进步。\n```\n\n##### 省略主或从句之一\n有时，虚拟条件句中，主、从句可以省略其中的一个，来表示说话人的一种强烈的感情。\n###### 省略从句\n```english\nHe would have finished it.\n他本该完成了。\n\nYou could have passed this exam.\n你应该会通过这次考试了。\n```\n\n###### 省略主句\n```english\nIf I were at home now.\n要是我现在在家里该多好啊。\n\nIf only I had got it.\n要是我得到它了该多好啊。\n```\n\n### 其他状语从句的虚拟语气\n#### 目的状语从句中的虚拟语气\n\n##### should + 动词原型\n在 for fear that \\ in case \\ lest 引导的目的状语从句中，若用虚拟语气时，\n从句谓语为： should + 动词原形。并且 should 不能省略\n```english\nShe examined the door again for fear that a thief should come in.\n她又把门检查了一遍，以防盗贼的进入。\n\nHe started out earlier lest he should be late.\n他很早就出发了以防迟到。\n```\n#####\n在 so that \\ in order that 所引导的目的状语从句中，\n从句中的谓语为：can / may / could / might / will / would / should + 动词原形。\n\n如：\n```english\nHe goes closer to the speaker so that he can hear him clearer.\n他走近说话的人以便能挺得更清楚。\n\nHe read the letter carefully in order that he should not miss a word.\n他把信读得很仔细以便不漏掉一个单词。\n```\n\n\n\n\n\n\n> 引用\n\n> [英语中if虚拟语气的用法解析](http://blog.sina.com.cn/s/blog_14a9f05cc0102wlja.html)\n\n> [虚拟语气-百度百科](http://baike.baidu.com/view/26751.htm)","source":"_posts/英语中虚拟语气的用法及解析.md","raw":"---\ntitle: 英语中虚拟语气的用法及解析\ndate: 2016-12-16 11:06:01\ntags:\n- 英语\n- 虚拟语气\ncategories:\n- English\n---\n整理自教学笔记和网络\n<!--more-->\n\n## 虚拟语气\n\n### 定义\n虚拟语气用来表示假想，而不表示客观存在的事实，所说的是一个条件，不一定是事实，或与事实相反。\n\n虚拟语气通过谓语动词的特殊形式来表示。\n\n英语中的语气分为陈述语气、祈使语气、`虚拟语气`三类。\n\n虚拟语气表示说话者所说的话并非事实，或难以实现的，甚至表达相反的概念。\n\n另外表示主观愿望或表达某种强烈的感情时，也用虚拟语气。\n\n### if引导的虚拟语气\n\n#### 条件句中的虚拟语气\n从句中提出一种与客观现实不相符或根本不可能存在的条件，主句会产生的一种不可能获得的结果。\n\n条件句中的虚拟语气根据不同的时间有三种不同的形式。\n\n##### 将来时的条件句中的虚拟语气，如：\n```english\nIf he should go to Qing Hua University he would make full use of his time.\n如果他要上清华大学的话，他就会充分利用他的时间了。\n\nIf he were to come here he would tell us about it.\n如果他要来的话，他会通知我们一声。\n```\n\n##### 现在时的条件句中的虚拟语气，如：\n```english\nIf he were free he would help us.\n要是他有空的话，它会帮助我们的。\n\nIf he studied at this school he would know you well.\n如果他在这所学校学习的话，它会对你很熟悉。\n```\n\n##### 过去时的条件句中的虚拟语气，如：\n```english\nIf I had seen the film I would have told you about it.\n我如果看过这场电影，我会把电影内容告诉你了。\n\nIf I had got there earlier I would have met Mr. Li.\n如果我早点到那儿，我就会会到了李先生。\n```\n\n#### 条件句中的虚拟语气需要注意的问题\n\n##### was 和 were\n当从句的主语为第三人称单数时，谓语动词若是系动词be时，可用 was 代替 were;\n但在倒装虚拟结构及 if I were you 、 as it were 中，只能用 were。\n如：\n```english\nWere I ten years younger I would study abroad.\n要是我还年轻十岁的话，我会去国外学习。\n\nIf I were you I would try my best to grasp the chance.\n要是我是你的话，我要尽力抓住这次机会。\n```\n\n##### 非同时发生\n有时，虚拟条件句中，主、从句的动作若不是同时发生时，须区别对待。\n\n###### 与正在发生的事实不符\n从句的动作与过去事实相反，而主句的动作与现在或现在正在发生的事实不符。如：\n```english\nIf I had worked hard at school I would be an engineer too.\n如果我在学校学习刻苦的话，我现在也会使工程师了\n\nIf they had informed us we would not come here now.\n如果他们通知过我们的话，我们现在就不会来这里了。\n```\n\n###### 与过去事实不符\n从句的动作与现在事实相反，而主句的动作与过去事实不符。如：\n```english\nIf he were free today we would have sent him to Beijing.\n如果他今天有空的话，我们会已经派他去北京了。\n\nIf he knew her he would have greeted her.\n要是他认识她的话，他肯定会去问候她了。\n```\n\n###### 与正在发生的事实相反\n从句的动作与过去发生的情况相反，而主句的动作与现在正在发生的情况相反。如：\n```english\nIf it had not been raining too much the crops would be growing much better.\n如果天不下太多的雨的话，庄家会长得更好。\n\nIf he had been working hard he would be working in the office now.\n要是他工作一直努力的话，他现在已进了办公室了。\n```\n\n##### 含有特定谓语时，if可省略\n当虚拟条件句的谓语动词含有 were should had 时，if 可省略，而将 were should had等词置于句首。如：\n```english\nShould he agree to go there we would send him there.\n要是他答应去的话，我们就派他去。\n\nWere she here she would agree with us.\n如果她在这儿的话，她会同意我们的。\n\nHad he learnt about computers we would have hired him to work here.\n如果她懂一些电脑知识的话，我们会已经聘用他来这里工作了\n```\n\n##### 需由上下文判断语境\n有时，句子没有直接给出假设情况的条件，而须通过上下文或其他方式来判断。如：\n```english\nI would have come to see you but I was too busy.\n我本该来看你了，然而我太忙了。\n\nBut for his help we would be working now.\n要不是他的帮助，我们还会在工作呢。\n\nWithout your instruction I would not have made such great progress.\n要是没有你的指导，我不会取得如此大的进步。\n```\n\n##### 省略主或从句之一\n有时，虚拟条件句中，主、从句可以省略其中的一个，来表示说话人的一种强烈的感情。\n###### 省略从句\n```english\nHe would have finished it.\n他本该完成了。\n\nYou could have passed this exam.\n你应该会通过这次考试了。\n```\n\n###### 省略主句\n```english\nIf I were at home now.\n要是我现在在家里该多好啊。\n\nIf only I had got it.\n要是我得到它了该多好啊。\n```\n\n### 其他状语从句的虚拟语气\n#### 目的状语从句中的虚拟语气\n\n##### should + 动词原型\n在 for fear that \\ in case \\ lest 引导的目的状语从句中，若用虚拟语气时，\n从句谓语为： should + 动词原形。并且 should 不能省略\n```english\nShe examined the door again for fear that a thief should come in.\n她又把门检查了一遍，以防盗贼的进入。\n\nHe started out earlier lest he should be late.\n他很早就出发了以防迟到。\n```\n#####\n在 so that \\ in order that 所引导的目的状语从句中，\n从句中的谓语为：can / may / could / might / will / would / should + 动词原形。\n\n如：\n```english\nHe goes closer to the speaker so that he can hear him clearer.\n他走近说话的人以便能挺得更清楚。\n\nHe read the letter carefully in order that he should not miss a word.\n他把信读得很仔细以便不漏掉一个单词。\n```\n\n\n\n\n\n\n> 引用\n\n> [英语中if虚拟语气的用法解析](http://blog.sina.com.cn/s/blog_14a9f05cc0102wlja.html)\n\n> [虚拟语气-百度百科](http://baike.baidu.com/view/26751.htm)","slug":"英语中虚拟语气的用法及解析","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqnk003r4rd3cuyrfssg","content":"<p>整理自教学笔记和网络<br><a id=\"more\"></a></p>\n<h2 id=\"虚拟语气\"><a href=\"#虚拟语气\" class=\"headerlink\" title=\"虚拟语气\"></a>虚拟语气</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>虚拟语气用来表示假想，而不表示客观存在的事实，所说的是一个条件，不一定是事实，或与事实相反。</p>\n<p>虚拟语气通过谓语动词的特殊形式来表示。</p>\n<p>英语中的语气分为陈述语气、祈使语气、<code>虚拟语气</code>三类。</p>\n<p>虚拟语气表示说话者所说的话并非事实，或难以实现的，甚至表达相反的概念。</p>\n<p>另外表示主观愿望或表达某种强烈的感情时，也用虚拟语气。</p>\n<h3 id=\"if引导的虚拟语气\"><a href=\"#if引导的虚拟语气\" class=\"headerlink\" title=\"if引导的虚拟语气\"></a>if引导的虚拟语气</h3><h4 id=\"条件句中的虚拟语气\"><a href=\"#条件句中的虚拟语气\" class=\"headerlink\" title=\"条件句中的虚拟语气\"></a>条件句中的虚拟语气</h4><p>从句中提出一种与客观现实不相符或根本不可能存在的条件，主句会产生的一种不可能获得的结果。</p>\n<p>条件句中的虚拟语气根据不同的时间有三种不同的形式。</p>\n<h5 id=\"将来时的条件句中的虚拟语气，如：\"><a href=\"#将来时的条件句中的虚拟语气，如：\" class=\"headerlink\" title=\"将来时的条件句中的虚拟语气，如：\"></a>将来时的条件句中的虚拟语气，如：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If he should go to Qing Hua University he would make full use of his time.</div><div class=\"line\">如果他要上清华大学的话，他就会充分利用他的时间了。</div><div class=\"line\"></div><div class=\"line\">If he were to come here he would tell us about it.</div><div class=\"line\">如果他要来的话，他会通知我们一声。</div></pre></td></tr></table></figure>\n<h5 id=\"现在时的条件句中的虚拟语气，如：\"><a href=\"#现在时的条件句中的虚拟语气，如：\" class=\"headerlink\" title=\"现在时的条件句中的虚拟语气，如：\"></a>现在时的条件句中的虚拟语气，如：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If he were free he would help us.</div><div class=\"line\">要是他有空的话，它会帮助我们的。</div><div class=\"line\"></div><div class=\"line\">If he studied at this school he would know you well.</div><div class=\"line\">如果他在这所学校学习的话，它会对你很熟悉。</div></pre></td></tr></table></figure>\n<h5 id=\"过去时的条件句中的虚拟语气，如：\"><a href=\"#过去时的条件句中的虚拟语气，如：\" class=\"headerlink\" title=\"过去时的条件句中的虚拟语气，如：\"></a>过去时的条件句中的虚拟语气，如：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If I had seen the film I would have told you about it.</div><div class=\"line\">我如果看过这场电影，我会把电影内容告诉你了。</div><div class=\"line\"></div><div class=\"line\">If I had got there earlier I would have met Mr. Li.</div><div class=\"line\">如果我早点到那儿，我就会会到了李先生。</div></pre></td></tr></table></figure>\n<h4 id=\"条件句中的虚拟语气需要注意的问题\"><a href=\"#条件句中的虚拟语气需要注意的问题\" class=\"headerlink\" title=\"条件句中的虚拟语气需要注意的问题\"></a>条件句中的虚拟语气需要注意的问题</h4><h5 id=\"was-和-were\"><a href=\"#was-和-were\" class=\"headerlink\" title=\"was 和 were\"></a>was 和 were</h5><p>当从句的主语为第三人称单数时，谓语动词若是系动词be时，可用 was 代替 were;<br>但在倒装虚拟结构及 if I were you 、 as it were 中，只能用 were。<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Were I ten years younger I would study abroad.</div><div class=\"line\">要是我还年轻十岁的话，我会去国外学习。</div><div class=\"line\"></div><div class=\"line\">If I were you I would try my best to grasp the chance.</div><div class=\"line\">要是我是你的话，我要尽力抓住这次机会。</div></pre></td></tr></table></figure></p>\n<h5 id=\"非同时发生\"><a href=\"#非同时发生\" class=\"headerlink\" title=\"非同时发生\"></a>非同时发生</h5><p>有时，虚拟条件句中，主、从句的动作若不是同时发生时，须区别对待。</p>\n<h6 id=\"与正在发生的事实不符\"><a href=\"#与正在发生的事实不符\" class=\"headerlink\" title=\"与正在发生的事实不符\"></a>与正在发生的事实不符</h6><p>从句的动作与过去事实相反，而主句的动作与现在或现在正在发生的事实不符。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If I had worked hard at school I would be an engineer too.</div><div class=\"line\">如果我在学校学习刻苦的话，我现在也会使工程师了</div><div class=\"line\"></div><div class=\"line\">If they had informed us we would not come here now.</div><div class=\"line\">如果他们通知过我们的话，我们现在就不会来这里了。</div></pre></td></tr></table></figure></p>\n<h6 id=\"与过去事实不符\"><a href=\"#与过去事实不符\" class=\"headerlink\" title=\"与过去事实不符\"></a>与过去事实不符</h6><p>从句的动作与现在事实相反，而主句的动作与过去事实不符。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If he were free today we would have sent him to Beijing.</div><div class=\"line\">如果他今天有空的话，我们会已经派他去北京了。</div><div class=\"line\"></div><div class=\"line\">If he knew her he would have greeted her.</div><div class=\"line\">要是他认识她的话，他肯定会去问候她了。</div></pre></td></tr></table></figure></p>\n<h6 id=\"与正在发生的事实相反\"><a href=\"#与正在发生的事实相反\" class=\"headerlink\" title=\"与正在发生的事实相反\"></a>与正在发生的事实相反</h6><p>从句的动作与过去发生的情况相反，而主句的动作与现在正在发生的情况相反。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If it had not been raining too much the crops would be growing much better.</div><div class=\"line\">如果天不下太多的雨的话，庄家会长得更好。</div><div class=\"line\"></div><div class=\"line\">If he had been working hard he would be working in the office now.</div><div class=\"line\">要是他工作一直努力的话，他现在已进了办公室了。</div></pre></td></tr></table></figure></p>\n<h5 id=\"含有特定谓语时，if可省略\"><a href=\"#含有特定谓语时，if可省略\" class=\"headerlink\" title=\"含有特定谓语时，if可省略\"></a>含有特定谓语时，if可省略</h5><p>当虚拟条件句的谓语动词含有 were should had 时，if 可省略，而将 were should had等词置于句首。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Should he agree to go there we would send him there.</div><div class=\"line\">要是他答应去的话，我们就派他去。</div><div class=\"line\"></div><div class=\"line\">Were she here she would agree with us.</div><div class=\"line\">如果她在这儿的话，她会同意我们的。</div><div class=\"line\"></div><div class=\"line\">Had he learnt about computers we would have hired him to work here.</div><div class=\"line\">如果她懂一些电脑知识的话，我们会已经聘用他来这里工作了</div></pre></td></tr></table></figure></p>\n<h5 id=\"需由上下文判断语境\"><a href=\"#需由上下文判断语境\" class=\"headerlink\" title=\"需由上下文判断语境\"></a>需由上下文判断语境</h5><p>有时，句子没有直接给出假设情况的条件，而须通过上下文或其他方式来判断。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">I would have come to see you but I was too busy.</div><div class=\"line\">我本该来看你了，然而我太忙了。</div><div class=\"line\"></div><div class=\"line\">But for his help we would be working now.</div><div class=\"line\">要不是他的帮助，我们还会在工作呢。</div><div class=\"line\"></div><div class=\"line\">Without your instruction I would not have made such great progress.</div><div class=\"line\">要是没有你的指导，我不会取得如此大的进步。</div></pre></td></tr></table></figure></p>\n<h5 id=\"省略主或从句之一\"><a href=\"#省略主或从句之一\" class=\"headerlink\" title=\"省略主或从句之一\"></a>省略主或从句之一</h5><p>有时，虚拟条件句中，主、从句可以省略其中的一个，来表示说话人的一种强烈的感情。</p>\n<h6 id=\"省略从句\"><a href=\"#省略从句\" class=\"headerlink\" title=\"省略从句\"></a>省略从句</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">He would have finished it.</div><div class=\"line\">他本该完成了。</div><div class=\"line\"></div><div class=\"line\">You could have passed this exam.</div><div class=\"line\">你应该会通过这次考试了。</div></pre></td></tr></table></figure>\n<h6 id=\"省略主句\"><a href=\"#省略主句\" class=\"headerlink\" title=\"省略主句\"></a>省略主句</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If I were at home now.</div><div class=\"line\">要是我现在在家里该多好啊。</div><div class=\"line\"></div><div class=\"line\">If only I had got it.</div><div class=\"line\">要是我得到它了该多好啊。</div></pre></td></tr></table></figure>\n<h3 id=\"其他状语从句的虚拟语气\"><a href=\"#其他状语从句的虚拟语气\" class=\"headerlink\" title=\"其他状语从句的虚拟语气\"></a>其他状语从句的虚拟语气</h3><h4 id=\"目的状语从句中的虚拟语气\"><a href=\"#目的状语从句中的虚拟语气\" class=\"headerlink\" title=\"目的状语从句中的虚拟语气\"></a>目的状语从句中的虚拟语气</h4><h5 id=\"should-动词原型\"><a href=\"#should-动词原型\" class=\"headerlink\" title=\"should + 动词原型\"></a>should + 动词原型</h5><p>在 for fear that \\ in case \\ lest 引导的目的状语从句中，若用虚拟语气时，<br>从句谓语为： should + 动词原形。并且 should 不能省略<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">She examined the door again for fear that a thief should come in.</div><div class=\"line\">她又把门检查了一遍，以防盗贼的进入。</div><div class=\"line\"></div><div class=\"line\">He started out earlier lest he should be late.</div><div class=\"line\">他很早就出发了以防迟到。</div></pre></td></tr></table></figure></p>\n<p>#####<br>在 so that \\ in order that 所引导的目的状语从句中，<br>从句中的谓语为：can / may / could / might / will / would / should + 动词原形。</p>\n<p>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">He goes closer to the speaker so that he can hear him clearer.</div><div class=\"line\">他走近说话的人以便能挺得更清楚。</div><div class=\"line\"></div><div class=\"line\">He read the letter carefully in order that he should not miss a word.</div><div class=\"line\">他把信读得很仔细以便不漏掉一个单词。</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>引用</p>\n<p><a href=\"http://blog.sina.com.cn/s/blog_14a9f05cc0102wlja.html\" target=\"_blank\" rel=\"external\">英语中if虚拟语气的用法解析</a></p>\n<p><a href=\"http://baike.baidu.com/view/26751.htm\" target=\"_blank\" rel=\"external\">虚拟语气-百度百科</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>整理自教学笔记和网络<br>","more":"</p>\n<h2 id=\"虚拟语气\"><a href=\"#虚拟语气\" class=\"headerlink\" title=\"虚拟语气\"></a>虚拟语气</h2><h3 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h3><p>虚拟语气用来表示假想，而不表示客观存在的事实，所说的是一个条件，不一定是事实，或与事实相反。</p>\n<p>虚拟语气通过谓语动词的特殊形式来表示。</p>\n<p>英语中的语气分为陈述语气、祈使语气、<code>虚拟语气</code>三类。</p>\n<p>虚拟语气表示说话者所说的话并非事实，或难以实现的，甚至表达相反的概念。</p>\n<p>另外表示主观愿望或表达某种强烈的感情时，也用虚拟语气。</p>\n<h3 id=\"if引导的虚拟语气\"><a href=\"#if引导的虚拟语气\" class=\"headerlink\" title=\"if引导的虚拟语气\"></a>if引导的虚拟语气</h3><h4 id=\"条件句中的虚拟语气\"><a href=\"#条件句中的虚拟语气\" class=\"headerlink\" title=\"条件句中的虚拟语气\"></a>条件句中的虚拟语气</h4><p>从句中提出一种与客观现实不相符或根本不可能存在的条件，主句会产生的一种不可能获得的结果。</p>\n<p>条件句中的虚拟语气根据不同的时间有三种不同的形式。</p>\n<h5 id=\"将来时的条件句中的虚拟语气，如：\"><a href=\"#将来时的条件句中的虚拟语气，如：\" class=\"headerlink\" title=\"将来时的条件句中的虚拟语气，如：\"></a>将来时的条件句中的虚拟语气，如：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If he should go to Qing Hua University he would make full use of his time.</div><div class=\"line\">如果他要上清华大学的话，他就会充分利用他的时间了。</div><div class=\"line\"></div><div class=\"line\">If he were to come here he would tell us about it.</div><div class=\"line\">如果他要来的话，他会通知我们一声。</div></pre></td></tr></table></figure>\n<h5 id=\"现在时的条件句中的虚拟语气，如：\"><a href=\"#现在时的条件句中的虚拟语气，如：\" class=\"headerlink\" title=\"现在时的条件句中的虚拟语气，如：\"></a>现在时的条件句中的虚拟语气，如：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If he were free he would help us.</div><div class=\"line\">要是他有空的话，它会帮助我们的。</div><div class=\"line\"></div><div class=\"line\">If he studied at this school he would know you well.</div><div class=\"line\">如果他在这所学校学习的话，它会对你很熟悉。</div></pre></td></tr></table></figure>\n<h5 id=\"过去时的条件句中的虚拟语气，如：\"><a href=\"#过去时的条件句中的虚拟语气，如：\" class=\"headerlink\" title=\"过去时的条件句中的虚拟语气，如：\"></a>过去时的条件句中的虚拟语气，如：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If I had seen the film I would have told you about it.</div><div class=\"line\">我如果看过这场电影，我会把电影内容告诉你了。</div><div class=\"line\"></div><div class=\"line\">If I had got there earlier I would have met Mr. Li.</div><div class=\"line\">如果我早点到那儿，我就会会到了李先生。</div></pre></td></tr></table></figure>\n<h4 id=\"条件句中的虚拟语气需要注意的问题\"><a href=\"#条件句中的虚拟语气需要注意的问题\" class=\"headerlink\" title=\"条件句中的虚拟语气需要注意的问题\"></a>条件句中的虚拟语气需要注意的问题</h4><h5 id=\"was-和-were\"><a href=\"#was-和-were\" class=\"headerlink\" title=\"was 和 were\"></a>was 和 were</h5><p>当从句的主语为第三人称单数时，谓语动词若是系动词be时，可用 was 代替 were;<br>但在倒装虚拟结构及 if I were you 、 as it were 中，只能用 were。<br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Were I ten years younger I would study abroad.</div><div class=\"line\">要是我还年轻十岁的话，我会去国外学习。</div><div class=\"line\"></div><div class=\"line\">If I were you I would try my best to grasp the chance.</div><div class=\"line\">要是我是你的话，我要尽力抓住这次机会。</div></pre></td></tr></table></figure></p>\n<h5 id=\"非同时发生\"><a href=\"#非同时发生\" class=\"headerlink\" title=\"非同时发生\"></a>非同时发生</h5><p>有时，虚拟条件句中，主、从句的动作若不是同时发生时，须区别对待。</p>\n<h6 id=\"与正在发生的事实不符\"><a href=\"#与正在发生的事实不符\" class=\"headerlink\" title=\"与正在发生的事实不符\"></a>与正在发生的事实不符</h6><p>从句的动作与过去事实相反，而主句的动作与现在或现在正在发生的事实不符。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If I had worked hard at school I would be an engineer too.</div><div class=\"line\">如果我在学校学习刻苦的话，我现在也会使工程师了</div><div class=\"line\"></div><div class=\"line\">If they had informed us we would not come here now.</div><div class=\"line\">如果他们通知过我们的话，我们现在就不会来这里了。</div></pre></td></tr></table></figure></p>\n<h6 id=\"与过去事实不符\"><a href=\"#与过去事实不符\" class=\"headerlink\" title=\"与过去事实不符\"></a>与过去事实不符</h6><p>从句的动作与现在事实相反，而主句的动作与过去事实不符。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If he were free today we would have sent him to Beijing.</div><div class=\"line\">如果他今天有空的话，我们会已经派他去北京了。</div><div class=\"line\"></div><div class=\"line\">If he knew her he would have greeted her.</div><div class=\"line\">要是他认识她的话，他肯定会去问候她了。</div></pre></td></tr></table></figure></p>\n<h6 id=\"与正在发生的事实相反\"><a href=\"#与正在发生的事实相反\" class=\"headerlink\" title=\"与正在发生的事实相反\"></a>与正在发生的事实相反</h6><p>从句的动作与过去发生的情况相反，而主句的动作与现在正在发生的情况相反。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If it had not been raining too much the crops would be growing much better.</div><div class=\"line\">如果天不下太多的雨的话，庄家会长得更好。</div><div class=\"line\"></div><div class=\"line\">If he had been working hard he would be working in the office now.</div><div class=\"line\">要是他工作一直努力的话，他现在已进了办公室了。</div></pre></td></tr></table></figure></p>\n<h5 id=\"含有特定谓语时，if可省略\"><a href=\"#含有特定谓语时，if可省略\" class=\"headerlink\" title=\"含有特定谓语时，if可省略\"></a>含有特定谓语时，if可省略</h5><p>当虚拟条件句的谓语动词含有 were should had 时，if 可省略，而将 were should had等词置于句首。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Should he agree to go there we would send him there.</div><div class=\"line\">要是他答应去的话，我们就派他去。</div><div class=\"line\"></div><div class=\"line\">Were she here she would agree with us.</div><div class=\"line\">如果她在这儿的话，她会同意我们的。</div><div class=\"line\"></div><div class=\"line\">Had he learnt about computers we would have hired him to work here.</div><div class=\"line\">如果她懂一些电脑知识的话，我们会已经聘用他来这里工作了</div></pre></td></tr></table></figure></p>\n<h5 id=\"需由上下文判断语境\"><a href=\"#需由上下文判断语境\" class=\"headerlink\" title=\"需由上下文判断语境\"></a>需由上下文判断语境</h5><p>有时，句子没有直接给出假设情况的条件，而须通过上下文或其他方式来判断。如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">I would have come to see you but I was too busy.</div><div class=\"line\">我本该来看你了，然而我太忙了。</div><div class=\"line\"></div><div class=\"line\">But for his help we would be working now.</div><div class=\"line\">要不是他的帮助，我们还会在工作呢。</div><div class=\"line\"></div><div class=\"line\">Without your instruction I would not have made such great progress.</div><div class=\"line\">要是没有你的指导，我不会取得如此大的进步。</div></pre></td></tr></table></figure></p>\n<h5 id=\"省略主或从句之一\"><a href=\"#省略主或从句之一\" class=\"headerlink\" title=\"省略主或从句之一\"></a>省略主或从句之一</h5><p>有时，虚拟条件句中，主、从句可以省略其中的一个，来表示说话人的一种强烈的感情。</p>\n<h6 id=\"省略从句\"><a href=\"#省略从句\" class=\"headerlink\" title=\"省略从句\"></a>省略从句</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">He would have finished it.</div><div class=\"line\">他本该完成了。</div><div class=\"line\"></div><div class=\"line\">You could have passed this exam.</div><div class=\"line\">你应该会通过这次考试了。</div></pre></td></tr></table></figure>\n<h6 id=\"省略主句\"><a href=\"#省略主句\" class=\"headerlink\" title=\"省略主句\"></a>省略主句</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">If I were at home now.</div><div class=\"line\">要是我现在在家里该多好啊。</div><div class=\"line\"></div><div class=\"line\">If only I had got it.</div><div class=\"line\">要是我得到它了该多好啊。</div></pre></td></tr></table></figure>\n<h3 id=\"其他状语从句的虚拟语气\"><a href=\"#其他状语从句的虚拟语气\" class=\"headerlink\" title=\"其他状语从句的虚拟语气\"></a>其他状语从句的虚拟语气</h3><h4 id=\"目的状语从句中的虚拟语气\"><a href=\"#目的状语从句中的虚拟语气\" class=\"headerlink\" title=\"目的状语从句中的虚拟语气\"></a>目的状语从句中的虚拟语气</h4><h5 id=\"should-动词原型\"><a href=\"#should-动词原型\" class=\"headerlink\" title=\"should + 动词原型\"></a>should + 动词原型</h5><p>在 for fear that \\ in case \\ lest 引导的目的状语从句中，若用虚拟语气时，<br>从句谓语为： should + 动词原形。并且 should 不能省略<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">She examined the door again for fear that a thief should come in.</div><div class=\"line\">她又把门检查了一遍，以防盗贼的进入。</div><div class=\"line\"></div><div class=\"line\">He started out earlier lest he should be late.</div><div class=\"line\">他很早就出发了以防迟到。</div></pre></td></tr></table></figure></p>\n<p>#####<br>在 so that \\ in order that 所引导的目的状语从句中，<br>从句中的谓语为：can / may / could / might / will / would / should + 动词原形。</p>\n<p>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">He goes closer to the speaker so that he can hear him clearer.</div><div class=\"line\">他走近说话的人以便能挺得更清楚。</div><div class=\"line\"></div><div class=\"line\">He read the letter carefully in order that he should not miss a word.</div><div class=\"line\">他把信读得很仔细以便不漏掉一个单词。</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>引用</p>\n<p><a href=\"http://blog.sina.com.cn/s/blog_14a9f05cc0102wlja.html\" target=\"_blank\" rel=\"external\">英语中if虚拟语气的用法解析</a></p>\n<p><a href=\"http://baike.baidu.com/view/26751.htm\" target=\"_blank\" rel=\"external\">虚拟语气-百度百科</a></p>\n</blockquote>"},{"title":"高分电影之地球脉动 Planet Earth Season","date":"2017-01-07T05:23:38.000Z","_content":"\n高分电影之地球脉动 Planet Earth Season\n====\n\n## 地球脉动 第二季 Planet Earth Season 2 2016\n\n> 这部电影不用多说，通过独立鱼了解到的，看豆瓣评分就知道了：[豆瓣评分9.9](https://movie.douban.com/subject/26733371/)\n一共六集，每一集都很震撼，每一个镜头都非常精彩，每一个画面都是壁纸，精彩至极，美轮美奂。\n\n![地球脉动](http://image18.poco.cn/mypoco/myphoto/20161217/19/183365877201612171902122187116865658_000.jpg)\n<!--more-->\n我大电影天堂的资源，记录上；而且貌似腾讯视频把版权买下来了。\n\n### 【下载地址】\n\n[第一集](ftp://ygdy8:ygdy8@y219.dydytt.net:8201/[阳光电影www.ygdy8.com].地球脉动2.第一集.BD.720p.中英双字幕.mkv)\n[第二集](ftp://ygdy8:ygdy8@y153.dydytt.net:8223/[阳光电影www.ygdy8.com].地球脉动2.第二集.BD.720p.中英双字幕.mkv)\n[第三集](ftp://ygdy8:ygdy8@y219.dydytt.net:9225/[阳光电影www.ygdy8.com].地球脉动2.第三集.BD.720p.中英双字幕.mkv)\n[第四集](ftp://ygdy8:ygdy8@y153.dydytt.net:9170/[阳光电影www.ygdy8.com].地球脉动2.第四集.BD.720p.中英双字幕.mkv)\n[第五集](ftp://ygdy8:ygdy8@y219.dydytt.net:9225/[阳光电影www.ygdy8.com].地球脉动2.第五集.BD.720p.中英双字幕.mkv)\n[第六集](ftp://ygdy8:ygdy8@y153.dydytt.net:9170/[阳光电影www.ygdy8.com].地球脉动2.第六集.BD.720p.中英双字幕.mkv)\n\n### 观影感受\n\n#### 第一集\n\n#### 第二集\n\n#### 第三集 雨林\n\n\n#### 第四集\n\n#### 第五集\n\n#### 第六集\n\n## 地球脉动 第一季 Planet Earth Season 1 (2006)\n\n> 补上第一季，回头重温一遍：[豆瓣评分9.7](https://movie.douban.com/subject/1871906/)\n\n![地球脉动1](http://ww2.sinaimg.cn/mw690/af0de422gw1f1fgkdwyqvj207r0b4q3z.jpg)\n\n### [下载地址]\n[第一集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8301%5D.Planet.Earth.01.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998975412|cd24991bb3210b270156576c4876ef64|h=ntrplgbi4jzk6rhqhveqoyecxx6nfxiq|/%20)\n[第二集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8302%5D.Planet.Earth.02.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006495160|2d74749d73de3a6510186a3112e1130a|h=cqlmfmilhyipyot7s5wpehasbdjjvlfd|/%20)\n[第三集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8303%5D.Planet.Earth.03.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999102809|5db35d5591c92a3b5d80b6dcbffd9d72|h=b6f5t5jtnwehq7pmsbfjoohnltcgso5m|/%20)\n[第四集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8304%5D.Planet.Earth.04.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999118732|29c6275de49faeb068a85baa7eaffcb2|h=j5xr6qlkkelfr76te4df7sride26qh24|/%20)\n[第五集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8305%5D.Planet.Earth.05.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006555512|402fdec03c404145f118f6830f5b0c8f|h=koaewrnxbs74me3dnynge6y6ohwllmvb|/%20)\n[第六集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8306%5D.Planet.Earth.06.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999074319|7a27f1b9646585054a80729c8055b258|h=kf3a3i24evsgm34l6atwg7hdnaup2g3d|/%20)\n[第七集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8307%5D.Planet.Earth.07.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999175302|d5fab1283e1873337e43e52b7c4e9396|h=bmsfh3diffj4ydjo6kkmfvbcgzzg255y|/%20)\n[第八集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8308%5D.Planet.Earth.08.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006370847|1973be54a704cb9fd6430c2aab1a0699|h=avbqzzdbmndzqibeehkxtyygp6b55blg|/%20)\n[第九集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8309%5D.Planet.Earth.09.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998931813|5bbb7785ac26c7f4b28f7dfb92508d28|h=6ca2dtsgc4pqhmndr7t73agc534c3hg3|/%20)\n[第十集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8310%5D.Planet.Earth.10.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999050396|7721c08ccfa202f384291473afbe1a37|h=snuzsnsqpz4mbpcymy6426ijqtwnsamt|/%20)\n[第十一集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8311%5D.Planet.Earth.11.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998835608|bb9f6c586ca9b6b69a1ea31729a7ac82|h=47doibafg6pefz4dyjq2ahsmxx4nfcfi|/)\n\n### 共11集","source":"_posts/高分电影之地球脉动-Planet-Earth-Season.md","raw":"---\ntitle: 高分电影之地球脉动 Planet Earth Season\ndate: 2017-01-07 13:23:38\ntags:\n- 高分电影\n- 地球脉动\ncategories:\n- life\n- 高分电影\n---\n\n高分电影之地球脉动 Planet Earth Season\n====\n\n## 地球脉动 第二季 Planet Earth Season 2 2016\n\n> 这部电影不用多说，通过独立鱼了解到的，看豆瓣评分就知道了：[豆瓣评分9.9](https://movie.douban.com/subject/26733371/)\n一共六集，每一集都很震撼，每一个镜头都非常精彩，每一个画面都是壁纸，精彩至极，美轮美奂。\n\n![地球脉动](http://image18.poco.cn/mypoco/myphoto/20161217/19/183365877201612171902122187116865658_000.jpg)\n<!--more-->\n我大电影天堂的资源，记录上；而且貌似腾讯视频把版权买下来了。\n\n### 【下载地址】\n\n[第一集](ftp://ygdy8:ygdy8@y219.dydytt.net:8201/[阳光电影www.ygdy8.com].地球脉动2.第一集.BD.720p.中英双字幕.mkv)\n[第二集](ftp://ygdy8:ygdy8@y153.dydytt.net:8223/[阳光电影www.ygdy8.com].地球脉动2.第二集.BD.720p.中英双字幕.mkv)\n[第三集](ftp://ygdy8:ygdy8@y219.dydytt.net:9225/[阳光电影www.ygdy8.com].地球脉动2.第三集.BD.720p.中英双字幕.mkv)\n[第四集](ftp://ygdy8:ygdy8@y153.dydytt.net:9170/[阳光电影www.ygdy8.com].地球脉动2.第四集.BD.720p.中英双字幕.mkv)\n[第五集](ftp://ygdy8:ygdy8@y219.dydytt.net:9225/[阳光电影www.ygdy8.com].地球脉动2.第五集.BD.720p.中英双字幕.mkv)\n[第六集](ftp://ygdy8:ygdy8@y153.dydytt.net:9170/[阳光电影www.ygdy8.com].地球脉动2.第六集.BD.720p.中英双字幕.mkv)\n\n### 观影感受\n\n#### 第一集\n\n#### 第二集\n\n#### 第三集 雨林\n\n\n#### 第四集\n\n#### 第五集\n\n#### 第六集\n\n## 地球脉动 第一季 Planet Earth Season 1 (2006)\n\n> 补上第一季，回头重温一遍：[豆瓣评分9.7](https://movie.douban.com/subject/1871906/)\n\n![地球脉动1](http://ww2.sinaimg.cn/mw690/af0de422gw1f1fgkdwyqvj207r0b4q3z.jpg)\n\n### [下载地址]\n[第一集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8301%5D.Planet.Earth.01.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998975412|cd24991bb3210b270156576c4876ef64|h=ntrplgbi4jzk6rhqhveqoyecxx6nfxiq|/%20)\n[第二集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8302%5D.Planet.Earth.02.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006495160|2d74749d73de3a6510186a3112e1130a|h=cqlmfmilhyipyot7s5wpehasbdjjvlfd|/%20)\n[第三集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8303%5D.Planet.Earth.03.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999102809|5db35d5591c92a3b5d80b6dcbffd9d72|h=b6f5t5jtnwehq7pmsbfjoohnltcgso5m|/%20)\n[第四集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8304%5D.Planet.Earth.04.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999118732|29c6275de49faeb068a85baa7eaffcb2|h=j5xr6qlkkelfr76te4df7sride26qh24|/%20)\n[第五集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8305%5D.Planet.Earth.05.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006555512|402fdec03c404145f118f6830f5b0c8f|h=koaewrnxbs74me3dnynge6y6ohwllmvb|/%20)\n[第六集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8306%5D.Planet.Earth.06.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999074319|7a27f1b9646585054a80729c8055b258|h=kf3a3i24evsgm34l6atwg7hdnaup2g3d|/%20)\n[第七集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8307%5D.Planet.Earth.07.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999175302|d5fab1283e1873337e43e52b7c4e9396|h=bmsfh3diffj4ydjo6kkmfvbcgzzg255y|/%20)\n[第八集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8308%5D.Planet.Earth.08.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006370847|1973be54a704cb9fd6430c2aab1a0699|h=avbqzzdbmndzqibeehkxtyygp6b55blg|/%20)\n[第九集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8309%5D.Planet.Earth.09.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998931813|5bbb7785ac26c7f4b28f7dfb92508d28|h=6ca2dtsgc4pqhmndr7t73agc534c3hg3|/%20)\n[第十集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8310%5D.Planet.Earth.10.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999050396|7721c08ccfa202f384291473afbe1a37|h=snuzsnsqpz4mbpcymy6426ijqtwnsamt|/%20)\n[第十一集](ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8311%5D.Planet.Earth.11.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998835608|bb9f6c586ca9b6b69a1ea31729a7ac82|h=47doibafg6pefz4dyjq2ahsmxx4nfcfi|/)\n\n### 共11集","slug":"高分电影之地球脉动-Planet-Earth-Season","published":1,"updated":"2017-11-06T06:03:46.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9nwxqnm003v4rd3xntx8t5v","content":"<h1 id=\"高分电影之地球脉动-Planet-Earth-Season\"><a href=\"#高分电影之地球脉动-Planet-Earth-Season\" class=\"headerlink\" title=\"高分电影之地球脉动 Planet Earth Season\"></a>高分电影之地球脉动 Planet Earth Season</h1><h2 id=\"地球脉动-第二季-Planet-Earth-Season-2-2016\"><a href=\"#地球脉动-第二季-Planet-Earth-Season-2-2016\" class=\"headerlink\" title=\"地球脉动 第二季 Planet Earth Season 2 2016\"></a>地球脉动 第二季 Planet Earth Season 2 2016</h2><blockquote>\n<p>这部电影不用多说，通过独立鱼了解到的，看豆瓣评分就知道了：<a href=\"https://movie.douban.com/subject/26733371/\" target=\"_blank\" rel=\"external\">豆瓣评分9.9</a><br>一共六集，每一集都很震撼，每一个镜头都非常精彩，每一个画面都是壁纸，精彩至极，美轮美奂。</p>\n</blockquote>\n<p><img src=\"http://image18.poco.cn/mypoco/myphoto/20161217/19/183365877201612171902122187116865658_000.jpg\" alt=\"地球脉动\"><br><a id=\"more\"></a><br>我大电影天堂的资源，记录上；而且貌似腾讯视频把版权买下来了。</p>\n<h3 id=\"【下载地址】\"><a href=\"#【下载地址】\" class=\"headerlink\" title=\"【下载地址】\"></a>【下载地址】</h3><p><a href=\"ftp://ygdy8:ygdy8@y219.dydytt.net:8201/[阳光电影www.ygdy8.com].地球脉动2.第一集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第一集</a><br><a href=\"ftp://ygdy8:ygdy8@y153.dydytt.net:8223/[阳光电影www.ygdy8.com].地球脉动2.第二集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第二集</a><br><a href=\"ftp://ygdy8:ygdy8@y219.dydytt.net:9225/[阳光电影www.ygdy8.com].地球脉动2.第三集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第三集</a><br><a href=\"ftp://ygdy8:ygdy8@y153.dydytt.net:9170/[阳光电影www.ygdy8.com].地球脉动2.第四集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第四集</a><br><a href=\"ftp://ygdy8:ygdy8@y219.dydytt.net:9225/[阳光电影www.ygdy8.com].地球脉动2.第五集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第五集</a><br><a href=\"ftp://ygdy8:ygdy8@y153.dydytt.net:9170/[阳光电影www.ygdy8.com].地球脉动2.第六集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第六集</a></p>\n<h3 id=\"观影感受\"><a href=\"#观影感受\" class=\"headerlink\" title=\"观影感受\"></a>观影感受</h3><h4 id=\"第一集\"><a href=\"#第一集\" class=\"headerlink\" title=\"第一集\"></a>第一集</h4><h4 id=\"第二集\"><a href=\"#第二集\" class=\"headerlink\" title=\"第二集\"></a>第二集</h4><h4 id=\"第三集-雨林\"><a href=\"#第三集-雨林\" class=\"headerlink\" title=\"第三集 雨林\"></a>第三集 雨林</h4><h4 id=\"第四集\"><a href=\"#第四集\" class=\"headerlink\" title=\"第四集\"></a>第四集</h4><h4 id=\"第五集\"><a href=\"#第五集\" class=\"headerlink\" title=\"第五集\"></a>第五集</h4><h4 id=\"第六集\"><a href=\"#第六集\" class=\"headerlink\" title=\"第六集\"></a>第六集</h4><h2 id=\"地球脉动-第一季-Planet-Earth-Season-1-2006\"><a href=\"#地球脉动-第一季-Planet-Earth-Season-1-2006\" class=\"headerlink\" title=\"地球脉动 第一季 Planet Earth Season 1 (2006)\"></a>地球脉动 第一季 Planet Earth Season 1 (2006)</h2><blockquote>\n<p>补上第一季，回头重温一遍：<a href=\"https://movie.douban.com/subject/1871906/\" target=\"_blank\" rel=\"external\">豆瓣评分9.7</a></p>\n</blockquote>\n<p><img src=\"http://ww2.sinaimg.cn/mw690/af0de422gw1f1fgkdwyqvj207r0b4q3z.jpg\" alt=\"地球脉动1\"></p>\n<h3 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"[下载地址]\"></a>[下载地址]</h3><p><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8301%5D.Planet.Earth.01.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998975412|cd24991bb3210b270156576c4876ef64|h=ntrplgbi4jzk6rhqhveqoyecxx6nfxiq|/%20\" target=\"_blank\" rel=\"external\">第一集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8302%5D.Planet.Earth.02.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006495160|2d74749d73de3a6510186a3112e1130a|h=cqlmfmilhyipyot7s5wpehasbdjjvlfd|/%20\" target=\"_blank\" rel=\"external\">第二集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8303%5D.Planet.Earth.03.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999102809|5db35d5591c92a3b5d80b6dcbffd9d72|h=b6f5t5jtnwehq7pmsbfjoohnltcgso5m|/%20\" target=\"_blank\" rel=\"external\">第三集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8304%5D.Planet.Earth.04.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999118732|29c6275de49faeb068a85baa7eaffcb2|h=j5xr6qlkkelfr76te4df7sride26qh24|/%20\" target=\"_blank\" rel=\"external\">第四集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8305%5D.Planet.Earth.05.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006555512|402fdec03c404145f118f6830f5b0c8f|h=koaewrnxbs74me3dnynge6y6ohwllmvb|/%20\" target=\"_blank\" rel=\"external\">第五集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8306%5D.Planet.Earth.06.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999074319|7a27f1b9646585054a80729c8055b258|h=kf3a3i24evsgm34l6atwg7hdnaup2g3d|/%20\" target=\"_blank\" rel=\"external\">第六集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8307%5D.Planet.Earth.07.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999175302|d5fab1283e1873337e43e52b7c4e9396|h=bmsfh3diffj4ydjo6kkmfvbcgzzg255y|/%20\" target=\"_blank\" rel=\"external\">第七集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8308%5D.Planet.Earth.08.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006370847|1973be54a704cb9fd6430c2aab1a0699|h=avbqzzdbmndzqibeehkxtyygp6b55blg|/%20\" target=\"_blank\" rel=\"external\">第八集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8309%5D.Planet.Earth.09.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998931813|5bbb7785ac26c7f4b28f7dfb92508d28|h=6ca2dtsgc4pqhmndr7t73agc534c3hg3|/%20\" target=\"_blank\" rel=\"external\">第九集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8310%5D.Planet.Earth.10.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999050396|7721c08ccfa202f384291473afbe1a37|h=snuzsnsqpz4mbpcymy6426ijqtwnsamt|/%20\" target=\"_blank\" rel=\"external\">第十集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8311%5D.Planet.Earth.11.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998835608|bb9f6c586ca9b6b69a1ea31729a7ac82|h=47doibafg6pefz4dyjq2ahsmxx4nfcfi|/\" target=\"_blank\" rel=\"external\">第十一集</a></p>\n<h3 id=\"共11集\"><a href=\"#共11集\" class=\"headerlink\" title=\"共11集\"></a>共11集</h3>","site":{"data":{}},"excerpt":"<h1 id=\"高分电影之地球脉动-Planet-Earth-Season\"><a href=\"#高分电影之地球脉动-Planet-Earth-Season\" class=\"headerlink\" title=\"高分电影之地球脉动 Planet Earth Season\"></a>高分电影之地球脉动 Planet Earth Season</h1><h2 id=\"地球脉动-第二季-Planet-Earth-Season-2-2016\"><a href=\"#地球脉动-第二季-Planet-Earth-Season-2-2016\" class=\"headerlink\" title=\"地球脉动 第二季 Planet Earth Season 2 2016\"></a>地球脉动 第二季 Planet Earth Season 2 2016</h2><blockquote>\n<p>这部电影不用多说，通过独立鱼了解到的，看豆瓣评分就知道了：<a href=\"https://movie.douban.com/subject/26733371/\" target=\"_blank\" rel=\"external\">豆瓣评分9.9</a><br>一共六集，每一集都很震撼，每一个镜头都非常精彩，每一个画面都是壁纸，精彩至极，美轮美奂。</p>\n</blockquote>\n<p><img src=\"http://image18.poco.cn/mypoco/myphoto/20161217/19/183365877201612171902122187116865658_000.jpg\" alt=\"地球脉动\"><br>","more":"<br>我大电影天堂的资源，记录上；而且貌似腾讯视频把版权买下来了。</p>\n<h3 id=\"【下载地址】\"><a href=\"#【下载地址】\" class=\"headerlink\" title=\"【下载地址】\"></a>【下载地址】</h3><p><a href=\"ftp://ygdy8:ygdy8@y219.dydytt.net:8201/[阳光电影www.ygdy8.com].地球脉动2.第一集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第一集</a><br><a href=\"ftp://ygdy8:ygdy8@y153.dydytt.net:8223/[阳光电影www.ygdy8.com].地球脉动2.第二集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第二集</a><br><a href=\"ftp://ygdy8:ygdy8@y219.dydytt.net:9225/[阳光电影www.ygdy8.com].地球脉动2.第三集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第三集</a><br><a href=\"ftp://ygdy8:ygdy8@y153.dydytt.net:9170/[阳光电影www.ygdy8.com].地球脉动2.第四集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第四集</a><br><a href=\"ftp://ygdy8:ygdy8@y219.dydytt.net:9225/[阳光电影www.ygdy8.com].地球脉动2.第五集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第五集</a><br><a href=\"ftp://ygdy8:ygdy8@y153.dydytt.net:9170/[阳光电影www.ygdy8.com].地球脉动2.第六集.BD.720p.中英双字幕.mkv\" target=\"_blank\" rel=\"external\">第六集</a></p>\n<h3 id=\"观影感受\"><a href=\"#观影感受\" class=\"headerlink\" title=\"观影感受\"></a>观影感受</h3><h4 id=\"第一集\"><a href=\"#第一集\" class=\"headerlink\" title=\"第一集\"></a>第一集</h4><h4 id=\"第二集\"><a href=\"#第二集\" class=\"headerlink\" title=\"第二集\"></a>第二集</h4><h4 id=\"第三集-雨林\"><a href=\"#第三集-雨林\" class=\"headerlink\" title=\"第三集 雨林\"></a>第三集 雨林</h4><h4 id=\"第四集\"><a href=\"#第四集\" class=\"headerlink\" title=\"第四集\"></a>第四集</h4><h4 id=\"第五集\"><a href=\"#第五集\" class=\"headerlink\" title=\"第五集\"></a>第五集</h4><h4 id=\"第六集\"><a href=\"#第六集\" class=\"headerlink\" title=\"第六集\"></a>第六集</h4><h2 id=\"地球脉动-第一季-Planet-Earth-Season-1-2006\"><a href=\"#地球脉动-第一季-Planet-Earth-Season-1-2006\" class=\"headerlink\" title=\"地球脉动 第一季 Planet Earth Season 1 (2006)\"></a>地球脉动 第一季 Planet Earth Season 1 (2006)</h2><blockquote>\n<p>补上第一季，回头重温一遍：<a href=\"https://movie.douban.com/subject/1871906/\" target=\"_blank\" rel=\"external\">豆瓣评分9.7</a></p>\n</blockquote>\n<p><img src=\"http://ww2.sinaimg.cn/mw690/af0de422gw1f1fgkdwyqvj207r0b4q3z.jpg\" alt=\"地球脉动1\"></p>\n<h3 id=\"下载地址\"><a href=\"#下载地址\" class=\"headerlink\" title=\"[下载地址]\"></a>[下载地址]</h3><p><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8301%5D.Planet.Earth.01.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998975412|cd24991bb3210b270156576c4876ef64|h=ntrplgbi4jzk6rhqhveqoyecxx6nfxiq|/%20\" target=\"_blank\" rel=\"external\">第一集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8302%5D.Planet.Earth.02.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006495160|2d74749d73de3a6510186a3112e1130a|h=cqlmfmilhyipyot7s5wpehasbdjjvlfd|/%20\" target=\"_blank\" rel=\"external\">第二集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8303%5D.Planet.Earth.03.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999102809|5db35d5591c92a3b5d80b6dcbffd9d72|h=b6f5t5jtnwehq7pmsbfjoohnltcgso5m|/%20\" target=\"_blank\" rel=\"external\">第三集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8304%5D.Planet.Earth.04.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999118732|29c6275de49faeb068a85baa7eaffcb2|h=j5xr6qlkkelfr76te4df7sride26qh24|/%20\" target=\"_blank\" rel=\"external\">第四集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8305%5D.Planet.Earth.05.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006555512|402fdec03c404145f118f6830f5b0c8f|h=koaewrnxbs74me3dnynge6y6ohwllmvb|/%20\" target=\"_blank\" rel=\"external\">第五集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8306%5D.Planet.Earth.06.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999074319|7a27f1b9646585054a80729c8055b258|h=kf3a3i24evsgm34l6atwg7hdnaup2g3d|/%20\" target=\"_blank\" rel=\"external\">第六集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8307%5D.Planet.Earth.07.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999175302|d5fab1283e1873337e43e52b7c4e9396|h=bmsfh3diffj4ydjo6kkmfvbcgzzg255y|/%20\" target=\"_blank\" rel=\"external\">第七集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8308%5D.Planet.Earth.08.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|1006370847|1973be54a704cb9fd6430c2aab1a0699|h=avbqzzdbmndzqibeehkxtyygp6b55blg|/%20\" target=\"_blank\" rel=\"external\">第八集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8309%5D.Planet.Earth.09.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998931813|5bbb7785ac26c7f4b28f7dfb92508d28|h=6ca2dtsgc4pqhmndr7t73agc534c3hg3|/%20\" target=\"_blank\" rel=\"external\">第九集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8310%5D.Planet.Earth.10.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|999050396|7721c08ccfa202f384291473afbe1a37|h=snuzsnsqpz4mbpcymy6426ijqtwnsamt|/%20\" target=\"_blank\" rel=\"external\">第十集</a><br><a href=\"ed2k://|file|%5B%E8%A1%8C%E6%98%9F%E5%9C%B0%E7%90%8311%5D.Planet.Earth.11.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.HR-HDTV.AC3.960X528.x264-%E4%BA%BA%E4%BA%BA%E5%BD%B1%E8%A7%86.mkv|998835608|bb9f6c586ca9b6b69a1ea31729a7ac82|h=47doibafg6pefz4dyjq2ahsmxx4nfcfi|/\" target=\"_blank\" rel=\"external\">第十一集</a></p>\n<h3 id=\"共11集\"><a href=\"#共11集\" class=\"headerlink\" title=\"共11集\"></a>共11集</h3>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9nwxqks00014rd3ileydgw6","category_id":"cj9nwxql200054rd398pq7js1","_id":"cj9nwxqlh000i4rd36dw3gtuy"},{"post_id":"cj9nwxqky00034rd330bmp689","category_id":"cj9nwxql9000c4rd31s94dh6n","_id":"cj9nwxqlk000p4rd34q2ofzi9"},{"post_id":"cj9nwxql400074rd33irsvyml","category_id":"cj9nwxqlh000j4rd3hlgkdn3d","_id":"cj9nwxqls000v4rd3b3b10f7n"},{"post_id":"cj9nwxqlj000n4rd3nintr7a0","category_id":"cj9nwxql9000c4rd31s94dh6n","_id":"cj9nwxqlu000y4rd3drb32fgw"},{"post_id":"cj9nwxql8000b4rd30w96skgk","category_id":"cj9nwxql9000c4rd31s94dh6n","_id":"cj9nwxqlv00114rd33n7gx26f"},{"post_id":"cj9nwxqln000t4rd3yp1pczxb","category_id":"cj9nwxql9000c4rd31s94dh6n","_id":"cj9nwxqlx00164rd3dje8j1c7"},{"post_id":"cj9nwxqle000f4rd3pfbo2l5u","category_id":"cj9nwxqlo000u4rd3djsguud8","_id":"cj9nwxqly00184rd3ltr6uc0x"},{"post_id":"cj9nwxqlx00174rd3xqct0iuc","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqma001g4rd33i6y3edp"},{"post_id":"cj9nwxqly00194rd36u6rrahx","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqmc001k4rd3m9s6sumx"},{"post_id":"cj9nwxqm0001d4rd3s5wp2lou","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqmd001m4rd3crjs4k8e"},{"post_id":"cj9nwxqm1001f4rd3wwcqm7on","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqmf001q4rd30u8ciffe"},{"post_id":"cj9nwxqmb001j4rd3cjkpbeb0","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqmh001t4rd380llwm33"},{"post_id":"cj9nwxqlt000x4rd33yud1w6g","category_id":"cj9nwxqma001h4rd327v48mqy","_id":"cj9nwxqms001y4rd3ol1iijop"},{"post_id":"cj9nwxqmc001l4rd3gz2nz20c","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqmt00214rd3vkla42g6"},{"post_id":"cj9nwxqme001p4rd3n9chf72l","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqmu00254rd3852zvrs0"},{"post_id":"cj9nwxqlu00104rd3kf8wo0wg","category_id":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqmw00294rd39e33bbzc"},{"post_id":"cj9nwxqlv00144rd3aeqvvwbs","category_id":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqmx002d4rd3t9gvr001"},{"post_id":"cj9nwxqmu00244rd3v7aiovz4","category_id":"cj9nwxqma001h4rd327v48mqy","_id":"cj9nwxqmz002g4rd3s8is15em"},{"post_id":"cj9nwxqli000l4rd3t9l8q0fh","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqn0002k4rd3f00s6jb7"},{"post_id":"cj9nwxqli000l4rd3t9l8q0fh","category_id":"cj9nwxqmt00224rd3aul3aga2","_id":"cj9nwxqn2002n4rd3laban5lp"},{"post_id":"cj9nwxqmw00284rd339kau0s6","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqn4002q4rd36z7fyfk9"},{"post_id":"cj9nwxqmx002c4rd3f6aa0yxq","category_id":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqn6002u4rd3vh3a47m1"},{"post_id":"cj9nwxqlm000s4rd3i7wh7chc","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqn7002w4rd35yv26m91"},{"post_id":"cj9nwxqlm000s4rd3i7wh7chc","category_id":"cj9nwxqmt00224rd3aul3aga2","_id":"cj9nwxqn800304rd3104x7td7"},{"post_id":"cj9nwxqmy002f4rd39h4genpy","category_id":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqn900334rd3z4ljag66"},{"post_id":"cj9nwxqn1002m4rd3j59hf2c1","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqna00364rd3bb24p17u"},{"post_id":"cj9nwxqmg001s4rd3hb9p9u5n","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqnb003a4rd325lmu5br"},{"post_id":"cj9nwxqmg001s4rd3hb9p9u5n","category_id":"cj9nwxqmz002i4rd38bh5a0p5","_id":"cj9nwxqne003e4rd319uktv94"},{"post_id":"cj9nwxqn3002p4rd3qxosl85x","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqnf003i4rd3ro5gue6i"},{"post_id":"cj9nwxqmm001x4rd3ua3xvy5v","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqnh003l4rd364zzu6sb"},{"post_id":"cj9nwxqmm001x4rd3ua3xvy5v","category_id":"cj9nwxqn4002r4rd3ltq5tnpt","_id":"cj9nwxqnk003p4rd3tn6q6ws3"},{"post_id":"cj9nwxqn7002z4rd3no88ijri","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqnl003s4rd3bbgfott3"},{"post_id":"cj9nwxqn800324rd37ev36u93","category_id":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqnn003w4rd3a8m9geaa"},{"post_id":"cj9nwxqna00354rd3x1qa0421","category_id":"cj9nwxqn7002x4rd3msaefaz6","_id":"cj9nwxqnn003x4rd3736xe2s8"},{"post_id":"cj9nwxqn0002j4rd3uprqko70","category_id":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqno00404rd3kfwzk8oj"},{"post_id":"cj9nwxqn0002j4rd3uprqko70","category_id":"cj9nwxqn900344rd3qjzmi6t2","_id":"cj9nwxqno00424rd3qs64j13p"},{"post_id":"cj9nwxqmt00204rd3syqg5rml","category_id":"cj9nwxqn7002x4rd3msaefaz6","_id":"cj9nwxqnr00464rd3s25sgobm"},{"post_id":"cj9nwxqmt00204rd3syqg5rml","category_id":"cj9nwxqnc003b4rd3whi81d1x","_id":"cj9nwxqnr00484rd3kkyk4bdy"},{"post_id":"cj9nwxqni003o4rd341q30net","category_id":"cj9nwxqlv00134rd3mx50pcmj","_id":"cj9nwxqns004a4rd35c3glsw1"},{"post_id":"cj9nwxqnb00394rd3kllky872","category_id":"cj9nwxqnh003m4rd3geesj1he","_id":"cj9nwxqns004d4rd3f05h5ul3"},{"post_id":"cj9nwxqnk003r4rd3cuyrfssg","category_id":"cj9nwxqlo000u4rd3djsguud8","_id":"cj9nwxqns004e4rd3sfkkyntm"},{"post_id":"cj9nwxqnc003d4rd3g3yz9c9g","category_id":"cj9nwxqnl003t4rd3lxqpzz8o","_id":"cj9nwxqnt004g4rd3t23jbfht"},{"post_id":"cj9nwxqnf003h4rd3vnvebw5e","category_id":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqnt004i4rd3jyeizxhm"},{"post_id":"cj9nwxqnf003h4rd3vnvebw5e","category_id":"cj9nwxqno003y4rd391yh12tw","_id":"cj9nwxqnt004k4rd3xxknycgj"},{"post_id":"cj9nwxqng003k4rd36hdi5lg7","category_id":"cj9nwxqme001n4rd3axmmvfbs","_id":"cj9nwxqnt004m4rd36b1oap0m"},{"post_id":"cj9nwxqng003k4rd36hdi5lg7","category_id":"cj9nwxqno003y4rd391yh12tw","_id":"cj9nwxqnu004p4rd3ccp4nr0o"},{"post_id":"cj9nwxqnm003v4rd3xntx8t5v","category_id":"cj9nwxqn7002x4rd3msaefaz6","_id":"cj9nwxqnu004q4rd3446ziq7x"},{"post_id":"cj9nwxqnm003v4rd3xntx8t5v","category_id":"cj9nwxqnr00494rd3b0ma36sc","_id":"cj9nwxqnu004r4rd3dj2pgnpx"}],"PostTag":[{"post_id":"cj9nwxqks00014rd3ileydgw6","tag_id":"cj9nwxql400064rd32vjiy39m","_id":"cj9nwxqlj000m4rd3ogm0hyfj"},{"post_id":"cj9nwxqks00014rd3ileydgw6","tag_id":"cj9nwxql9000d4rd3ky9ceiub","_id":"cj9nwxqlk000o4rd3lbjud0pn"},{"post_id":"cj9nwxqky00034rd330bmp689","tag_id":"cj9nwxqlh000k4rd3tfkv4amd","_id":"cj9nwxqlu000z4rd35bkaew31"},{"post_id":"cj9nwxqky00034rd330bmp689","tag_id":"cj9nwxqll000r4rd3j84v2zcy","_id":"cj9nwxqlv00124rd3l2czkwpg"},{"post_id":"cj9nwxqlx00174rd3xqct0iuc","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqm0001c4rd3cfolhq4s"},{"post_id":"cj9nwxqly00194rd36u6rrahx","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqm1001e4rd39ya98wvo"},{"post_id":"cj9nwxql400074rd33irsvyml","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqmg001r4rd357d8mnel"},{"post_id":"cj9nwxql400074rd33irsvyml","tag_id":"cj9nwxqlw00154rd3i1mv5xrc","_id":"cj9nwxqml001v4rd3ohawbqzp"},{"post_id":"cj9nwxql400074rd33irsvyml","tag_id":"cj9nwxqlz001b4rd36mq2nkyi","_id":"cj9nwxqms001z4rd3fvytzj5d"},{"post_id":"cj9nwxql400074rd33irsvyml","tag_id":"cj9nwxqmb001i4rd3lqdt6fj6","_id":"cj9nwxqmu00234rd3rlmd8tj7"},{"post_id":"cj9nwxql8000b4rd30w96skgk","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqmv00274rd3zygtw6eq"},{"post_id":"cj9nwxql8000b4rd30w96skgk","tag_id":"cj9nwxqmm001w4rd3jc6qpxky","_id":"cj9nwxqmx002b4rd3ll5bkj8z"},{"post_id":"cj9nwxqle000f4rd3pfbo2l5u","tag_id":"cj9nwxqmv00264rd3r6swv0u2","_id":"cj9nwxqmz002h4rd3zwexqh2b"},{"post_id":"cj9nwxqlg000h4rd3xj9hv7qa","tag_id":"cj9nwxqmy002e4rd36mrnqkci","_id":"cj9nwxqn2002o4rd3ui6iwbos"},{"post_id":"cj9nwxqn6002v4rd309k7lwtc","tag_id":"cj9nwxqmm001w4rd3jc6qpxky","_id":"cj9nwxqn800314rd3mlyq8r4k"},{"post_id":"cj9nwxqli000l4rd3t9l8q0fh","tag_id":"cj9nwxqmm001w4rd3jc6qpxky","_id":"cj9nwxqnb00384rd34qmhfuvn"},{"post_id":"cj9nwxqli000l4rd3t9l8q0fh","tag_id":"cj9nwxqn5002s4rd3pv4ruz9t","_id":"cj9nwxqnc003c4rd3h5w2emv9"},{"post_id":"cj9nwxqli000l4rd3t9l8q0fh","tag_id":"cj9nwxqn7002y4rd3xp1al4s5","_id":"cj9nwxqne003g4rd3bq2edo6i"},{"post_id":"cj9nwxqlj000n4rd3nintr7a0","tag_id":"cj9nwxqna00374rd3hd7w2sp1","_id":"cj9nwxqng003j4rd3m5sziw0f"},{"post_id":"cj9nwxqlm000s4rd3i7wh7chc","tag_id":"cj9nwxqmm001w4rd3jc6qpxky","_id":"cj9nwxqnk003q4rd3t2a2f7h0"},{"post_id":"cj9nwxqln000t4rd3yp1pczxb","tag_id":"cj9nwxqmm001w4rd3jc6qpxky","_id":"cj9nwxqno00414rd3fdqt8c2k"},{"post_id":"cj9nwxqln000t4rd3yp1pczxb","tag_id":"cj9nwxqnm003u4rd3kc0qmhjc","_id":"cj9nwxqnq00434rd38cfb567o"},{"post_id":"cj9nwxqlt000x4rd33yud1w6g","tag_id":"cj9nwxqno003z4rd3ikk3bly1","_id":"cj9nwxqnr00474rd3b2t7zu4z"},{"post_id":"cj9nwxqlu00104rd3kf8wo0wg","tag_id":"cj9nwxqnq00454rd3np9osenu","_id":"cj9nwxqns004c4rd3p5lcap78"},{"post_id":"cj9nwxqlv00144rd3aeqvvwbs","tag_id":"cj9nwxqns004b4rd3pcnfkq8m","_id":"cj9nwxqnt004h4rd3oeagh2pn"},{"post_id":"cj9nwxqm0001d4rd3s5wp2lou","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqnt004l4rd303xww6bo"},{"post_id":"cj9nwxqm0001d4rd3s5wp2lou","tag_id":"cj9nwxqns004f4rd3hnnrsu5q","_id":"cj9nwxqnt004n4rd3jgjrqsrv"},{"post_id":"cj9nwxqm1001f4rd3wwcqm7on","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqnv004u4rd3lqaqqggn"},{"post_id":"cj9nwxqm1001f4rd3wwcqm7on","tag_id":"cj9nwxqnt004j4rd3gj01cife","_id":"cj9nwxqnv004v4rd3w7qclke7"},{"post_id":"cj9nwxqm1001f4rd3wwcqm7on","tag_id":"cj9nwxqnt004o4rd3d3nne8gk","_id":"cj9nwxqnv004x4rd3rjsfql64"},{"post_id":"cj9nwxqm1001f4rd3wwcqm7on","tag_id":"cj9nwxqnu004s4rd3iuh9ii7a","_id":"cj9nwxqnv004y4rd3o4codc3k"},{"post_id":"cj9nwxqmb001j4rd3cjkpbeb0","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqnw00504rd3aj89thup"},{"post_id":"cj9nwxqmb001j4rd3cjkpbeb0","tag_id":"cj9nwxqnu004t4rd3o7ahw65z","_id":"cj9nwxqnw00514rd3fzsxhjdg"},{"post_id":"cj9nwxqmb001j4rd3cjkpbeb0","tag_id":"cj9nwxqnv004w4rd36ab4wyty","_id":"cj9nwxqnw00534rd3heu212il"},{"post_id":"cj9nwxqmc001l4rd3gz2nz20c","tag_id":"cj9nwxqnv004z4rd3jx9sxbi9","_id":"cj9nwxqnx00544rd3f3hsaphx"},{"post_id":"cj9nwxqme001p4rd3n9chf72l","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqnx00574rd3nx0brxfj"},{"post_id":"cj9nwxqme001p4rd3n9chf72l","tag_id":"cj9nwxqnw00524rd3f5tekbip","_id":"cj9nwxqny00584rd37qy36pl3"},{"post_id":"cj9nwxqme001p4rd3n9chf72l","tag_id":"cj9nwxqnx00554rd38hivxgv6","_id":"cj9nwxqny005a4rd3ohf4027d"},{"post_id":"cj9nwxqmg001s4rd3hb9p9u5n","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqny005c4rd3g5hfg6xu"},{"post_id":"cj9nwxqmg001s4rd3hb9p9u5n","tag_id":"cj9nwxqnx00564rd3k4t6tbhm","_id":"cj9nwxqny005d4rd3whxmck4m"},{"post_id":"cj9nwxqmg001s4rd3hb9p9u5n","tag_id":"cj9nwxqny00594rd3g10pvtda","_id":"cj9nwxqnz005f4rd352cnreb8"},{"post_id":"cj9nwxqmm001x4rd3ua3xvy5v","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqnz005g4rd3cifzbezy"},{"post_id":"cj9nwxqmm001x4rd3ua3xvy5v","tag_id":"cj9nwxqny005b4rd31xyxd1se","_id":"cj9nwxqnz005i4rd3luecajq2"},{"post_id":"cj9nwxqmt00204rd3syqg5rml","tag_id":"cj9nwxqny005e4rd3w43dqmjr","_id":"cj9nwxqnz005k4rd3kpi1m8qp"},{"post_id":"cj9nwxqmt00204rd3syqg5rml","tag_id":"cj9nwxqnz005h4rd38aouh7cd","_id":"cj9nwxqo0005l4rd3ty39mt0e"},{"post_id":"cj9nwxqmu00244rd3v7aiovz4","tag_id":"cj9nwxqnz005j4rd3jueahwb2","_id":"cj9nwxqo0005n4rd3lsrs450q"},{"post_id":"cj9nwxqmw00284rd339kau0s6","tag_id":"cj9nwxqo0005m4rd3dwsings8","_id":"cj9nwxqo0005p4rd31q6fk0lc"},{"post_id":"cj9nwxqmx002c4rd3f6aa0yxq","tag_id":"cj9nwxqo0005o4rd3l6ydr2kl","_id":"cj9nwxqo1005s4rd3mhdk4gjm"},{"post_id":"cj9nwxqmx002c4rd3f6aa0yxq","tag_id":"cj9nwxqo0005q4rd3cmgmekht","_id":"cj9nwxqo1005t4rd3fh4bcp90"},{"post_id":"cj9nwxqmy002f4rd39h4genpy","tag_id":"cj9nwxqo0005o4rd3l6ydr2kl","_id":"cj9nwxqo3005w4rd3bztitpfk"},{"post_id":"cj9nwxqmy002f4rd39h4genpy","tag_id":"cj9nwxqo1005u4rd33baazmbp","_id":"cj9nwxqo3005x4rd3u736dp27"},{"post_id":"cj9nwxqn0002j4rd3uprqko70","tag_id":"cj9nwxqo0005o4rd3l6ydr2kl","_id":"cj9nwxqo3005z4rd3pgaeyqw9"},{"post_id":"cj9nwxqn1002m4rd3j59hf2c1","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqo400614rd3jvjelci7"},{"post_id":"cj9nwxqn1002m4rd3j59hf2c1","tag_id":"cj9nwxqo3005y4rd3v4woo1yv","_id":"cj9nwxqo400624rd3zv0jae96"},{"post_id":"cj9nwxqn3002p4rd3qxosl85x","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqo400644rd3mdr7gywd"},{"post_id":"cj9nwxqn3002p4rd3qxosl85x","tag_id":"cj9nwxqo400604rd30ptz1drq","_id":"cj9nwxqo500654rd3j9g8hs8h"},{"post_id":"cj9nwxqn7002z4rd3no88ijri","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqo600684rd3m2dwskwa"},{"post_id":"cj9nwxqn7002z4rd3no88ijri","tag_id":"cj9nwxqo400634rd3dxbgkpvc","_id":"cj9nwxqo600694rd3h07j0pyd"},{"post_id":"cj9nwxqn7002z4rd3no88ijri","tag_id":"cj9nwxqmm001w4rd3jc6qpxky","_id":"cj9nwxqo7006b4rd349hrihl2"},{"post_id":"cj9nwxqn7002z4rd3no88ijri","tag_id":"cj9nwxqo500664rd3r6m9b7cm","_id":"cj9nwxqo7006c4rd3nh4gjni1"},{"post_id":"cj9nwxqn7002z4rd3no88ijri","tag_id":"cj9nwxqmy002e4rd36mrnqkci","_id":"cj9nwxqo7006e4rd37ywbr585"},{"post_id":"cj9nwxqn800324rd37ev36u93","tag_id":"cj9nwxqo500674rd38undjh2x","_id":"cj9nwxqo8006f4rd3p75sccwj"},{"post_id":"cj9nwxqna00354rd3x1qa0421","tag_id":"cj9nwxqo6006a4rd33qhg8cv4","_id":"cj9nwxqo9006h4rd3kgmp4sta"},{"post_id":"cj9nwxqnb00394rd3kllky872","tag_id":"cj9nwxqo7006d4rd3jm39zz9t","_id":"cj9nwxqoa006i4rd3ixu3pnvf"},{"post_id":"cj9nwxqnc003d4rd3g3yz9c9g","tag_id":"cj9nwxqo8006g4rd3qb2bkgg8","_id":"cj9nwxqoa006l4rd3xkgsho80"},{"post_id":"cj9nwxqnc003d4rd3g3yz9c9g","tag_id":"cj9nwxqoa006j4rd3a089zxv9","_id":"cj9nwxqoa006m4rd3hw6y8z62"},{"post_id":"cj9nwxqnf003h4rd3vnvebw5e","tag_id":"cj9nwxqoa006k4rd32mo2c3hs","_id":"cj9nwxqob006q4rd3jxr0dye6"},{"post_id":"cj9nwxqnf003h4rd3vnvebw5e","tag_id":"cj9nwxqob006n4rd3rsxo30tw","_id":"cj9nwxqoc006r4rd3hjz81lq7"},{"post_id":"cj9nwxqnf003h4rd3vnvebw5e","tag_id":"cj9nwxqob006o4rd3741bghtm","_id":"cj9nwxqoc006t4rd36r424oci"},{"post_id":"cj9nwxqng003k4rd36hdi5lg7","tag_id":"cj9nwxqoa006k4rd32mo2c3hs","_id":"cj9nwxqod006w4rd34qsupbrl"},{"post_id":"cj9nwxqng003k4rd36hdi5lg7","tag_id":"cj9nwxqob006n4rd3rsxo30tw","_id":"cj9nwxqod006x4rd3tp7ojypv"},{"post_id":"cj9nwxqng003k4rd36hdi5lg7","tag_id":"cj9nwxqob006o4rd3741bghtm","_id":"cj9nwxqod006z4rd3e78kzqqb"},{"post_id":"cj9nwxqni003o4rd341q30net","tag_id":"cj9nwxqod006v4rd3iw122zgv","_id":"cj9nwxqod00704rd3fmu3e67z"},{"post_id":"cj9nwxqni003o4rd341q30net","tag_id":"cj9nwxqls000w4rd3rre82uwf","_id":"cj9nwxqoe00724rd3e6vd3qci"},{"post_id":"cj9nwxqnk003r4rd3cuyrfssg","tag_id":"cj9nwxqod006y4rd3gau080ks","_id":"cj9nwxqoe00744rd3eyavedrm"},{"post_id":"cj9nwxqnk003r4rd3cuyrfssg","tag_id":"cj9nwxqod00714rd3mqgv1245","_id":"cj9nwxqoe00754rd3gflik8fc"},{"post_id":"cj9nwxqnm003v4rd3xntx8t5v","tag_id":"cj9nwxqoe00734rd3o1bx2fui","_id":"cj9nwxqof00774rd3nhc3h2h0"},{"post_id":"cj9nwxqnm003v4rd3xntx8t5v","tag_id":"cj9nwxqoe00764rd30dhf82h5","_id":"cj9nwxqof00784rd3s10q63e8"}],"Tag":[{"name":"总结","_id":"cj9nwxql400064rd32vjiy39m"},{"name":"复习","_id":"cj9nwxql9000d4rd3ky9ceiub"},{"name":"many-to-many","_id":"cj9nwxqlh000k4rd3tfkv4amd"},{"name":"model","_id":"cj9nwxqll000r4rd3j84v2zcy"},{"name":"python","_id":"cj9nwxqls000w4rd3rre82uwf"},{"name":"selenium","_id":"cj9nwxqlw00154rd3i1mv5xrc"},{"name":"Remote","_id":"cj9nwxqlz001b4rd36mq2nkyi"},{"name":"UI自动化","_id":"cj9nwxqmb001i4rd3lqdt6fj6"},{"name":"django","_id":"cj9nwxqmm001w4rd3jc6qpxky"},{"name":"English","_id":"cj9nwxqmv00264rd3r6swv0u2"},{"name":"celery","_id":"cj9nwxqmy002e4rd36mrnqkci"},{"name":"modeladmin","_id":"cj9nwxqn5002s4rd3pv4ruz9t"},{"name":"action","_id":"cj9nwxqn7002y4rd3xp1al4s5"},{"name":"联合唯一索引","_id":"cj9nwxqna00374rd3hd7w2sp1"},{"name":"jquery","_id":"cj9nwxqnm003u4rd3kc0qmhjc"},{"name":"auto deploy","_id":"cj9nwxqno003z4rd3ikk3bly1"},{"name":"linux","_id":"cj9nwxqnq00454rd3np9osenu"},{"name":"linux, ubuntu, rsa认证","_id":"cj9nwxqns004b4rd3pcnfkq8m"},{"name":"迭代","_id":"cj9nwxqns004f4rd3hnnrsu5q"},{"name":"排序","_id":"cj9nwxqnt004j4rd3gj01cife"},{"name":"sort","_id":"cj9nwxqnt004o4rd3d3nne8gk"},{"name":"sorted","_id":"cj9nwxqnu004s4rd3iuh9ii7a"},{"name":"文件","_id":"cj9nwxqnu004t4rd3o7ahw65z"},{"name":"读写","_id":"cj9nwxqnv004w4rd36ab4wyty"},{"name":"PIL","_id":"cj9nwxqnv004z4rd3jx9sxbi9"},{"name":"数据结构","_id":"cj9nwxqnw00524rd3f5tekbip"},{"name":"二叉树","_id":"cj9nwxqnx00554rd38hivxgv6"},{"name":"单例","_id":"cj9nwxqnx00564rd3k4t6tbhm"},{"name":"设计模式","_id":"cj9nwxqny00594rd3g10pvtda"},{"name":"风格","_id":"cj9nwxqny005b4rd31xyxd1se"},{"name":"sense8","_id":"cj9nwxqny005e4rd3w43dqmjr"},{"name":"what's up","_id":"cj9nwxqnz005h4rd38aouh7cd"},{"name":"hexo","_id":"cj9nwxqnz005j4rd3jueahwb2"},{"name":"python unittest test","_id":"cj9nwxqo0005m4rd3dwsings8"},{"name":"ubuntu","_id":"cj9nwxqo0005o4rd3l6ydr2kl"},{"name":"常用工具","_id":"cj9nwxqo0005q4rd3cmgmekht"},{"name":"Thunderbird","_id":"cj9nwxqo1005u4rd33baazmbp"},{"name":"url","_id":"cj9nwxqo3005y4rd3v4woo1yv"},{"name":"urlparse","_id":"cj9nwxqo400604rd30ptz1drq"},{"name":"gunicorn","_id":"cj9nwxqo400634rd3dxbgkpvc"},{"name":"supervisor","_id":"cj9nwxqo500664rd3r6m9b7cm"},{"name":"git","_id":"cj9nwxqo500674rd38undjh2x"},{"name":"北京工作居住证","_id":"cj9nwxqo6006a4rd33qhg8cv4"},{"name":"redis","_id":"cj9nwxqo7006d4rd3jm39zz9t"},{"name":"自动化","_id":"cj9nwxqo8006g4rd3qb2bkgg8"},{"name":"用例","_id":"cj9nwxqoa006j4rd3a089zxv9"},{"name":"shadowsocks","_id":"cj9nwxqoa006k4rd32mo2c3hs"},{"name":"vpn","_id":"cj9nwxqob006n4rd3rsxo30tw"},{"name":"vps","_id":"cj9nwxqob006o4rd3741bghtm"},{"name":"递归","_id":"cj9nwxqod006v4rd3iw122zgv"},{"name":"英语","_id":"cj9nwxqod006y4rd3gau080ks"},{"name":"虚拟语气","_id":"cj9nwxqod00714rd3mqgv1245"},{"name":"高分电影","_id":"cj9nwxqoe00734rd3o1bx2fui"},{"name":"地球脉动","_id":"cj9nwxqoe00764rd30dhf82h5"}]}}